#0Y_ #0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "SYSTEM"))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|SYSTEM|::|DEFMACRO-SPECIAL|)
(|SYSTEM|::|%PUTD| '|SYSTEM|::|DEFMACRO-SPECIAL|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |SYSTEM|::|DEFMACRO-SPECIAL|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|<MACRO-FORM>|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|WHOLE-FORM| |SYSTEM|::|<MACRO-FORM>|)
       (|SYSTEM|::|MACRODEF| (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |SYSTEM|::|DEFMACRO-SPECIAL|
       (|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
        (|SYSTEM|::|EXPANSION| |SYSTEM|::|EXPANSION-LAMBDABODY|
         |SYSTEM|::|NAME| |SYSTEM|::|LAMBDALIST| |SYSTEM|::|DOCSTRING|)
        (|SYSTEM|::|MAKE-MACRO-EXPANSION| |SYSTEM|::|MACRODEF|
         |SYSTEM|::|WHOLE-FORM|)
        (|COMMON-LISP|::|DECLARE|
         (|COMMON-LISP|::|IGNORE| |SYSTEM|::|EXPANSION-LAMBDABODY|
          |SYSTEM|::|LAMBDALIST| |SYSTEM|::|DOCSTRING|))
        `(|SYSTEM|::|%PUT| ',|SYSTEM|::|NAME| '|SYSTEM|::|MACRO|
          ,|SYSTEM|::|EXPANSION|)))))))
  '(|COMMON-LISP|::|&WHOLE| |SYSTEM|::|WHOLE-FORM| |COMMON-LISP|::|&BODY|
    |SYSTEM|::|MACRODEF|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|DEFVAR|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|DEFVAR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|DEFVAR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.
       4.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|WHOLE-FORM| |SYSTEM|::|<MACRO-FORM>|)
       (|COMMON-LISP|::|SYMBOL|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|INITIAL-VALUE|
        (|COMMON-LISP|::|IF| #2=(|COMMON-LISP|::|CDDR| . #1#)
         (|COMMON-LISP|::|CADDR| . #1#) |COMMON-LISP|::|NIL|))
       (|SYSTEM|::|SVAR| (|COMMON-LISP|::|NOT| (|COMMON-LISP|::|NULL| #2#)))
       (|SYSTEM|::|DOCSTRING| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|DEFVAR|
       (|COMMON-LISP|::|UNLESS|
        (|COMMON-LISP|::|SYMBOLP| |COMMON-LISP|::|SYMBOL|)
        (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
         |SYSTEM|::|WHOLE-FORM| :|DETAIL| |COMMON-LISP|::|SYMBOL|
         (|SYSTEM|::|TEXT| "~S: non-symbol ~S cannot be a variable")
         '|COMMON-LISP|::|DEFVAR| |COMMON-LISP|::|SYMBOL|))
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|CONSTANTP| |COMMON-LISP|::|SYMBOL|)
        (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
         |SYSTEM|::|WHOLE-FORM| :|DETAIL| |COMMON-LISP|::|SYMBOL|
         (|SYSTEM|::|TEXT|
          "~S: the constant ~S must not be redefined to be a variable")
         '|COMMON-LISP|::|DEFVAR| |COMMON-LISP|::|SYMBOL|))
       `(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
         (|COMMON-LISP|::|PROCLAIM|
          '(|COMMON-LISP|::|SPECIAL| ,|COMMON-LISP|::|SYMBOL|))
         ,@(|COMMON-LISP|::|IF| |SYSTEM|::|SVAR|
            `((|COMMON-LISP|::|UNLESS|
               (|COMMON-LISP|::|BOUNDP| ',|COMMON-LISP|::|SYMBOL|)
               (|SYSTEM|::|SET-SYMBOL-VALUE| ',|COMMON-LISP|::|SYMBOL|
                ,|SYSTEM|::|INITIAL-VALUE|))))
         ,@(|COMMON-LISP|::|IF| |SYSTEM|::|DOCSTRING|
            `((|SYSTEM|::|%SET-DOCUMENTATION| ',|COMMON-LISP|::|SYMBOL|
               '|COMMON-LISP|::|VARIABLE| ',|SYSTEM|::|DOCSTRING|)))
         ',|COMMON-LISP|::|SYMBOL|))))))
  '(|COMMON-LISP|::|&WHOLE| |SYSTEM|::|WHOLE-FORM| |COMMON-LISP|::|SYMBOL|
    |COMMON-LISP|::|&OPTIONAL|
    (|SYSTEM|::|INITIAL-VALUE| |COMMON-LISP|::|NIL| |SYSTEM|::|SVAR|)
    |SYSTEM|::|DOCSTRING|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|DEFPARAMETER|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|DEFPARAMETER|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|DEFPARAMETER|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.
       4.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|WHOLE-FORM| |SYSTEM|::|<MACRO-FORM>|)
       (|COMMON-LISP|::|SYMBOL|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|INITIAL-VALUE| (|COMMON-LISP|::|CADDR| . #1#))
       (|SYSTEM|::|DOCSTRING| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|DEFPARAMETER|
       (|COMMON-LISP|::|UNLESS|
        (|COMMON-LISP|::|SYMBOLP| |COMMON-LISP|::|SYMBOL|)
        (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
         |SYSTEM|::|WHOLE-FORM| :|DETAIL| |COMMON-LISP|::|SYMBOL|
         (|SYSTEM|::|TEXT| "~S: non-symbol ~S cannot be a variable")
         '|COMMON-LISP|::|DEFPARAMETER| |COMMON-LISP|::|SYMBOL|))
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|CONSTANTP| |COMMON-LISP|::|SYMBOL|)
        (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
         |SYSTEM|::|WHOLE-FORM| :|DETAIL| |COMMON-LISP|::|SYMBOL|
         (|SYSTEM|::|TEXT|
          "~S: the constant ~S must not be redefined to be a variable")
         '|COMMON-LISP|::|DEFPARAMETER| |COMMON-LISP|::|SYMBOL|))
       `(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
         (|COMMON-LISP|::|PROCLAIM|
          '(|COMMON-LISP|::|SPECIAL| ,|COMMON-LISP|::|SYMBOL|))
         (|SYSTEM|::|SET-SYMBOL-VALUE| ',|COMMON-LISP|::|SYMBOL|
          ,|SYSTEM|::|INITIAL-VALUE|)
         ,@(|COMMON-LISP|::|IF| |SYSTEM|::|DOCSTRING|
            `((|SYSTEM|::|%SET-DOCUMENTATION| ',|COMMON-LISP|::|SYMBOL|
               '|COMMON-LISP|::|VARIABLE| ',|SYSTEM|::|DOCSTRING|)))
         ',|COMMON-LISP|::|SYMBOL|))))))
  '(|COMMON-LISP|::|&WHOLE| |SYSTEM|::|WHOLE-FORM| |COMMON-LISP|::|SYMBOL|
    |SYSTEM|::|INITIAL-VALUE| |COMMON-LISP|::|&OPTIONAL|
    |SYSTEM|::|DOCSTRING|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|DEFCONSTANT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|DEFCONSTANT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|DEFCONSTANT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.
       4.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|WHOLE-FORM| |SYSTEM|::|<MACRO-FORM>|)
       (|COMMON-LISP|::|SYMBOL|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|INITIAL-VALUE| (|COMMON-LISP|::|CADDR| . #1#))
       (|SYSTEM|::|DOCSTRING| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|DEFCONSTANT|
       (|COMMON-LISP|::|UNLESS|
        (|COMMON-LISP|::|SYMBOLP| |COMMON-LISP|::|SYMBOL|)
        (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
         |SYSTEM|::|WHOLE-FORM| :|DETAIL| |COMMON-LISP|::|SYMBOL|
         (|SYSTEM|::|TEXT| "~S: non-symbol ~S cannot be defined constant")
         '|COMMON-LISP|::|DEFCONSTANT| |COMMON-LISP|::|SYMBOL|))
       (|COMMON-LISP|::|LET|
        ((|SYSTEM|::|INITIAL-VAR| (|COMMON-LISP|::|GENSYM|)))
        `(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
          (|SYSTEM|::|EVAL-WHEN-COMPILE|
           (|SYSTEM|::|C-PROCLAIM-CONSTANT| ',|COMMON-LISP|::|SYMBOL|
            ',|SYSTEM|::|INITIAL-VALUE|))
          (|COMMON-LISP|::|LET|
           ((,|SYSTEM|::|INITIAL-VAR| ,|SYSTEM|::|INITIAL-VALUE|))
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|CONSTANTP| ',|COMMON-LISP|::|SYMBOL|)
            (|COMMON-LISP|::|UNLESS|
             (|SYSTEM|::|CONSTANT-EQL| ,|SYSTEM|::|INITIAL-VALUE|
              ,|SYSTEM|::|INITIAL-VAR|
              (|COMMON-LISP|::|SYMBOL-VALUE| ',|COMMON-LISP|::|SYMBOL|))
             (|SYSTEM|::|CONSTANT-WARNING| ',|COMMON-LISP|::|SYMBOL|
              ',|SYSTEM|::|WHOLE-FORM| ,|SYSTEM|::|INITIAL-VAR|)))
           (|SYSTEM|::|%PROCLAIM-CONSTANT| ',|COMMON-LISP|::|SYMBOL|
            ,|SYSTEM|::|INITIAL-VAR|)
           ,@(|COMMON-LISP|::|IF| |SYSTEM|::|DOCSTRING|
              `((|SYSTEM|::|%SET-DOCUMENTATION| ',|COMMON-LISP|::|SYMBOL|
                 '|COMMON-LISP|::|VARIABLE| ',|SYSTEM|::|DOCSTRING|)))
           ',|COMMON-LISP|::|SYMBOL|))))))))
  '(|COMMON-LISP|::|&WHOLE| |SYSTEM|::|WHOLE-FORM| |COMMON-LISP|::|SYMBOL|
    |SYSTEM|::|INITIAL-VALUE| |COMMON-LISP|::|&OPTIONAL|
    |SYSTEM|::|DOCSTRING|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|SYSTEM|::|CONSTANT-EQL|)
(|SYSTEM|::|%PUTD| '|SYSTEM|::|CONSTANT-EQL|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |SYSTEM|::|CONSTANT-EQL|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4.
       4.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|NEW-FORM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|NEW-VALUE| (|COMMON-LISP|::|CADDR| . #1#))
       (|SYSTEM|::|OLD-VALUE| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|NEW-FORM|))
      (|COMMON-LISP|::|BLOCK| |SYSTEM|::|CONSTANT-EQL|
       `(|COMMON-LISP|::|EQL| ,|SYSTEM|::|NEW-VALUE|
         ,|SYSTEM|::|OLD-VALUE|))))))
  '(|SYSTEM|::|NEW-FORM| |SYSTEM|::|NEW-VALUE| |SYSTEM|::|OLD-VALUE|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|LOOSE-CONSTANT-EQL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|NEW-VALUE| |SYSTEM|::|OLD-VALUE|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL|
   |CUSTOM|::|*SUPPRESS-SIMILAR-CONSTANT-REDEFINITION-WARNING*|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|CONSTANT-WARNING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|SYMBOL| |SYSTEM|::|FORM| |SYSTEM|::|NEW-VALUE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|RETURN|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|RETURN|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|RETURN|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 1.
       2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|RETURN-VALUE|
        (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|RETURN|
       `(|COMMON-LISP|::|RETURN-FROM| |COMMON-LISP|::|NIL|
         ,|SYSTEM|::|RETURN-VALUE|))))))
  '(|COMMON-LISP|::|&OPTIONAL| |SYSTEM|::|RETURN-VALUE|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|DO/DO*-EXPAND|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|WHOLE-FORM| |SYSTEM|::|VARCLAUSELIST| |SYSTEM|::|EXITCLAUSE|
    |SYSTEM|::|BODY| |COMMON-LISP|::|DO| |COMMON-LISP|::|LET|
    |COMMON-LISP|::|PSETQ|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|DO|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|DO|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|DO|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|WHOLE-FORM| |SYSTEM|::|<MACRO-FORM>|)
       (|SYSTEM|::|VARCLAUSELIST|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|EXITCLAUSE| (|COMMON-LISP|::|CADDR| . #1#))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|DO|
       (|SYSTEM|::|DO/DO*-EXPAND| |SYSTEM|::|WHOLE-FORM|
        |SYSTEM|::|VARCLAUSELIST| |SYSTEM|::|EXITCLAUSE| |SYSTEM|::|BODY|
        '|COMMON-LISP|::|DO| '|COMMON-LISP|::|LET|
        '|COMMON-LISP|::|PSETQ|))))))
  '(|COMMON-LISP|::|&WHOLE| |SYSTEM|::|WHOLE-FORM| |SYSTEM|::|VARCLAUSELIST|
    |SYSTEM|::|EXITCLAUSE| |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|DO*|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|DO*|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|DO*|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|WHOLE-FORM| |SYSTEM|::|<MACRO-FORM>|)
       (|SYSTEM|::|VARCLAUSELIST|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|EXITCLAUSE| (|COMMON-LISP|::|CADDR| . #1#))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|DO*|
       (|SYSTEM|::|DO/DO*-EXPAND| |SYSTEM|::|WHOLE-FORM|
        |SYSTEM|::|VARCLAUSELIST| |SYSTEM|::|EXITCLAUSE| |SYSTEM|::|BODY|
        '|COMMON-LISP|::|DO*| '|COMMON-LISP|::|LET*|
        '|COMMON-LISP|::|SETQ|))))))
  '(|COMMON-LISP|::|&WHOLE| |SYSTEM|::|WHOLE-FORM| |SYSTEM|::|VARCLAUSELIST|
    |SYSTEM|::|EXITCLAUSE| |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|DOLIST|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|DOLIST|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|DOLIST|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G21661| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G21662|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| #1# 2. 3.))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|COMMON-LISP|::|DOLIST| #1#
          '#4=(|SYSTEM|::|VAR| |SYSTEM|::|LISTFORM| |COMMON-LISP|::|&OPTIONAL|
               |SYSTEM|::|RESULTFORM|))
         #1#))
       (|SYSTEM|::|VAR| (|COMMON-LISP|::|CAR| #3#))
       (|SYSTEM|::|LISTFORM| (|COMMON-LISP|::|CADR| . #5=(#3#)))
       (|SYSTEM|::|RESULTFORM| (|COMMON-LISP|::|CADDR| . #5#))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|DOLIST|
       (|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
        (|SYSTEM|::|BODY-REST| |SYSTEM|::|DECLARATIONS|)
        (|SYSTEM|::|PARSE-BODY| |SYSTEM|::|BODY|)
        (|COMMON-LISP|::|LET|
         ((|SYSTEM|::|G| (|COMMON-LISP|::|GENSYM| "LIST-")))
         `(|COMMON-LISP|::|DO*|
           ((,|SYSTEM|::|G| ,|SYSTEM|::|LISTFORM|
             (|COMMON-LISP|::|CDR| ,|SYSTEM|::|G|))
            (,|SYSTEM|::|VAR| |COMMON-LISP|::|NIL|))
           ((|COMMON-LISP|::|ENDP| ,|SYSTEM|::|G|)
            ,(|COMMON-LISP|::|IF|
              (|COMMON-LISP|::|CONSTANTP| |SYSTEM|::|RESULTFORM|)
              `,|SYSTEM|::|RESULTFORM|
              `(|COMMON-LISP|::|LET| ((,|SYSTEM|::|VAR| |COMMON-LISP|::|NIL|))
                (|COMMON-LISP|::|DECLARE|
                 (|COMMON-LISP|::|IGNORABLE| ,|SYSTEM|::|VAR|)
                 ,@|SYSTEM|::|DECLARATIONS|)
                ,|SYSTEM|::|RESULTFORM|)))
           (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|LIST| ,|SYSTEM|::|G|)
            ,@|SYSTEM|::|DECLARATIONS|)
           (|COMMON-LISP|::|SETQ| ,|SYSTEM|::|VAR|
            (|COMMON-LISP|::|CAR| ,|SYSTEM|::|G|))
           ,@|SYSTEM|::|BODY-REST|))))))))
  '(#4# |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|DOTIMES|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|DOTIMES|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|DOTIMES|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G21681| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G21682|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| #1# 2. 3.))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|COMMON-LISP|::|DOTIMES| #1#
          '#4=(|SYSTEM|::|VAR| |SYSTEM|::|COUNTFORM| |COMMON-LISP|::|&OPTIONAL|
               |SYSTEM|::|RESULTFORM|))
         #1#))
       (|SYSTEM|::|VAR| (|COMMON-LISP|::|CAR| #3#))
       (|SYSTEM|::|COUNTFORM| (|COMMON-LISP|::|CADR| . #5=(#3#)))
       (|SYSTEM|::|RESULTFORM| (|COMMON-LISP|::|CADDR| . #5#))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|DOTIMES|
       (|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
        (|SYSTEM|::|BODY-REST| |SYSTEM|::|DECLARATIONS|)
        (|SYSTEM|::|PARSE-BODY| |SYSTEM|::|BODY|)
        (|COMMON-LISP|::|IF| |SYSTEM|::|DECLARATIONS|
         (|COMMON-LISP|::|SETQ| |SYSTEM|::|DECLARATIONS|
          (|COMMON-LISP|::|LIST|
           (|COMMON-LISP|::|CONS| '|COMMON-LISP|::|DECLARE|
            |SYSTEM|::|DECLARATIONS|))))
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|CONSTANTP| |SYSTEM|::|COUNTFORM|)
         `(|COMMON-LISP|::|DO|
           ((,|SYSTEM|::|VAR| 0. (|COMMON-LISP|::|1+| ,|SYSTEM|::|VAR|)))
           ((|COMMON-LISP|::|>=| ,|SYSTEM|::|VAR| ,|SYSTEM|::|COUNTFORM|)
            ,|SYSTEM|::|RESULTFORM|)
           ,@|SYSTEM|::|DECLARATIONS| ,@|SYSTEM|::|BODY-REST|)
         (|COMMON-LISP|::|LET|
          ((|SYSTEM|::|G| (|COMMON-LISP|::|GENSYM| "COUNT-")))
          `(|COMMON-LISP|::|DO|
            ((,|SYSTEM|::|VAR| 0. (|COMMON-LISP|::|1+| ,|SYSTEM|::|VAR|))
             (,|SYSTEM|::|G| ,|SYSTEM|::|COUNTFORM|))
            ((|COMMON-LISP|::|>=| ,|SYSTEM|::|VAR| ,|SYSTEM|::|G|)
             ,|SYSTEM|::|RESULTFORM|)
            ,@|SYSTEM|::|DECLARATIONS| ,@|SYSTEM|::|BODY-REST|)))))))))
  '(#4# |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|CASE-EXPAND|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|WHOLE-FORM| |SYSTEM|::|FORM-NAME| |SYSTEM|::|TEST|
    |SYSTEM|::|KEYFORM| |SYSTEM|::|CLAUSES|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXT|::|FCASE|)
(|SYSTEM|::|%PUTD| '|EXT|::|FCASE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXT|::|FCASE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|WHOLE-FORM| |SYSTEM|::|<MACRO-FORM>|)
       (|SYSTEM|::|TEST|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|KEYFORM| (|COMMON-LISP|::|CADDR| . #1#))
       (|SYSTEM|::|CLAUSES| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |EXT|::|FCASE|
       (|SYSTEM|::|CASE-EXPAND| |SYSTEM|::|WHOLE-FORM| '|EXT|::|FCASE|
        |SYSTEM|::|TEST| |SYSTEM|::|KEYFORM| |SYSTEM|::|CLAUSES|))))))
  '(|COMMON-LISP|::|&WHOLE| |SYSTEM|::|WHOLE-FORM| |SYSTEM|::|TEST|
    |SYSTEM|::|KEYFORM| |COMMON-LISP|::|&BODY| |SYSTEM|::|CLAUSES|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|PROG|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|PROG|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|PROG|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|VARLIST|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|PROG|
       (|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
        (|SYSTEM|::|BODY-REST| |SYSTEM|::|DECLARATIONS|)
        (|SYSTEM|::|PARSE-BODY| |SYSTEM|::|BODY|)
        (|COMMON-LISP|::|IF| |SYSTEM|::|DECLARATIONS|
         (|COMMON-LISP|::|SETQ| |SYSTEM|::|DECLARATIONS|
          (|COMMON-LISP|::|LIST|
           (|COMMON-LISP|::|CONS| '|COMMON-LISP|::|DECLARE|
            |SYSTEM|::|DECLARATIONS|))))
        `(|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|NIL|
          (|COMMON-LISP|::|LET| ,|SYSTEM|::|VARLIST| ,@|SYSTEM|::|DECLARATIONS|
           (|COMMON-LISP|::|TAGBODY| ,@|SYSTEM|::|BODY-REST|)))))))))
  '(|SYSTEM|::|VARLIST| |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|PROG*|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|PROG*|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|PROG*|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|VARLIST|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|PROG*|
       (|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
        (|SYSTEM|::|BODY-REST| |SYSTEM|::|DECLARATIONS|)
        (|SYSTEM|::|PARSE-BODY| |SYSTEM|::|BODY|)
        (|COMMON-LISP|::|IF| |SYSTEM|::|DECLARATIONS|
         (|COMMON-LISP|::|SETQ| |SYSTEM|::|DECLARATIONS|
          (|COMMON-LISP|::|LIST|
           (|COMMON-LISP|::|CONS| '|COMMON-LISP|::|DECLARE|
            |SYSTEM|::|DECLARATIONS|))))
        `(|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|NIL|
          (|COMMON-LISP|::|LET*| ,|SYSTEM|::|VARLIST|
           ,@|SYSTEM|::|DECLARATIONS|
           (|COMMON-LISP|::|TAGBODY| ,@|SYSTEM|::|BODY-REST|)))))))))
  '(|SYSTEM|::|VARLIST| |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|IFIFY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|WHOLE-FORM| |SYSTEM|::|CLAUSELIST| |SYSTEM|::|G|)))
