#0Y_ #0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "COMMON-LISP"))
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "EXT"))
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "CUSTOM"))
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "SYSTEM"))
(|COMMON-LISP|::|LET*| ((#1=#:|G21387| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS| '|COMMON-LISP|::|CONDITION|
  :|DIRECT-SUPERCLASSES| (|COMMON-LISP|::|LIST|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|CLOS|::|PRINT-OBJECT|
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|PRINT-CONDITION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|CONDITION| |COMMON-LISP|::|STREAM|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|PRETTY-PRINT-CONDITION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|CONDITION| |COMMON-LISP|::|STREAM| |COMMON-LISP|::|&KEY|
    (|SYSTEM|::|TEXT-INDENT| 6.))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|DEFINE-CONDITION|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|DEFINE-CONDITION|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|DEFINE-CONDITION|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|WHOLE-FORM| |SYSTEM|::|<MACRO-FORM>|)
       (|SYSTEM|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|PARENT-TYPES| (|COMMON-LISP|::|CADDR| . #1#))
       (|SYSTEM|::|SLOT-SPECS| (|COMMON-LISP|::|CADDDR| . #1#))
       (|SYSTEM|::|OPTIONS| (|COMMON-LISP|::|CDDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|DEFINE-CONDITION|
       (|COMMON-LISP|::|UNLESS| (|COMMON-LISP|::|SYMBOLP| |SYSTEM|::|NAME|)
        (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
         |SYSTEM|::|WHOLE-FORM| :|DETAIL| |SYSTEM|::|NAME|
         (|SYSTEM|::|TEXT|
          "~S: the name of a condition must be a symbol, not ~S")
         '|COMMON-LISP|::|DEFINE-CONDITION| |SYSTEM|::|NAME|))
       (|COMMON-LISP|::|UNLESS|
        (|COMMON-LISP|::|AND| (|COMMON-LISP|::|LISTP| |SYSTEM|::|PARENT-TYPES|)
         (|COMMON-LISP|::|EVERY| #'|COMMON-LISP|::|SYMBOLP|
          |SYSTEM|::|PARENT-TYPES|))
        (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
         |SYSTEM|::|WHOLE-FORM| :|DETAIL| |SYSTEM|::|PARENT-TYPES|
         (|SYSTEM|::|TEXT|
          "~S: the parent-type list must be a list of symbols, not ~S")
         '|COMMON-LISP|::|DEFINE-CONDITION| |SYSTEM|::|PARENT-TYPES|))
       (|COMMON-LISP|::|UNLESS| (|COMMON-LISP|::|LISTP| |SYSTEM|::|SLOT-SPECS|)
        (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
         |SYSTEM|::|WHOLE-FORM| :|DETAIL| |SYSTEM|::|SLOT-SPECS|
         (|SYSTEM|::|TEXT|
          "~S: the slot description list must be a list, not ~S")
         '|COMMON-LISP|::|DEFINE-CONDITION| |SYSTEM|::|SLOT-SPECS|))
       (|COMMON-LISP|::|LET|
        ((|SYSTEM|::|DEFAULT-INITARGS-OPTION| |COMMON-LISP|::|NIL|)
         (|SYSTEM|::|DOCSTRING-OPTION| |COMMON-LISP|::|NIL|)
         (|SYSTEM|::|REPORT-FUNCTION| |COMMON-LISP|::|NIL|))
        (|COMMON-LISP|::|DOLIST| (|SYSTEM|::|OPTION| |SYSTEM|::|OPTIONS|)
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|LISTP| |SYSTEM|::|OPTION|)
          (|COMMON-LISP|::|COND|
           ((|COMMON-LISP|::|AND|
             (|COMMON-LISP|::|EQ| (|COMMON-LISP|::|CAR| |SYSTEM|::|OPTION|)
              ':|DEFAULT-INITARGS|)
             (|COMMON-LISP|::|ODDP|
              (|COMMON-LISP|::|LENGTH| |SYSTEM|::|OPTION|)))
            (|COMMON-LISP|::|SETQ| |SYSTEM|::|DEFAULT-INITARGS-OPTION|
             |SYSTEM|::|OPTION|))
           ((|COMMON-LISP|::|AND|
             (|COMMON-LISP|::|KEYWORDP|
              (|COMMON-LISP|::|CAR| |SYSTEM|::|OPTION|))
             (|COMMON-LISP|::|EQL| (|COMMON-LISP|::|LENGTH| |SYSTEM|::|OPTION|)
              2.))
            (|COMMON-LISP|::|CASE| (|COMMON-LISP|::|FIRST| |SYSTEM|::|OPTION|)
             (:|DOCUMENTATION|
              (|COMMON-LISP|::|SETQ| |SYSTEM|::|DOCSTRING-OPTION|
               |SYSTEM|::|OPTION|))
             (:|REPORT|
              (|COMMON-LISP|::|SETQ| |SYSTEM|::|REPORT-FUNCTION|
               (|COMMON-LISP|::|REST| |SYSTEM|::|OPTION|)))
             (|COMMON-LISP|::|T|
              (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
               |SYSTEM|::|WHOLE-FORM| :|DETAIL|
               (|COMMON-LISP|::|FIRST| |SYSTEM|::|OPTION|)
               (|SYSTEM|::|TEXT| "~S ~S: unknown option ~S")
               '|COMMON-LISP|::|DEFINE-CONDITION| |SYSTEM|::|NAME|
               (|COMMON-LISP|::|FIRST| |SYSTEM|::|OPTION|)))))
           (|COMMON-LISP|::|T|
            (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
             |SYSTEM|::|WHOLE-FORM| :|DETAIL| |SYSTEM|::|OPTION|
             (|SYSTEM|::|TEXT| "~S ~S: invalid syntax in ~S option: ~S")
             '|COMMON-LISP|::|DEFINE-CONDITION| |SYSTEM|::|NAME|
             '|COMMON-LISP|::|DEFINE-CONDITION| |SYSTEM|::|OPTION|)))
          (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
           |SYSTEM|::|WHOLE-FORM| :|DETAIL| |SYSTEM|::|OPTION|
           (|SYSTEM|::|TEXT| "~S ~S: not a ~S option: ~S")
           '|COMMON-LISP|::|DEFINE-CONDITION| |SYSTEM|::|NAME|
           '|COMMON-LISP|::|DEFINE-CONDITION| |SYSTEM|::|OPTION|)))
        (|COMMON-LISP|::|LET|
         ((|SYSTEM|::|DEFCLASS-FORM|
           `(|CLOS|::|DEFCLASS| ,|SYSTEM|::|NAME|
             ,(|COMMON-LISP|::|OR| |SYSTEM|::|PARENT-TYPES|
               '(|COMMON-LISP|::|CONDITION|))
             ,|SYSTEM|::|SLOT-SPECS|
             ,@(|COMMON-LISP|::|IF| |SYSTEM|::|DOCSTRING-OPTION|
                `(,|SYSTEM|::|DOCSTRING-OPTION|))
             ,@(|COMMON-LISP|::|IF| |SYSTEM|::|DEFAULT-INITARGS-OPTION|
                `(,|SYSTEM|::|DEFAULT-INITARGS-OPTION|)))))
         `(|COMMON-LISP|::|PROGN| ,|SYSTEM|::|DEFCLASS-FORM|
           ,@(|COMMON-LISP|::|WHEN| |SYSTEM|::|REPORT-FUNCTION|
              `((|CLOS|::|DEFMETHOD| |CLOS|::|PRINT-OBJECT|
                 ((|COMMON-LISP|::|CONDITION| ,|SYSTEM|::|NAME|)
                  |COMMON-LISP|::|STREAM|)
                 (|COMMON-LISP|::|IF|
                  (|COMMON-LISP|::|OR| |COMMON-LISP|::|*PRINT-ESCAPE*|
                   |COMMON-LISP|::|*PRINT-READABLY*|)
                  (|CLOS|::|CALL-NEXT-METHOD|)
                  (|COMMON-LISP|::|PROGN|
                   ,(|COMMON-LISP|::|IF|
                     (|COMMON-LISP|::|STRINGP|
                      (|COMMON-LISP|::|FIRST| |SYSTEM|::|REPORT-FUNCTION|))
                     `(|COMMON-LISP|::|WRITE-STRING|
                       ,(|COMMON-LISP|::|FIRST| |SYSTEM|::|REPORT-FUNCTION|)
                       |COMMON-LISP|::|STREAM|)
                     `(|COMMON-LISP|::|FUNCALL| #',@|SYSTEM|::|REPORT-FUNCTION|
                       |COMMON-LISP|::|CONDITION| |COMMON-LISP|::|STREAM|))
                   |COMMON-LISP|::|CONDITION|)))))
           ',|SYSTEM|::|NAME|))))))))
  '(|COMMON-LISP|::|&WHOLE| |SYSTEM|::|WHOLE-FORM| |SYSTEM|::|NAME|
    |SYSTEM|::|PARENT-TYPES| |SYSTEM|::|SLOT-SPECS| |COMMON-LISP|::|&REST|
    |SYSTEM|::|OPTIONS|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|FIND-SUBCLASSES-OF-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|TYPE| |CLOS|::|CLASS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|MAKE-CONDITION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|TYPE| |COMMON-LISP|::|&REST|
    |SYSTEM|::|SLOT-INITIALIZATIONS|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRY-COERCE-TO-CONDITION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|DATUM| |SYSTEM|::|ARGUMENTS| |SYSTEM|::|CALLER-NAME|
    |SYSTEM|::|DEFAULT-TYPE| |COMMON-LISP|::|&REST|
    |SYSTEM|::|MORE-INITARGS|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|VALID-CONDITION-DESIGNATOR-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|DATUM+ARGUMENTS|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|COERCE-TO-CONDITION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|DATUM| |SYSTEM|::|ARGUMENTS| |SYSTEM|::|CALLER-NAME|
    |SYSTEM|::|DEFAULT-TYPE| |COMMON-LISP|::|&REST|
    |SYSTEM|::|MORE-INITARGS|)))
(|COMMON-LISP|::|LET*| ((#1=#:|G21683| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|SERIOUS-CONDITION| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|CONDITION|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21687| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS| '|COMMON-LISP|::|ERROR|
  :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SERIOUS-CONDITION|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21691| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|PROGRAM-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|ERROR|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21695| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|EXT|::|SOURCE-PROGRAM-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|PROGRAM-ERROR|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|SYSTEM|::|$FORM| :|READERS|
    '(|EXT|::|SOURCE-PROGRAM-ERROR-FORM|) :|INITARGS| '(:|FORM|))
   (|COMMON-LISP|::|LIST| :|NAME| '|SYSTEM|::|$DETAIL| :|READERS|
    '(|EXT|::|SOURCE-PROGRAM-ERROR-DETAIL|) :|INITARGS| '(:|DETAIL|)))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|EXT|::|SOURCE-PROGRAM-ERROR-FORM|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|EXT|::|SOURCE-PROGRAM-ERROR-DETAIL|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|COMMON-LISP|::|LET*| ((#1=#:|G21719| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|CONTROL-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|ERROR|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21723| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|ARITHMETIC-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|ERROR|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|SYSTEM|::|$OPERATION| :|READERS|
    '(|COMMON-LISP|::|ARITHMETIC-ERROR-OPERATION|) :|INITARGS| '(:|OPERATION|))
   (|COMMON-LISP|::|LIST| :|NAME| '|SYSTEM|::|$OPERANDS| :|READERS|
    '(|COMMON-LISP|::|ARITHMETIC-ERROR-OPERANDS|) :|INITARGS| '(:|OPERANDS|)))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|ARITHMETIC-ERROR-OPERATION|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|ARITHMETIC-ERROR-OPERANDS|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|COMMON-LISP|::|LET*| ((#1=#:|G21733| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|DIVISION-BY-ZERO| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|ARITHMETIC-ERROR|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21737| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|FLOATING-POINT-OVERFLOW| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|ARITHMETIC-ERROR|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21741| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|FLOATING-POINT-UNDERFLOW| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|ARITHMETIC-ERROR|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21745| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|FLOATING-POINT-INEXACT| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|ARITHMETIC-ERROR|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21749| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|FLOATING-POINT-INVALID-OPERATION| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|ARITHMETIC-ERROR|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21753| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS| '|COMMON-LISP|::|CELL-ERROR|
  :|DIRECT-SUPERCLASSES| (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|ERROR|)
  :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|SYSTEM|::|$NAME| :|READERS|
    '(|COMMON-LISP|::|CELL-ERROR-NAME|) :|INITARGS| '(:|NAME|)))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|CELL-ERROR-NAME|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|COMMON-LISP|::|LET*| ((#1=#:|G21760| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|UNBOUND-VARIABLE| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|CELL-ERROR|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21764| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|UNDEFINED-FUNCTION| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|CELL-ERROR|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21768| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|UNBOUND-SLOT| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|CELL-ERROR|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|SYSTEM|::|$INSTANCE| :|READERS|
    '(|COMMON-LISP|::|UNBOUND-SLOT-INSTANCE|) :|INITARGS| '(:|INSTANCE|)))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|UNBOUND-SLOT-INSTANCE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|COMMON-LISP|::|LET*| ((#1=#:|G21775| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS| '|COMMON-LISP|::|TYPE-ERROR|
  :|DIRECT-SUPERCLASSES| (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|ERROR|)
  :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|SYSTEM|::|$DATUM| :|READERS|
    '(|COMMON-LISP|::|TYPE-ERROR-DATUM|) :|INITARGS| '(:|DATUM|))
   (|COMMON-LISP|::|LIST| :|NAME| '|SYSTEM|::|$EXPECTED-TYPE| :|READERS|
    '(|COMMON-LISP|::|TYPE-ERROR-EXPECTED-TYPE|) :|INITARGS|
    '(:|EXPECTED-TYPE|)))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|TYPE-ERROR-DATUM|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|TYPE-ERROR-EXPECTED-TYPE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|COMMON-LISP|::|LET*| ((#1=#:|G21785| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS| '|SYSTEM|::|KEYWORD-ERROR|
  :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|PROGRAM-ERROR|
   '|COMMON-LISP|::|TYPE-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21789| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|CHARSET-TYPE-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|TYPE-ERROR|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21793| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|ARGUMENT-LIST-DOTTED| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|PROGRAM-ERROR|
   '|COMMON-LISP|::|TYPE-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21797| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|PACKAGE-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|ERROR|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|SYSTEM|::|$PACKAGE| :|READERS|
    '(|COMMON-LISP|::|PACKAGE-ERROR-PACKAGE|) :|INITARGS| '(:|PACKAGE|)))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|PACKAGE-ERROR-PACKAGE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|COMMON-LISP|::|LET*| ((#1=#:|G21804| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|PRINT-NOT-READABLE| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|ERROR|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|SYSTEM|::|$OBJECT| :|READERS|
    '(|COMMON-LISP|::|PRINT-NOT-READABLE-OBJECT|) :|INITARGS| '(:|OBJECT|)))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|PRINT-NOT-READABLE-OBJECT|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|COMMON-LISP|::|LET*| ((#1=#:|G21811| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS| '|COMMON-LISP|::|PARSE-ERROR|
  :|DIRECT-SUPERCLASSES| (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21815| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|STREAM-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|ERROR|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|SYSTEM|::|$STREAM| :|READERS|
    '(|COMMON-LISP|::|STREAM-ERROR-STREAM|) :|INITARGS| '(:|STREAM|)))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|STREAM-ERROR-STREAM|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|COMMON-LISP|::|LET*| ((#1=#:|G21822| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS| '|COMMON-LISP|::|END-OF-FILE|
  :|DIRECT-SUPERCLASSES| (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|STREAM-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21826| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|READER-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|PARSE-ERROR|
   '|COMMON-LISP|::|STREAM-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21830| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS| '|COMMON-LISP|::|FILE-ERROR|
  :|DIRECT-SUPERCLASSES| (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|ERROR|)
  :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|SYSTEM|::|$PATHNAME| :|READERS|
    '(|COMMON-LISP|::|FILE-ERROR-PATHNAME|) :|INITARGS| '(:|PATHNAME|)))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|FILE-ERROR-PATHNAME|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|COMMON-LISP|::|LET*| ((#1=#:|G21837| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS| '|EXT|::|OS-ERROR|
  :|DIRECT-SUPERCLASSES| (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21841| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|STORAGE-CONDITION| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SERIOUS-CONDITION|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21845| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|INTERRUPT-CONDITION| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SERIOUS-CONDITION|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21849| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS| '|COMMON-LISP|::|WARNING|
  :|DIRECT-SUPERCLASSES| (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|CONDITION|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21853| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|STYLE-WARNING| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|WARNING|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21857| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS| '|CLOS|::|CLOS-WARNING|
  :|DIRECT-SUPERCLASSES| (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|WARNING|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21861| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|CLOS|::|GF-ALREADY-CALLED-WARNING| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|CLOS|::|CLOS-WARNING|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21865| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|CLOS|::|GF-REPLACING-METHOD-WARNING| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|CLOS|::|CLOS-WARNING|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21869| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|SIMPLE-CONDITION| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|CONDITION|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|SYSTEM|::|$FORMAT-CONTROL| :|READERS|
    '(|EXT|::|SIMPLE-CONDITION-FORMAT-STRING|
      |COMMON-LISP|::|SIMPLE-CONDITION-FORMAT-CONTROL|)
    :|INITARGS| '(:|FORMAT-CONTROL|) :|INITFORM| '|COMMON-LISP|::|NIL|
    :|INITFUNCTION|
    (|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
   (|COMMON-LISP|::|LIST| :|NAME| '|SYSTEM|::|$FORMAT-ARGUMENTS| :|READERS|
    '(|COMMON-LISP|::|SIMPLE-CONDITION-FORMAT-ARGUMENTS|) :|INITARGS|
    '(:|FORMAT-ARGUMENTS|) :|INITFORM| '|COMMON-LISP|::|NIL| :|INITFUNCTION|
    (|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|)))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|EXT|::|SIMPLE-CONDITION-FORMAT-STRING|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|SIMPLE-CONDITION-FORMAT-CONTROL|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|SIMPLE-CONDITION-FORMAT-ARGUMENTS|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLOS|::|PRINT-OBJECT|
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|COMMON-LISP|::|LET*| ((#1=#:|G21923| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|SIMPLE-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-CONDITION|
   '|COMMON-LISP|::|ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21927| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|SIMPLE-TYPE-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-CONDITION|
   '|COMMON-LISP|::|TYPE-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21931| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|COMMON-LISP|::|SIMPLE-WARNING| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-CONDITION|
   '|COMMON-LISP|::|WARNING|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21935| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|CLOS|::|SIMPLE-CLOS-WARNING| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-CONDITION|
   '|CLOS|::|CLOS-WARNING|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21939| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|CLOS|::|SIMPLE-GF-ALREADY-CALLED-WARNING| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-CONDITION|
   '|CLOS|::|GF-ALREADY-CALLED-WARNING|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21943| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|CLOS|::|SIMPLE-GF-REPLACING-METHOD-WARNING| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-CONDITION|
   '|CLOS|::|GF-REPLACING-METHOD-WARNING|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21947| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-SERIOUS-CONDITION| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-CONDITION|
   '|COMMON-LISP|::|SERIOUS-CONDITION|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21951| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-PROGRAM-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|COMMON-LISP|::|PROGRAM-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21955| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-SOURCE-PROGRAM-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|EXT|::|SOURCE-PROGRAM-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21959| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-CONTROL-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|COMMON-LISP|::|CONTROL-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21963| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-ARITHMETIC-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|COMMON-LISP|::|ARITHMETIC-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21967| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-DIVISION-BY-ZERO| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|COMMON-LISP|::|DIVISION-BY-ZERO|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21971| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-FLOATING-POINT-OVERFLOW| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|COMMON-LISP|::|FLOATING-POINT-OVERFLOW|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21975| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-FLOATING-POINT-UNDERFLOW| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|COMMON-LISP|::|FLOATING-POINT-UNDERFLOW|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21979| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-CELL-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|COMMON-LISP|::|CELL-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21983| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-UNBOUND-VARIABLE| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|COMMON-LISP|::|UNBOUND-VARIABLE|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21987| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-UNDEFINED-FUNCTION| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|COMMON-LISP|::|UNDEFINED-FUNCTION|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21991| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-UNBOUND-SLOT| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|COMMON-LISP|::|UNBOUND-SLOT|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21995| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-KEYWORD-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|SYSTEM|::|KEYWORD-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G21999| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|EXT|::|SIMPLE-CHARSET-TYPE-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|SYSTEM|::|CHARSET-TYPE-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G22003| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-ARGUMENT-LIST-DOTTED| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|SYSTEM|::|ARGUMENT-LIST-DOTTED|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G22007| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-PACKAGE-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|COMMON-LISP|::|PACKAGE-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G22011| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-PRINT-NOT-READABLE| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|COMMON-LISP|::|PRINT-NOT-READABLE|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G22015| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-PARSE-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|COMMON-LISP|::|PARSE-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G22019| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-STREAM-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|COMMON-LISP|::|STREAM-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G22023| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-END-OF-FILE| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|COMMON-LISP|::|END-OF-FILE|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G22027| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-READER-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|COMMON-LISP|::|READER-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G22031| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-FILE-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|
   '|COMMON-LISP|::|FILE-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G22035| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS| '|SYSTEM|::|SIMPLE-OS-ERROR|
  :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR| '|EXT|::|OS-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G22039| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-STORAGE-CONDITION| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-CONDITION|
   '|COMMON-LISP|::|STORAGE-CONDITION|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G22043| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|SYSTEM|::|SIMPLE-INTERRUPT-CONDITION| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-CONDITION|
   '|SYSTEM|::|INTERRUPT-CONDITION|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|LET*| ((#1=#:|G22047| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS| '|CLOS|::|METHOD-CALL-ERROR|
  :|DIRECT-SUPERCLASSES| (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-ERROR|)
  :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|SYSTEM|::|$GF| :|READERS|
    '(|CLOS|::|METHOD-CALL-ERROR-GENERIC-FUNCTION|) :|INITARGS|
    '(:|GENERIC-FUNCTION|))
   (|COMMON-LISP|::|LIST| :|NAME| '|SYSTEM|::|$METHOD| :|READERS|
    '(|CLOS|::|METHOD-CALL-ERROR-METHOD|) :|INITARGS| '(:|METHOD|))
   (|COMMON-LISP|::|LIST| :|NAME| '|SYSTEM|::|$ARGS| :|READERS|
    '(|CLOS|::|METHOD-CALL-ERROR-ARGUMENT-LIST|) :|INITARGS|
    '(:|ARGUMENT-LIST|)))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|CLOS|::|METHOD-CALL-ERROR-GENERIC-FUNCTION|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLOS|::|METHOD-CALL-ERROR-METHOD|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLOS|::|METHOD-CALL-ERROR-ARGUMENT-LIST|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|COMMON-LISP|::|LET*| ((#1=#:|G22060| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|CLOS|::|METHOD-CALL-TYPE-ERROR| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|COMMON-LISP|::|SIMPLE-TYPE-ERROR|
   '|CLOS|::|METHOD-CALL-ERROR|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP|::|*BREAK-ON-SIGNALS*|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|HANDLER-BIND|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|HANDLER-BIND|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|HANDLER-BIND|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|CLAUSES|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|HANDLER-BIND|
       (|COMMON-LISP|::|LET*|
        ((|SYSTEM|::|TYPESPECS|
          (|COMMON-LISP|::|MAPCAR| #'|COMMON-LISP|::|FIRST|
           |SYSTEM|::|CLAUSES|))
         (|SYSTEM|::|HANDLERS|
          (|COMMON-LISP|::|NCONC|
           (|COMMON-LISP|::|MAPCAR| #'|COMMON-LISP|::|REST|
            |SYSTEM|::|CLAUSES|)
           (|COMMON-LISP|::|LIST| |SYSTEM|::|BODY|)))
         (|SYSTEM|::|HANDLER-VARS|
          (|SYSTEM|::|GENSYM-LIST|
           (|COMMON-LISP|::|LENGTH| |SYSTEM|::|HANDLERS|))))
        `(|COMMON-LISP|::|LET|
          ,(|COMMON-LISP|::|MAPCAR| #'|COMMON-LISP|::|LIST|
            |SYSTEM|::|HANDLER-VARS|
            (|COMMON-LISP|::|MAPCAR|
             #'(|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|HANDLER|)
                `#'(|COMMON-LISP|::|LAMBDA| |COMMON-LISP|::|NIL|
                    (|COMMON-LISP|::|PROGN| ,@|SYSTEM|::|HANDLER|)))
             |SYSTEM|::|HANDLERS|))
          (|COMMON-LISP|::|LOCALLY|
           (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|COMPILE|))
           (|SYSTEM|::|%HANDLER-BIND|
            ,(|COMMON-LISP|::|CAR|
              (|COMMON-LISP|::|LAST| |SYSTEM|::|HANDLER-VARS|))
            ,@(|COMMON-LISP|::|MAPCAN|
               #'(|COMMON-LISP|::|LAMBDA|
                  (|SYSTEM|::|TYPESPEC| |SYSTEM|::|HANDLER-VAR|)
                  `(',|SYSTEM|::|TYPESPEC|
                    #'(|COMMON-LISP|::|LAMBDA| (|COMMON-LISP|::|CONDITION|)
                       (|COMMON-LISP|::|FUNCALL|
                        (|COMMON-LISP|::|FUNCALL| ,|SYSTEM|::|HANDLER-VAR|)
                        |COMMON-LISP|::|CONDITION|))))
               |SYSTEM|::|TYPESPECS| |SYSTEM|::|HANDLER-VARS|))))))))))
  '(|SYSTEM|::|CLAUSES| |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|IGNORE-ERRORS|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|IGNORE-ERRORS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|IGNORE-ERRORS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|<MACRO-FORM>|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|BODY| (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|IGNORE-ERRORS|
       (|COMMON-LISP|::|LET|
        ((|SYSTEM|::|BLOCKNAME| (|COMMON-LISP|::|GENSYM| "IGNORE-ERRORS-")))
        `(|COMMON-LISP|::|BLOCK| ,|SYSTEM|::|BLOCKNAME|
          (|COMMON-LISP|::|HANDLER-BIND|
           ((|COMMON-LISP|::|ERROR|
             #'(|COMMON-LISP|::|LAMBDA| (|COMMON-LISP|::|CONDITION|)
                (|COMMON-LISP|::|RETURN-FROM| ,|SYSTEM|::|BLOCKNAME|
                 (|COMMON-LISP|::|VALUES| |COMMON-LISP|::|NIL|
                  |COMMON-LISP|::|CONDITION|)))))
           ,@|SYSTEM|::|BODY|))))))))
  '(|COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|HANDLER-CASE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|HANDLER-CASE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|HANDLER-CASE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|WHOLE-FORM| |SYSTEM|::|<MACRO-FORM>|)
       (|SYSTEM|::|FORM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|CLAUSES| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|HANDLER-CASE|
       (|COMMON-LISP|::|LET|
        ((|SYSTEM|::|NO-ERROR-CLAUSE| |COMMON-LISP|::|NIL|)
         (|SYSTEM|::|EXTENDED-CLAUSES| '|COMMON-LISP|::|NIL|))
        (|COMMON-LISP|::|DO| |COMMON-LISP|::|NIL|
         ((|COMMON-LISP|::|ENDP| |SYSTEM|::|CLAUSES|))
         (|COMMON-LISP|::|LET|
          ((|SYSTEM|::|CLAUSE| (|COMMON-LISP|::|POP| |SYSTEM|::|CLAUSES|)))
          (|COMMON-LISP|::|BLOCK| |SYSTEM|::|CHECK-CLAUSE|
           (|COMMON-LISP|::|UNLESS|
            (|COMMON-LISP|::|AND| (|COMMON-LISP|::|CONSP| |SYSTEM|::|CLAUSE|)
             (|COMMON-LISP|::|CONSP| (|COMMON-LISP|::|CDR| |SYSTEM|::|CLAUSE|))
             (|COMMON-LISP|::|LISTP|
              (|COMMON-LISP|::|SECOND| |SYSTEM|::|CLAUSE|)))
            (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
             |SYSTEM|::|WHOLE-FORM| :|DETAIL| |SYSTEM|::|CLAUSE|
             (|SYSTEM|::|TEXT| "~S: illegal syntax of clause ~S")
             '|COMMON-LISP|::|HANDLER-CASE| |SYSTEM|::|CLAUSE|))
           (|COMMON-LISP|::|WHEN|
            (|COMMON-LISP|::|EQ| (|COMMON-LISP|::|FIRST| |SYSTEM|::|CLAUSE|)
             ':|NO-ERROR|)
            (|COMMON-LISP|::|IF|
             (|COMMON-LISP|::|NULL| |SYSTEM|::|NO-ERROR-CLAUSE|)
             (|COMMON-LISP|::|SETQ| |SYSTEM|::|NO-ERROR-CLAUSE|
              |SYSTEM|::|CLAUSE|)
             (|COMMON-LISP|::|WARN|
              (|SYSTEM|::|TEXT| "~S: multiple ~S clauses: ~S and ~S")
              '|COMMON-LISP|::|HANDLER-CASE| ':|NO-ERROR| |SYSTEM|::|CLAUSE|
              |SYSTEM|::|NO-ERROR-CLAUSE|))
            (|COMMON-LISP|::|RETURN-FROM| |SYSTEM|::|CHECK-CLAUSE|))
           (|COMMON-LISP|::|LET|
            ((|SYSTEM|::|VARLIST|
              (|COMMON-LISP|::|SECOND| |SYSTEM|::|CLAUSE|)))
            (|COMMON-LISP|::|UNLESS|
             (|COMMON-LISP|::|NULL| (|COMMON-LISP|::|CDR| |SYSTEM|::|VARLIST|))
             (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
              |SYSTEM|::|WHOLE-FORM| :|DETAIL| |SYSTEM|::|VARLIST|
              (|SYSTEM|::|TEXT| "~S: too many variables ~S in clause ~S")
              '|COMMON-LISP|::|HANDLER-CASE| |SYSTEM|::|VARLIST|
              |SYSTEM|::|CLAUSE|)))
           (|COMMON-LISP|::|PUSH|
            (|COMMON-LISP|::|CONS| (|COMMON-LISP|::|GENSYM| "HANDLER-")
             |SYSTEM|::|CLAUSE|)
            |SYSTEM|::|EXTENDED-CLAUSES|))))
        (|COMMON-LISP|::|SETQ| |SYSTEM|::|EXTENDED-CLAUSES|
         (|COMMON-LISP|::|NREVERSE| |SYSTEM|::|EXTENDED-CLAUSES|))
        (|COMMON-LISP|::|LET|
         ((|SYSTEM|::|BLOCKNAME| (|COMMON-LISP|::|GENSYM| "HANDLER-CASE-"))
          (|SYSTEM|::|TEMPVAR| (|COMMON-LISP|::|GENSYM| "CONDITION-")))
         `(|COMMON-LISP|::|BLOCK| ,|SYSTEM|::|BLOCKNAME|
           (|COMMON-LISP|::|LET| (,|SYSTEM|::|TEMPVAR|)
            (|COMMON-LISP|::|TAGBODY|
             (|COMMON-LISP|::|RETURN-FROM| ,|SYSTEM|::|BLOCKNAME|
              ,(|COMMON-LISP|::|LET|
                ((|SYSTEM|::|MAIN-FORM|
                  `(|COMMON-LISP|::|HANDLER-BIND|
                    ,(|COMMON-LISP|::|MAPCAR|
                      #'(|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|XCLAUSE|)
                         (|COMMON-LISP|::|LET|
                          ((|SYSTEM|::|TAG|
                            (|COMMON-LISP|::|FIRST| |SYSTEM|::|XCLAUSE|))
                           (|COMMON-LISP|::|TYPE|
                            (|COMMON-LISP|::|FIRST|
                             (|COMMON-LISP|::|REST| |SYSTEM|::|XCLAUSE|)))
                           (|SYSTEM|::|VARLIST|
                            (|COMMON-LISP|::|SECOND|
                             (|COMMON-LISP|::|REST| |SYSTEM|::|XCLAUSE|))))
                          `(,|COMMON-LISP|::|TYPE|
                            #'(|COMMON-LISP|::|LAMBDA|
                               (|COMMON-LISP|::|CONDITION|)
                               ,(|COMMON-LISP|::|IF|
                                 (|COMMON-LISP|::|NULL| |SYSTEM|::|VARLIST|)
                                 `(|COMMON-LISP|::|DECLARE|
                                   (|COMMON-LISP|::|IGNORE|
                                    |COMMON-LISP|::|CONDITION|))
                                 `(|COMMON-LISP|::|SETQ| ,|SYSTEM|::|TEMPVAR|
                                   |COMMON-LISP|::|CONDITION|))
                               (|COMMON-LISP|::|GO| ,|SYSTEM|::|TAG|)))))
                      |SYSTEM|::|EXTENDED-CLAUSES|)
                    ,|SYSTEM|::|FORM|)))
                (|COMMON-LISP|::|IF| |SYSTEM|::|NO-ERROR-CLAUSE|
                 `(|COMMON-LISP|::|MULTIPLE-VALUE-CALL|
                   #'(|COMMON-LISP|::|LAMBDA|
                      ,@(|COMMON-LISP|::|REST| |SYSTEM|::|NO-ERROR-CLAUSE|))
                   ,|SYSTEM|::|MAIN-FORM|)
                 |SYSTEM|::|MAIN-FORM|)))
             ,@(|EXT|::|MAPCAP|
                #'(|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|XCLAUSE|)
                   (|COMMON-LISP|::|LET|
                    ((|SYSTEM|::|TAG|
                      (|COMMON-LISP|::|FIRST| |SYSTEM|::|XCLAUSE|))
                     (|SYSTEM|::|VARLIST|
                      (|COMMON-LISP|::|SECOND|
                       (|COMMON-LISP|::|REST| |SYSTEM|::|XCLAUSE|)))
                     (|SYSTEM|::|BODY|
                      (|COMMON-LISP|::|CDDR|
                       (|COMMON-LISP|::|REST| |SYSTEM|::|XCLAUSE|))))
                    `(,|SYSTEM|::|TAG|
                      (|COMMON-LISP|::|RETURN-FROM| ,|SYSTEM|::|BLOCKNAME|
                       (|COMMON-LISP|::|LET|
                        ,(|COMMON-LISP|::|IF|
                          (|COMMON-LISP|::|NULL| |SYSTEM|::|VARLIST|)
                          '|COMMON-LISP|::|NIL|
                          `((,@|SYSTEM|::|VARLIST| ,|SYSTEM|::|TEMPVAR|)))
                        ,@|SYSTEM|::|BODY|)))))
                |SYSTEM|::|EXTENDED-CLAUSES|)))))))))))
  '(|COMMON-LISP|::|&WHOLE| |SYSTEM|::|WHOLE-FORM| |SYSTEM|::|FORM|
    |COMMON-LISP|::|&REST| |SYSTEM|::|CLAUSES|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|DEFAULT-RESTART-TEST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|DEFAULT-RESTART-INTERACTIVE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|COMMON-LISP|::|LET|
  ((#1=#:|G22223|
    (|COMMON-LISP|::|CONS| '|COMMON-LISP|::|RESTART|
     (|CLOS|::|CLASS-NAMES|
      (|COMMON-LISP|::|GET| '|COMMON-LISP|::|STRUCTURE-OBJECT|
       '|CLOS|::|CLOSCLASS|))))
   (#2=#:|G22224|
    (|COMMON-LISP|::|FUNCTION| |SYSTEM|::|DEFAULT-TEST|
     (|COMMON-LISP|::|LAMBDA| |COMMON-LISP|::|NIL|
      #3=#'|SYSTEM|::|DEFAULT-RESTART-TEST|)))
   (#4=#:|G22225|
    (|COMMON-LISP|::|FUNCTION| |SYSTEM|::|DEFAULT-INTERACTIVE|
     (|COMMON-LISP|::|LAMBDA| |COMMON-LISP|::|NIL|
      #5=#'|SYSTEM|::|DEFAULT-RESTART-INTERACTIVE|))))
  (|SYSTEM|::|STRUCTURE-UNDEFINE-ACCESSORIES| '|COMMON-LISP|::|RESTART|)
  (|COMMON-LISP|::|REMPROP| '|COMMON-LISP|::|RESTART|
   '|SYSTEM|::|DEFSTRUCT-DESCRIPTION|)
  (|CLOS|::|DEFINE-STRUCTURE-CLASS| '|COMMON-LISP|::|RESTART| #1#
   '|SYSTEM|::|MAKE-RESTART| '|COMMON-LISP|::|NIL| '|SYSTEM|::|COPY-RESTART|
   '|SYSTEM|::|RESTART-P|
   (|COMMON-LISP|::|LIST|
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|SYSTEM|::|NAME|
     :|INITARGS| '#6=(:|NAME|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
     ':|INSTANCE| #7='|CLOS|::|INHERITABLE-INITER|
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #8=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #9='|CLOS|::|INHERITABLE-DOC| '(|COMMON-LISP|::|NIL|)
     #10='|CLOS|::|LOCATION| '1. #11='|CLOS|::|READONLY| '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|SYSTEM|::|TEST|
     :|INITARGS| '#12=(:|TEST|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
     ':|INSTANCE| #7#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '#3# #2#) #9#
     '(|COMMON-LISP|::|NIL|) #10# '2. #11# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
     '|SYSTEM|::|INVOKE-TAG| :|INITARGS| '#13=(:|INVOKE-TAG|) :|TYPE|
     '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #7#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #14=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #9# '(|COMMON-LISP|::|NIL|) #10# '3. #11# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
     '|SYSTEM|::|INVOKE-FUNCTION| :|INITARGS| '#15=(:|INVOKE-FUNCTION|) :|TYPE|
     '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #7#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #16=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #9# '(|COMMON-LISP|::|NIL|) #10# '4. #11# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
     '|SYSTEM|::|REPORT| :|INITARGS| '#17=(:|REPORT|) :|TYPE|
     '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #7#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #18=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #9# '(|COMMON-LISP|::|NIL|) #10# '5. #11# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
     '|SYSTEM|::|INTERACTIVE| :|INITARGS| '#19=(:|INTERACTIVE|) :|TYPE|
     '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #7#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '#5# #4#) #9#
     '(|COMMON-LISP|::|NIL|) #10# '6. #11# '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
     '|SYSTEM|::|MEANINGFULP| :|INITARGS| '#20=(:|MEANINGFULP|) :|TYPE|
     '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #7#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|T|
      #21=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|T|))
     #9# '(|COMMON-LISP|::|NIL|) #10# '7. #11# '|COMMON-LISP|::|NIL|))
   (|COMMON-LISP|::|LIST|
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|SYSTEM|::|NAME|
     :|INITARGS| '#6# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #22='|CLOS|::|INHERITABLE-INITER|
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #8#)
     #23='|CLOS|::|INHERITABLE-DOC| '(|COMMON-LISP|::|NIL|) :|READERS|
     '(|COMMON-LISP|::|RESTART-NAME|) :|WRITERS|
     '((|COMMON-LISP|::|SETF| |COMMON-LISP|::|RESTART-NAME|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|SYSTEM|::|TEST|
     :|INITARGS| '#12# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #22# (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '#3# #2#) #23#
     '(|COMMON-LISP|::|NIL|) :|READERS| '(|SYSTEM|::|RESTART-TEST|) :|WRITERS|
     '((|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-TEST|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
     '|SYSTEM|::|INVOKE-TAG| :|INITARGS| '#13# :|TYPE| '|COMMON-LISP|::|T|
     :|ALLOCATION| ':|INSTANCE| #22#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #14#)
     #23# '(|COMMON-LISP|::|NIL|) :|READERS| '(|SYSTEM|::|RESTART-INVOKE-TAG|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INVOKE-TAG|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
     '|SYSTEM|::|INVOKE-FUNCTION| :|INITARGS| '#15# :|TYPE| '|COMMON-LISP|::|T|
     :|ALLOCATION| ':|INSTANCE| #22#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #16#)
     #23# '(|COMMON-LISP|::|NIL|) :|READERS|
     '(|SYSTEM|::|RESTART-INVOKE-FUNCTION|) :|WRITERS|
     '((|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INVOKE-FUNCTION|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|SYSTEM|::|REPORT|
     :|INITARGS| '#17# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #22#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #18#)
     #23# '(|COMMON-LISP|::|NIL|) :|READERS| '(|SYSTEM|::|RESTART-REPORT|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-REPORT|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
     '|SYSTEM|::|INTERACTIVE| :|INITARGS| '#19# :|TYPE| '|COMMON-LISP|::|T|
     :|ALLOCATION| ':|INSTANCE| #22#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '#5# #4#) #23#
     '(|COMMON-LISP|::|NIL|) :|READERS| '(|SYSTEM|::|RESTART-INTERACTIVE|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INTERACTIVE|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
     '|SYSTEM|::|MEANINGFULP| :|INITARGS| '#20# :|TYPE| '|COMMON-LISP|::|T|
     :|ALLOCATION| ':|INSTANCE| #22#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|T|
      #21#)
     #23# '(|COMMON-LISP|::|NIL|) :|READERS| '(|SYSTEM|::|RESTART-MEANINGFULP|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-MEANINGFULP|)))))
  (|COMMON-LISP|::|DEFUN| |SYSTEM|::|MAKE-RESTART|
   (|COMMON-LISP|::|&KEY| (#24=#:|NAME| |COMMON-LISP|::|NIL|)
    (#25=#:|TEST| #3#) (#26=#:|INVOKE-TAG| |COMMON-LISP|::|NIL|)
    (#27=#:|INVOKE-FUNCTION| |COMMON-LISP|::|NIL|)
    (#28=#:|REPORT| |COMMON-LISP|::|NIL|) (#29=#:|INTERACTIVE| #5#)
    (#30=#:|MEANINGFULP| |COMMON-LISP|::|T|))
   (|COMMON-LISP|::|LET|
    ((|SYSTEM|::|OBJECT| (|SYSTEM|::|%MAKE-STRUCTURE| #1# 8.)))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
      1.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #24#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
      2.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #25#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
      3.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #26#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
      4.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #27#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
      5.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #28#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
      6.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #29#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
      7.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #30#))
    |SYSTEM|::|OBJECT|)))
 (|COMMON-LISP|::|PROCLAIM| '(|COMMON-LISP|::|INLINE| |SYSTEM|::|RESTART-P|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|RESTART-P| (|SYSTEM|::|OBJECT|)
  (|SYSTEM|::|%STRUCTURE-TYPE-P| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |SYSTEM|::|COPY-RESTART|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|COPY-RESTART| (|COMMON-LISP|::|STRUCTURE|)
  (|COMMON-LISP|::|COPY-STRUCTURE| |COMMON-LISP|::|STRUCTURE|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|RESTART-NAME|
    (|COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |COMMON-LISP|::|RESTART-NAME|))
 (|COMMON-LISP|::|DEFUN| |COMMON-LISP|::|RESTART-NAME| #31=(|SYSTEM|::|OBJECT|)
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
    1.)))
 (|SYSTEM|::|%PUT| '|COMMON-LISP|::|RESTART-NAME|
  #32='|SYSTEM|::|DEFSTRUCT-READER| '|COMMON-LISP|::|RESTART|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|RESTART-TEST|
    (|COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |SYSTEM|::|RESTART-TEST|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|RESTART-TEST| #31#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
    2.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|RESTART-TEST| #32# '|COMMON-LISP|::|RESTART|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|RESTART-INVOKE-TAG|
    (|COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |SYSTEM|::|RESTART-INVOKE-TAG|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|RESTART-INVOKE-TAG| #31#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
    3.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|RESTART-INVOKE-TAG| #32#
  '|COMMON-LISP|::|RESTART|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|RESTART-INVOKE-FUNCTION|
    (|COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |SYSTEM|::|RESTART-INVOKE-FUNCTION|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|RESTART-INVOKE-FUNCTION| #31#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
    4.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|RESTART-INVOKE-FUNCTION| #32#
  '|COMMON-LISP|::|RESTART|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|RESTART-REPORT|
    (|COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |SYSTEM|::|RESTART-REPORT|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|RESTART-REPORT| #31#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
    5.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|RESTART-REPORT| #32# '|COMMON-LISP|::|RESTART|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|RESTART-INTERACTIVE|
    (|COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |SYSTEM|::|RESTART-INTERACTIVE|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|RESTART-INTERACTIVE| #31#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
    6.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|RESTART-INTERACTIVE| #32#
  '|COMMON-LISP|::|RESTART|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|RESTART-MEANINGFULP|
    (|COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |SYSTEM|::|RESTART-MEANINGFULP|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|RESTART-MEANINGFULP| #31#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
    7.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|RESTART-MEANINGFULP| #32#
  '|COMMON-LISP|::|RESTART|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |COMMON-LISP|::|RESTART-NAME|)
    (|COMMON-LISP|::|T| |COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |COMMON-LISP|::|RESTART-NAME|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |COMMON-LISP|::|RESTART-NAME|)
  #33=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
  (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT| 1.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|COMMON-LISP|::|RESTART-NAME|
  #34='|SYSTEM|::|DEFSTRUCT-WRITER| '|COMMON-LISP|::|RESTART|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-TEST|)
    (|COMMON-LISP|::|T| |COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-TEST|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-TEST|) #33#
  (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT| 2.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|RESTART-TEST| #34# '|COMMON-LISP|::|RESTART|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INVOKE-TAG|)
    (|COMMON-LISP|::|T| |COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INVOKE-TAG|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INVOKE-TAG|)
  #33#
  (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT| 3.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|RESTART-INVOKE-TAG| #34#
  '|COMMON-LISP|::|RESTART|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INVOKE-FUNCTION|)
    (|COMMON-LISP|::|T| |COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INVOKE-FUNCTION|)))
 (|COMMON-LISP|::|DEFUN|
  (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INVOKE-FUNCTION|) #33#
  (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT| 4.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|RESTART-INVOKE-FUNCTION| #34#
  '|COMMON-LISP|::|RESTART|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-REPORT|)
    (|COMMON-LISP|::|T| |COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-REPORT|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-REPORT|)
  #33#
  (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT| 5.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|RESTART-REPORT| #34# '|COMMON-LISP|::|RESTART|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INTERACTIVE|)
    (|COMMON-LISP|::|T| |COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INTERACTIVE|)))
 (|COMMON-LISP|::|DEFUN|
  (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INTERACTIVE|) #33#
  (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT| 6.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|RESTART-INTERACTIVE| #34#
  '|COMMON-LISP|::|RESTART|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-MEANINGFULP|)
    (|COMMON-LISP|::|T| |COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-MEANINGFULP|)))
 (|COMMON-LISP|::|DEFUN|
  (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-MEANINGFULP|) #33#
  (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT| 7.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|RESTART-MEANINGFULP| #34#
  '|COMMON-LISP|::|RESTART|)
 (|SYSTEM|::|%SET-DOCUMENTATION| '|COMMON-LISP|::|RESTART|
  '|COMMON-LISP|::|TYPE| |COMMON-LISP|::|NIL|)
 (|CLOS|::|DEFSTRUCT-REMOVE-PRINT-OBJECT-METHOD| '|COMMON-LISP|::|RESTART|)
 '|COMMON-LISP|::|RESTART|)
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|MAKE-RESTART|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&KEY| (#:|NAME| |COMMON-LISP|::|NIL|)
    (#:|TEST| #'|SYSTEM|::|DEFAULT-RESTART-TEST|)
    (#:|INVOKE-TAG| |COMMON-LISP|::|NIL|)
    (#:|INVOKE-FUNCTION| |COMMON-LISP|::|NIL|)
    (#:|REPORT| |COMMON-LISP|::|NIL|)
    (#:|INTERACTIVE| #'|SYSTEM|::|DEFAULT-RESTART-INTERACTIVE|)
    (#:|MEANINGFULP| |COMMON-LISP|::|T|))))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |SYSTEM|::|RESTART-P|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|RESTART-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|RESTART-P|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|RESTART-P|
    (|SYSTEM|::|%STRUCTURE-TYPE-P| '|COMMON-LISP|::|RESTART|
     |SYSTEM|::|OBJECT|))))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |SYSTEM|::|COPY-RESTART|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|COPY-RESTART|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|COMMON-LISP|::|STRUCTURE|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|COPY-RESTART|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|COPY-RESTART|
    (|COMMON-LISP|::|COPY-STRUCTURE| |COMMON-LISP|::|STRUCTURE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|RESTART-NAME|
   (|COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |COMMON-LISP|::|RESTART-NAME|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|RESTART-NAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |COMMON-LISP|::|RESTART-NAME|))
   (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|RESTART-NAME|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
      1.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|RESTART-TEST|
   (|COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |SYSTEM|::|RESTART-TEST|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|RESTART-TEST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|RESTART-TEST|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|RESTART-TEST|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
      2.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|RESTART-INVOKE-TAG|
   (|COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |SYSTEM|::|RESTART-INVOKE-TAG|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|RESTART-INVOKE-TAG|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|RESTART-INVOKE-TAG|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|RESTART-INVOKE-TAG|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
      3.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|RESTART-INVOKE-FUNCTION|
   (|COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |SYSTEM|::|RESTART-INVOKE-FUNCTION|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|RESTART-INVOKE-FUNCTION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|RESTART-INVOKE-FUNCTION|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|RESTART-INVOKE-FUNCTION|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
      4.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|RESTART-REPORT|
   (|COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |SYSTEM|::|RESTART-REPORT|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|RESTART-REPORT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|RESTART-REPORT|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|RESTART-REPORT|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
      5.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|RESTART-INTERACTIVE|
   (|COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |SYSTEM|::|RESTART-INTERACTIVE|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|RESTART-INTERACTIVE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|RESTART-INTERACTIVE|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|RESTART-INTERACTIVE|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
      6.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|RESTART-MEANINGFULP|
   (|COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |SYSTEM|::|RESTART-MEANINGFULP|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|RESTART-MEANINGFULP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|RESTART-MEANINGFULP|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|RESTART-MEANINGFULP|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
      7.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |COMMON-LISP|::|RESTART-NAME|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |COMMON-LISP|::|RESTART-NAME|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |COMMON-LISP|::|RESTART-NAME|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|RESTART-NAME|
    (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
     1. |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-TEST|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-TEST|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-TEST|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|RESTART-TEST|
    (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
     2. |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INVOKE-TAG|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INVOKE-TAG|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INVOKE-TAG|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|RESTART-INVOKE-TAG|
    (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
     3. |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INVOKE-FUNCTION|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INVOKE-FUNCTION|)))
(|SYSTEM|::|C-DEFUN|
 '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INVOKE-FUNCTION|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|RESTART-INVOKE-FUNCTION|
    (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
     4. |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-REPORT|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-REPORT|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-REPORT|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|RESTART-REPORT|
    (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
     5. |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INTERACTIVE|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INTERACTIVE|)))
(|SYSTEM|::|C-DEFUN|
 '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-INTERACTIVE|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|RESTART-INTERACTIVE|
    (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
     6. |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-MEANINGFULP|)
   (|COMMON-LISP|::|T| |COMMON-LISP|::|RESTART|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-MEANINGFULP|)))
(|SYSTEM|::|C-DEFUN|
 '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|RESTART-MEANINGFULP|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|RESTART-MEANINGFULP|
    (|SYSTEM|::|%STRUCTURE-STORE| '|COMMON-LISP|::|RESTART| |SYSTEM|::|OBJECT|
     7. |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-DEFUN| '|CLOS|::|PRINT-OBJECT|
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|MAKE-RESTART-FORM|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|NAME| |SYSTEM|::|TEST| |SYSTEM|::|INVOKE-TAG|
    |SYSTEM|::|INVOKE-FUNCTION| |SYSTEM|::|REPORT| |SYSTEM|::|INTERACTIVE|
    |SYSTEM|::|MEANINGFULP|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |SYSTEM|::|*ACTIVE-RESTARTS*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |SYSTEM|::|*CONDITION-RESTARTS*|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|ADD-CONDITION-RESTARTS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|CONDITION| |SYSTEM|::|RESTARTS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|WITH-CONDITION-RESTARTS|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|WITH-CONDITION-RESTARTS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|WITH-CONDITION-RESTARTS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|CONDITION-FORM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|RESTARTS-FORM| (|COMMON-LISP|::|CADDR| . #1#))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|WITH-CONDITION-RESTARTS|
       `(|COMMON-LISP|::|LET|
         ((|SYSTEM|::|*CONDITION-RESTARTS*| |SYSTEM|::|*CONDITION-RESTARTS*|))
         (|SYSTEM|::|ADD-CONDITION-RESTARTS| ,|SYSTEM|::|CONDITION-FORM|
          ,|SYSTEM|::|RESTARTS-FORM|)
         (|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL| ,@|SYSTEM|::|BODY|)))))))
  '(|SYSTEM|::|CONDITION-FORM| |SYSTEM|::|RESTARTS-FORM| |COMMON-LISP|::|&BODY|
    |SYSTEM|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|APPLICABLE-RESTART-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|RESTART| |COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|COMPUTE-RESTARTS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL| |COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|FIND-RESTART|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|RESTART-IDENTIFIER| |COMMON-LISP|::|&OPTIONAL|
    |COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|RESTART-NOT-FOUND|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|RESTART-IDENTIFIER|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|%INVOKE-RESTART|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|RESTART| |SYSTEM|::|ARGUMENTS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|INVOKE-RESTART|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|RESTART-IDENTIFIER| |COMMON-LISP|::|&REST|
    |SYSTEM|::|ARGUMENTS|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|INVOKE-RESTART-CONDITION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|RESTART-IDENTIFIER| |COMMON-LISP|::|CONDITION|
    |COMMON-LISP|::|&REST| |SYSTEM|::|ARGUMENTS|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|INVOKE-RESTART-CONDITION-IF-EXISTS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|RESTART-IDENTIFIER| |COMMON-LISP|::|CONDITION|
    |COMMON-LISP|::|&REST| |SYSTEM|::|ARGUMENTS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|INVOKE-RESTART-INTERACTIVELY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|RESTART-IDENTIFIER|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|RESTART-BIND|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|RESTART-BIND|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|RESTART-BIND|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|WHOLE-FORM| |SYSTEM|::|<MACRO-FORM>|)
       (|SYSTEM|::|RESTART-SPECS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|RESTART-BIND|
       (|COMMON-LISP|::|SETQ| |SYSTEM|::|BODY|
        `(|COMMON-LISP|::|PROGN| ,@|SYSTEM|::|BODY|))
       (|COMMON-LISP|::|UNLESS|
        (|COMMON-LISP|::|LISTP| |SYSTEM|::|RESTART-SPECS|)
        (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
         |SYSTEM|::|WHOLE-FORM| :|DETAIL| |SYSTEM|::|RESTART-SPECS|
         (|SYSTEM|::|TEXT| "~S: not a list: ~S") '|COMMON-LISP|::|RESTART-BIND|
         |SYSTEM|::|RESTART-SPECS|))
       (|COMMON-LISP|::|IF| |SYSTEM|::|RESTART-SPECS|
        `(|COMMON-LISP|::|LET|
          ((|SYSTEM|::|*ACTIVE-RESTARTS*|
            (|COMMON-LISP|::|LIST*|
             ,@(|COMMON-LISP|::|MAPCAR|
                #'(|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|SPEC|)
                   (|COMMON-LISP|::|UNLESS|
                    (|COMMON-LISP|::|AND|
                     (|COMMON-LISP|::|LISTP| |SYSTEM|::|SPEC|)
                     (|COMMON-LISP|::|CONSP|
                      (|COMMON-LISP|::|CDR| |SYSTEM|::|SPEC|))
                     (|COMMON-LISP|::|SYMBOLP|
                      (|COMMON-LISP|::|FIRST| |SYSTEM|::|SPEC|)))
                    (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR|
                     :|FORM| |SYSTEM|::|WHOLE-FORM| :|DETAIL| |SYSTEM|::|SPEC|
                     (|SYSTEM|::|TEXT| "~S: invalid restart specification ~S")
                     '|COMMON-LISP|::|RESTART-BIND| |SYSTEM|::|SPEC|))
                   (|COMMON-LISP|::|APPLY|
                    #'(|COMMON-LISP|::|LAMBDA|
                       (|SYSTEM|::|NAME| |COMMON-LISP|::|FUNCTION|
                        |COMMON-LISP|::|&KEY|
                        (|SYSTEM|::|TEST-FUNCTION|
                         '#'|SYSTEM|::|DEFAULT-RESTART-TEST|)
                        (|SYSTEM|::|INTERACTIVE-FUNCTION|
                         '#'|SYSTEM|::|DEFAULT-RESTART-INTERACTIVE|)
                        (|SYSTEM|::|REPORT-FUNCTION| '|COMMON-LISP|::|NIL|)
                        ((|SYSTEM|::|MEANINGFULP| |SYSTEM|::|MEANINGFULP|)
                         '|COMMON-LISP|::|T|))
                       (|COMMON-LISP|::|WHEN|
                        (|COMMON-LISP|::|AND|
                         (|COMMON-LISP|::|NULL| |SYSTEM|::|NAME|)
                         (|COMMON-LISP|::|EQ| |SYSTEM|::|REPORT-FUNCTION|
                          '|COMMON-LISP|::|NIL|))
                        (|SYSTEM|::|ERROR-OF-TYPE|
                         '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
                         |SYSTEM|::|WHOLE-FORM| :|DETAIL| |SYSTEM|::|SPEC|
                         (|SYSTEM|::|TEXT|
                          "~S: unnamed restarts require ~S to be specified: ~S")
                         '|COMMON-LISP|::|RESTART-BIND| ':|REPORT-FUNCTION|
                         |SYSTEM|::|SPEC|))
                       (|SYSTEM|::|MAKE-RESTART-FORM| `',|SYSTEM|::|NAME|
                        |SYSTEM|::|TEST-FUNCTION| '|COMMON-LISP|::|NIL|
                        |COMMON-LISP|::|FUNCTION| |SYSTEM|::|REPORT-FUNCTION|
                        |SYSTEM|::|INTERACTIVE-FUNCTION|
                        |SYSTEM|::|MEANINGFULP|))
                    |SYSTEM|::|SPEC|))
                |SYSTEM|::|RESTART-SPECS|)
             |SYSTEM|::|*ACTIVE-RESTARTS*|)))
          ,|SYSTEM|::|BODY|)
        |SYSTEM|::|BODY|))))))
  '(|COMMON-LISP|::|&WHOLE| |SYSTEM|::|WHOLE-FORM| |SYSTEM|::|RESTART-SPECS|
    |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|COMMON-LISP|::|DEFUN| |SYSTEM|::|EXPAND-RESTART-CASE|
 (|SYSTEM|::|CALLER| |SYSTEM|::|WHOLE-FORM| |SYSTEM|::|RESTART-CLAUSES|
  |SYSTEM|::|FORM|)
 (|COMMON-LISP|::|UNLESS| (|COMMON-LISP|::|LISTP| |SYSTEM|::|RESTART-CLAUSES|)
  (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
   |SYSTEM|::|WHOLE-FORM| :|DETAIL| |SYSTEM|::|RESTART-CLAUSES|
   (|SYSTEM|::|TEXT| "~S: not a list: ~S") |SYSTEM|::|CALLER|
   |SYSTEM|::|RESTART-CLAUSES|))
 (|COMMON-LISP|::|LET|
  ((|SYSTEM|::|XCLAUSES|
    (|COMMON-LISP|::|MAPCAR|
     #'(|COMMON-LISP|::|LAMBDA|
        (|SYSTEM|::|RESTART-CLAUSE| |COMMON-LISP|::|&AUX|
         (|SYSTEM|::|CLAUSE| |SYSTEM|::|RESTART-CLAUSE|))
        (|COMMON-LISP|::|UNLESS|
         (|COMMON-LISP|::|AND| (|COMMON-LISP|::|CONSP| |SYSTEM|::|CLAUSE|)
          (|COMMON-LISP|::|CONSP| (|COMMON-LISP|::|CDR| |SYSTEM|::|CLAUSE|))
          (|COMMON-LISP|::|SYMBOLP|
           (|COMMON-LISP|::|FIRST| |SYSTEM|::|CLAUSE|)))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|WHOLE-FORM| :|DETAIL| |SYSTEM|::|CLAUSE|
          (|SYSTEM|::|TEXT| "~S: invalid restart specification ~S")
          |SYSTEM|::|CALLER| |SYSTEM|::|CLAUSE|))
        (|COMMON-LISP|::|LET|
         ((|SYSTEM|::|NAME| (|COMMON-LISP|::|POP| |SYSTEM|::|CLAUSE|))
          (|SYSTEM|::|PASSED-ARGLIST| |COMMON-LISP|::|NIL|)
          (|SYSTEM|::|PASSED-KEYWORDS| |COMMON-LISP|::|NIL|) |EXT|::|ARGLIST|
          (|SYSTEM|::|KEYWORDS| '|COMMON-LISP|::|NIL|))
         (|COMMON-LISP|::|LOOP|
          (|COMMON-LISP|::|WHEN| (|COMMON-LISP|::|ENDP| |SYSTEM|::|CLAUSE|)
           (|COMMON-LISP|::|RETURN|))
          (|COMMON-LISP|::|COND|
           ((|COMMON-LISP|::|AND|
             (|COMMON-LISP|::|NOT| |SYSTEM|::|PASSED-ARGLIST|)
             (|COMMON-LISP|::|LISTP|
              (|COMMON-LISP|::|FIRST| |SYSTEM|::|CLAUSE|)))
            (|COMMON-LISP|::|SETQ| |EXT|::|ARGLIST|
             (|COMMON-LISP|::|POP| |SYSTEM|::|CLAUSE|))
            (|COMMON-LISP|::|SETQ| |SYSTEM|::|PASSED-ARGLIST|
             |COMMON-LISP|::|T|)
            (|COMMON-LISP|::|WHEN| |SYSTEM|::|KEYWORDS|
             (|COMMON-LISP|::|SETQ| |SYSTEM|::|PASSED-KEYWORDS|
              |COMMON-LISP|::|T|)))
           ((|COMMON-LISP|::|AND|
             (|COMMON-LISP|::|NOT| |SYSTEM|::|PASSED-KEYWORDS|)
             (|COMMON-LISP|::|CONSP| (|COMMON-LISP|::|CDR| |SYSTEM|::|CLAUSE|))
             (|COMMON-LISP|::|SYMBOLP|
              (|COMMON-LISP|::|FIRST| |SYSTEM|::|CLAUSE|)))
            (|COMMON-LISP|::|PUSH| (|COMMON-LISP|::|POP| |SYSTEM|::|CLAUSE|)
             |SYSTEM|::|KEYWORDS|)
            (|COMMON-LISP|::|PUSH| (|COMMON-LISP|::|POP| |SYSTEM|::|CLAUSE|)
             |SYSTEM|::|KEYWORDS|))
           (|COMMON-LISP|::|T| (|COMMON-LISP|::|RETURN|))))
         (|COMMON-LISP|::|UNLESS| |SYSTEM|::|PASSED-ARGLIST|
          (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
           |SYSTEM|::|WHOLE-FORM| :|DETAIL| |SYSTEM|::|CLAUSE|
           (|SYSTEM|::|TEXT|
            "~S: missing lambda list in restart specification ~S")
           |SYSTEM|::|CALLER| |SYSTEM|::|CLAUSE|))
         (|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
          (|SYSTEM|::|TEST| |SYSTEM|::|INTERACTIVE| |SYSTEM|::|REPORT|
           |SYSTEM|::|MEANINGFULP|)
          (|COMMON-LISP|::|APPLY|
           #'(|COMMON-LISP|::|LAMBDA|
              (|COMMON-LISP|::|&KEY|
               (|SYSTEM|::|TEST| '|SYSTEM|::|DEFAULT-RESTART-TEST|)
               (|SYSTEM|::|INTERACTIVE|
                '|SYSTEM|::|DEFAULT-RESTART-INTERACTIVE|)
               (|SYSTEM|::|REPORT| '|SYSTEM|::|DEFAULT-RESTART-REPORT|)
               ((|SYSTEM|::|MEANINGFULP| |SYSTEM|::|MEANINGFULP|)
                '|COMMON-LISP|::|T|))
              (|COMMON-LISP|::|VALUES| |SYSTEM|::|TEST| |SYSTEM|::|INTERACTIVE|
               |SYSTEM|::|REPORT| |SYSTEM|::|MEANINGFULP|))
           (|COMMON-LISP|::|NREVERSE| |SYSTEM|::|KEYWORDS|))
          (|COMMON-LISP|::|WHEN|
           (|COMMON-LISP|::|AND| (|COMMON-LISP|::|NULL| |SYSTEM|::|NAME|)
            (|COMMON-LISP|::|EQ| |SYSTEM|::|REPORT|
             '|SYSTEM|::|DEFAULT-RESTART-REPORT|))
           (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
            |SYSTEM|::|WHOLE-FORM| :|DETAIL| |SYSTEM|::|RESTART-CLAUSE|
            (|SYSTEM|::|TEXT|
             "~S: unnamed restarts require ~S to be specified: ~S")
            |SYSTEM|::|CALLER| ':|REPORT| |SYSTEM|::|RESTART-CLAUSE|))
          (|COMMON-LISP|::|WHEN|
           (|COMMON-LISP|::|AND| (|COMMON-LISP|::|CONSP| |EXT|::|ARGLIST|)
            (|COMMON-LISP|::|NOT|
             (|COMMON-LISP|::|MEMBER| (|COMMON-LISP|::|FIRST| |EXT|::|ARGLIST|)
              |COMMON-LISP|::|LAMBDA-LIST-KEYWORDS|))
            (|COMMON-LISP|::|EQ| |SYSTEM|::|INTERACTIVE|
             '|SYSTEM|::|DEFAULT-RESTART-INTERACTIVE|))
           (|COMMON-LISP|::|WARN|
            (|SYSTEM|::|TEXT|
             "~S: restart cannot be invoked interactively because it is missing a ~S option: ~S")
            |SYSTEM|::|CALLER| ':|INTERACTIVE| |SYSTEM|::|RESTART-CLAUSE|))
          `(,(|COMMON-LISP|::|GENSYM|) ,|SYSTEM|::|NAME| ,|SYSTEM|::|TEST|
            ,|SYSTEM|::|INTERACTIVE| ,|SYSTEM|::|REPORT|
            ,|SYSTEM|::|MEANINGFULP| ,|EXT|::|ARGLIST| ,@|SYSTEM|::|CLAUSE|))))
     |SYSTEM|::|RESTART-CLAUSES|))
   (|SYSTEM|::|BLOCKNAME| (|COMMON-LISP|::|GENSYM| "RESTART-"))
   (|SYSTEM|::|ARGLISTVAR| (|COMMON-LISP|::|GENSYM| "ARGS-"))
   (|SYSTEM|::|ASSOCIATE|
    (|COMMON-LISP|::|AND| (|COMMON-LISP|::|CONSP| |SYSTEM|::|FORM|)
     (|COMMON-LISP|::|CASE| (|COMMON-LISP|::|FIRST| |SYSTEM|::|FORM|)
      ((|COMMON-LISP|::|SIGNAL| |COMMON-LISP|::|ERROR| |COMMON-LISP|::|CERROR|
        |COMMON-LISP|::|WARN| |SYSTEM|::|ERROR-OF-TYPE|)
       |COMMON-LISP|::|T|)
      (|COMMON-LISP|::|T| |COMMON-LISP|::|NIL|))
     (|COMMON-LISP|::|GENSYM| "RESTARTS-"))))
  `(|COMMON-LISP|::|BLOCK| ,|SYSTEM|::|BLOCKNAME|
    (|COMMON-LISP|::|LET| (,|SYSTEM|::|ARGLISTVAR|)
     (|COMMON-LISP|::|TAGBODY|
      ,(|COMMON-LISP|::|LET|
        ((|SYSTEM|::|RESTART-FORMS|
          (|COMMON-LISP|::|MAPCAR|
           #'(|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|XCLAUSE|)
              (|COMMON-LISP|::|LET|
               ((|SYSTEM|::|TAG| (|COMMON-LISP|::|FIRST| |SYSTEM|::|XCLAUSE|))
                (|SYSTEM|::|NAME|
                 (|COMMON-LISP|::|SECOND| |SYSTEM|::|XCLAUSE|))
                (|SYSTEM|::|TEST| (|COMMON-LISP|::|THIRD| |SYSTEM|::|XCLAUSE|))
                (|SYSTEM|::|INTERACTIVE|
                 (|COMMON-LISP|::|FOURTH| |SYSTEM|::|XCLAUSE|))
                (|SYSTEM|::|REPORT|
                 (|COMMON-LISP|::|FIFTH| |SYSTEM|::|XCLAUSE|))
                (|SYSTEM|::|MEANINGFULP|
                 (|COMMON-LISP|::|SIXTH| |SYSTEM|::|XCLAUSE|)))
               (|SYSTEM|::|MAKE-RESTART-FORM| `',|SYSTEM|::|NAME|
                `#',|SYSTEM|::|TEST| '|COMMON-LISP|::|NIL|
                `#'(|COMMON-LISP|::|LAMBDA|
                    (|COMMON-LISP|::|&REST| |SYSTEM|::|ARGUMENTS|)
                    (|COMMON-LISP|::|SETQ| ,|SYSTEM|::|ARGLISTVAR|
                     |SYSTEM|::|ARGUMENTS|)
                    (|COMMON-LISP|::|GO| ,|SYSTEM|::|TAG|))
                (|COMMON-LISP|::|IF|
                 (|COMMON-LISP|::|EQ| |SYSTEM|::|REPORT|
                  '|SYSTEM|::|DEFAULT-RESTART-REPORT|)
                 `|COMMON-LISP|::|NIL|
                 `#',(|COMMON-LISP|::|IF|
                      (|COMMON-LISP|::|STRINGP| |SYSTEM|::|REPORT|)
                      `(|COMMON-LISP|::|LAMBDA| (|COMMON-LISP|::|STREAM|)
                        (|COMMON-LISP|::|WRITE-STRING| ,|SYSTEM|::|REPORT|
                         |COMMON-LISP|::|STREAM|))
                      |SYSTEM|::|REPORT|))
                `#',|SYSTEM|::|INTERACTIVE| |SYSTEM|::|MEANINGFULP|)))
           |SYSTEM|::|XCLAUSES|))
         (|SYSTEM|::|FORM|
          `(|COMMON-LISP|::|RETURN-FROM| ,|SYSTEM|::|BLOCKNAME|
            ,|SYSTEM|::|FORM|)))
        `(|COMMON-LISP|::|LET*|
          ,(|COMMON-LISP|::|IF| |SYSTEM|::|ASSOCIATE|
            `((,|SYSTEM|::|ASSOCIATE|
               (|COMMON-LISP|::|LIST| ,@|SYSTEM|::|RESTART-FORMS|))
              (|SYSTEM|::|*ACTIVE-RESTARTS*|
               (|COMMON-LISP|::|APPEND| ,|SYSTEM|::|ASSOCIATE|
                |SYSTEM|::|*ACTIVE-RESTARTS*|))
              (|SYSTEM|::|*CONDITION-RESTARTS*|
               |SYSTEM|::|*CONDITION-RESTARTS*|))
            `((|SYSTEM|::|*ACTIVE-RESTARTS*|
               (|COMMON-LISP|::|LIST*| ,@|SYSTEM|::|RESTART-FORMS|
                |SYSTEM|::|*ACTIVE-RESTARTS*|))))
          ,(|COMMON-LISP|::|IF| |SYSTEM|::|ASSOCIATE|
            `(|COMMON-LISP|::|HANDLER-BIND|
              ((|COMMON-LISP|::|CONDITION|
                #'(|COMMON-LISP|::|LAMBDA| (|COMMON-LISP|::|CONDITION|)
                   (|SYSTEM|::|ADD-CONDITION-RESTARTS|
                    |COMMON-LISP|::|CONDITION| ,|SYSTEM|::|ASSOCIATE|)
                   (|COMMON-LISP|::|SIGNAL| |COMMON-LISP|::|CONDITION|))))
              ,|SYSTEM|::|FORM|)
            |SYSTEM|::|FORM|)))
      ,@(|EXT|::|MAPCAP|
         #'(|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|XCLAUSE|)
            (|COMMON-LISP|::|LET|
             ((|SYSTEM|::|TAG| (|COMMON-LISP|::|FIRST| |SYSTEM|::|XCLAUSE|))
              (|SYSTEM|::|LAMBDABODY|
               (|COMMON-LISP|::|CDDDDR|
                (|COMMON-LISP|::|CDDR| |SYSTEM|::|XCLAUSE|))))
             `(,|SYSTEM|::|TAG|
               (|COMMON-LISP|::|RETURN-FROM| ,|SYSTEM|::|BLOCKNAME|
                (|COMMON-LISP|::|APPLY|
                 #'(|COMMON-LISP|::|LAMBDA| ,@|SYSTEM|::|LAMBDABODY|)
                 ,|SYSTEM|::|ARGLISTVAR|)))))
         |SYSTEM|::|XCLAUSES|))))))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|EXPAND-RESTART-CASE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|CALLER| |SYSTEM|::|WHOLE-FORM| |SYSTEM|::|RESTART-CLAUSES|
    |SYSTEM|::|FORM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|RESTART-CASE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|RESTART-CASE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|RESTART-CASE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|ENV|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|WHOLE-FORM| |SYSTEM|::|<MACRO-FORM>|)
       (|SYSTEM|::|FORM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|RESTART-CLAUSES| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|RESTART-CASE|
       (|SYSTEM|::|EXPAND-RESTART-CASE| '|COMMON-LISP|::|RESTART-CASE|
        |SYSTEM|::|WHOLE-FORM| |SYSTEM|::|RESTART-CLAUSES|
        (|COMMON-LISP|::|MACROEXPAND| |SYSTEM|::|FORM| |SYSTEM|::|ENV|)))))))
  '(|COMMON-LISP|::|&WHOLE| |SYSTEM|::|WHOLE-FORM| |SYSTEM|::|FORM|
    |COMMON-LISP|::|&REST| |SYSTEM|::|RESTART-CLAUSES|
    |COMMON-LISP|::|&ENVIRONMENT| |SYSTEM|::|ENV|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXT|::|WITH-RESTARTS|)
(|SYSTEM|::|%PUTD| '|EXT|::|WITH-RESTARTS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXT|::|WITH-RESTARTS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|ENV|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|WHOLE-FORM| |SYSTEM|::|<MACRO-FORM>|)
       (|SYSTEM|::|RESTART-CLAUSES|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |EXT|::|WITH-RESTARTS|
       (|SYSTEM|::|EXPAND-RESTART-CASE| '|EXT|::|WITH-RESTARTS|
        |SYSTEM|::|WHOLE-FORM| |SYSTEM|::|RESTART-CLAUSES|
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|CDR| |SYSTEM|::|BODY|)
         (|COMMON-LISP|::|CONS| '|COMMON-LISP|::|PROGN| |SYSTEM|::|BODY|)
         (|COMMON-LISP|::|MACROEXPAND| (|COMMON-LISP|::|CAR| |SYSTEM|::|BODY|)
          |SYSTEM|::|ENV|))))))))
  '(|COMMON-LISP|::|&WHOLE| |SYSTEM|::|WHOLE-FORM| |SYSTEM|::|RESTART-CLAUSES|
    |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY| |COMMON-LISP|::|&ENVIRONMENT|
    |SYSTEM|::|ENV|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|WITH-SIMPLE-RESTART|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|WITH-SIMPLE-RESTART|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|WITH-SIMPLE-RESTART|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G22789| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G22790|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| #1# 2.))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|COMMON-LISP|::|WITH-SIMPLE-RESTART| #1#
          '#4=(|SYSTEM|::|NAME| |SYSTEM|::|FORMAT-STRING|
               |COMMON-LISP|::|&REST| |SYSTEM|::|FORMAT-ARGUMENTS|))
         #1#))
       (|SYSTEM|::|NAME| (|COMMON-LISP|::|CAR| #3#))
       (|SYSTEM|::|FORMAT-STRING| (|COMMON-LISP|::|CADR| . #5=(#3#)))
       (|SYSTEM|::|FORMAT-ARGUMENTS| (|COMMON-LISP|::|CDDR| . #5#))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|WITH-SIMPLE-RESTART|
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|OR| |SYSTEM|::|FORMAT-ARGUMENTS|
         (|COMMON-LISP|::|NOT|
          (|COMMON-LISP|::|CONSTANTP| |SYSTEM|::|FORMAT-STRING|)))
        `(|EXT|::|WITH-RESTARTS|
          ((,|SYSTEM|::|NAME| :|REPORT|
            (|COMMON-LISP|::|LAMBDA| (|COMMON-LISP|::|STREAM|)
             (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|STREAM|
              ,|SYSTEM|::|FORMAT-STRING| ,@|SYSTEM|::|FORMAT-ARGUMENTS|))
            |COMMON-LISP|::|NIL|
            (|COMMON-LISP|::|VALUES| |COMMON-LISP|::|NIL| |COMMON-LISP|::|T|)))
          ,@|SYSTEM|::|BODY|)
        (|COMMON-LISP|::|LET|
         ((|SYSTEM|::|BLOCKNAME| (|COMMON-LISP|::|GENSYM| "RESTART-"))
          (|SYSTEM|::|TAG| (|COMMON-LISP|::|GENSYM| "SIMPLE-RESTART-")))
         `(|COMMON-LISP|::|BLOCK| ,|SYSTEM|::|BLOCKNAME|
           (|COMMON-LISP|::|CATCH| ',|SYSTEM|::|TAG|
            (|COMMON-LISP|::|LET|
             ((|SYSTEM|::|*ACTIVE-RESTARTS*|
               (|COMMON-LISP|::|CONS|
                (|COMMON-LISP|::|LOAD-TIME-VALUE|
                 (|SYSTEM|::|MAKE-RESTART| :|NAME| ',|SYSTEM|::|NAME|
                  :|INVOKE-TAG| ',|SYSTEM|::|TAG| :|REPORT|
                  #'(|COMMON-LISP|::|LAMBDA| (|COMMON-LISP|::|STREAM|)
                     (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|STREAM|
                      ,|SYSTEM|::|FORMAT-STRING|))))
                |SYSTEM|::|*ACTIVE-RESTARTS*|)))
             (|COMMON-LISP|::|RETURN-FROM| ,|SYSTEM|::|BLOCKNAME|
              (|COMMON-LISP|::|PROGN| ,@|SYSTEM|::|BODY|))))
           (|COMMON-LISP|::|VALUES| |COMMON-LISP|::|NIL|
            |COMMON-LISP|::|T|)))))))))
  '(#4# |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|ABORT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL| |COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|CONTINUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL| |COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|MUFFLE-WARNING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL| |COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|STORE-VALUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|VALUE| |COMMON-LISP|::|&OPTIONAL| |COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|USE-VALUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|VALUE| |COMMON-LISP|::|&OPTIONAL| |COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|C-DEFUN| '|EXT|::|RETRY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL| |COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|PROMPT-FOR-NEW-VALUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|PLACE| |SYSTEM|::|PLACE-NUMVALUES| |COMMON-LISP|::|&OPTIONAL|
    |SYSTEM|::|INSTEAD-P|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|CHECK-TYPE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|CHECK-TYPE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|CHECK-TYPE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|ENV|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.
       4.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|PLACE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|TYPESPEC| (|COMMON-LISP|::|CADDR| . #1#))
       (|COMMON-LISP|::|STRING|
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|CDDDR| . #1#)
         (|COMMON-LISP|::|CADDDR| . #1#) |COMMON-LISP|::|NIL|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|CHECK-TYPE|
       (|COMMON-LISP|::|LET|
        ((|SYSTEM|::|TAG1| (|COMMON-LISP|::|GENSYM| "CHECK-TYPE-"))
         (|SYSTEM|::|TAG2| (|COMMON-LISP|::|GENSYM| "OK-"))
         (|SYSTEM|::|VAR| (|COMMON-LISP|::|GENSYM|)))
        `(|COMMON-LISP|::|TAGBODY| ,|SYSTEM|::|TAG1|
          (|COMMON-LISP|::|LET| ((,|SYSTEM|::|VAR| ,|SYSTEM|::|PLACE|))
           (|COMMON-LISP|::|WHEN|
            (|COMMON-LISP|::|TYPEP| ,|SYSTEM|::|VAR| ',|SYSTEM|::|TYPESPEC|)
            (|COMMON-LISP|::|GO| ,|SYSTEM|::|TAG2|))
           (|SYSTEM|::|CHECK-TYPE-FAILED| ',|SYSTEM|::|PLACE| ,|SYSTEM|::|VAR|
            #'(|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|NEW-VALUE|)
               (|COMMON-LISP|::|SETF| ,|SYSTEM|::|PLACE|
                |SYSTEM|::|NEW-VALUE|))
            ,(|COMMON-LISP|::|LENGTH|
              (|COMMON-LISP|::|NTH-VALUE| 2.
               (|COMMON-LISP|::|GET-SETF-EXPANSION| |SYSTEM|::|PLACE|
                |SYSTEM|::|ENV|)))
            ,|COMMON-LISP|::|STRING| ',|SYSTEM|::|TYPESPEC|))
          (|COMMON-LISP|::|GO| ,|SYSTEM|::|TAG1|) ,|SYSTEM|::|TAG2|)))))))
  '(|SYSTEM|::|PLACE| |SYSTEM|::|TYPESPEC| |COMMON-LISP|::|&OPTIONAL|
    (|COMMON-LISP|::|STRING| |COMMON-LISP|::|NIL|)
    |COMMON-LISP|::|&ENVIRONMENT| |SYSTEM|::|ENV|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|CHECK-TYPE-FAILED|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|PLACE| |SYSTEM|::|PLACE-OLDVALUE| |SYSTEM|::|PLACE-SETTER|
    |SYSTEM|::|PLACE-NUMVALUES| |COMMON-LISP|::|STRING| |SYSTEM|::|TYPESPEC|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|ASSERT|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|ASSERT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|ASSERT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|ENV|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|TEST-FORM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|PLACE-LIST|
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|CDDR| . #1#)
         (|COMMON-LISP|::|CADDR| . #1#) |COMMON-LISP|::|NIL|))
       (|SYSTEM|::|DATUM|
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|CDDDR| . #1#)
         (|COMMON-LISP|::|CADDDR| . #1#) |COMMON-LISP|::|NIL|))
       (|SYSTEM|::|ARGS| (|COMMON-LISP|::|CDDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|ASSERT|
       (|COMMON-LISP|::|LET|
        ((|SYSTEM|::|TAG1| (|COMMON-LISP|::|GENSYM| "ASSERT-"))
         (|SYSTEM|::|TAG2| (|COMMON-LISP|::|GENSYM| "OK-")))
        `(|COMMON-LISP|::|TAGBODY| ,|SYSTEM|::|TAG1|
          (|COMMON-LISP|::|WHEN| ,|SYSTEM|::|TEST-FORM|
           (|COMMON-LISP|::|GO| ,|SYSTEM|::|TAG2|))
          (,@(|COMMON-LISP|::|IF| |SYSTEM|::|PLACE-LIST|
              (|COMMON-LISP|::|LET|
               ((|SYSTEM|::|ALL-NUMVALUES| '|COMMON-LISP|::|NIL|)
                (|SYSTEM|::|ALL-SETTER-VARS| '|COMMON-LISP|::|NIL|)
                (|SYSTEM|::|ALL-SETTER-FORMS| '|COMMON-LISP|::|NIL|))
               (|COMMON-LISP|::|DO|
                ((|SYSTEM|::|PL| |SYSTEM|::|PLACE-LIST|
                  (|COMMON-LISP|::|CDR| |SYSTEM|::|PL|)))
                ((|COMMON-LISP|::|ENDP| |SYSTEM|::|PL|))
                (|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
                 (|SYSTEM|::|TEMPS| |SYSTEM|::|SUBFORMS| |SYSTEM|::|STORES|
                  |SYSTEM|::|SETTERFORM| |SYSTEM|::|GETTERFORM|)
                 (|COMMON-LISP|::|GET-SETF-EXPANSION|
                  (|COMMON-LISP|::|CAR| |SYSTEM|::|PL|) |SYSTEM|::|ENV|)
                 (|COMMON-LISP|::|DECLARE|
                  (|COMMON-LISP|::|IGNORE| |SYSTEM|::|GETTERFORM|))
                 (|COMMON-LISP|::|PUSH|
                  (|COMMON-LISP|::|LENGTH| |SYSTEM|::|STORES|)
                  |SYSTEM|::|ALL-NUMVALUES|)
                 (|COMMON-LISP|::|SETQ| |SYSTEM|::|ALL-SETTER-VARS|
                  (|COMMON-LISP|::|REVAPPEND| |SYSTEM|::|STORES|
                   |SYSTEM|::|ALL-SETTER-VARS|))
                 (|COMMON-LISP|::|PUSH|
                  (|SYSTEM|::|WRAP-LET*|
                   (|COMMON-LISP|::|MAPCAR| #'|COMMON-LISP|::|LIST|
                    |SYSTEM|::|TEMPS| |SYSTEM|::|SUBFORMS|)
                   |SYSTEM|::|SETTERFORM|)
                  |SYSTEM|::|ALL-SETTER-FORMS|)))
               (|COMMON-LISP|::|SETQ| |SYSTEM|::|ALL-NUMVALUES|
                (|COMMON-LISP|::|NREVERSE| |SYSTEM|::|ALL-NUMVALUES|))
               (|COMMON-LISP|::|SETQ| |SYSTEM|::|ALL-SETTER-VARS|
                (|COMMON-LISP|::|NREVERSE| |SYSTEM|::|ALL-SETTER-VARS|))
               (|COMMON-LISP|::|SETQ| |SYSTEM|::|ALL-SETTER-FORMS|
                (|COMMON-LISP|::|NREVERSE| |SYSTEM|::|ALL-SETTER-FORMS|))
               `(|SYSTEM|::|ASSERT-FAILED| ',|SYSTEM|::|PLACE-LIST|
                 ',|SYSTEM|::|ALL-NUMVALUES|
                 #'(|COMMON-LISP|::|LAMBDA| ,|SYSTEM|::|ALL-SETTER-VARS|
                    ,@|SYSTEM|::|ALL-SETTER-FORMS|)))
              `(|SYSTEM|::|SIMPLE-ASSERT-FAILED|))
           ,@(|COMMON-LISP|::|IF| |SYSTEM|::|DATUM|
              `(|COMMON-LISP|::|NIL| ,|SYSTEM|::|DATUM| ,@|SYSTEM|::|ARGS|)
              `((|SYSTEM|::|ASSERT-ERROR-STRING| ',|SYSTEM|::|TEST-FORM|))))
          (|COMMON-LISP|::|GO| ,|SYSTEM|::|TAG1|) ,|SYSTEM|::|TAG2|)))))))
  '(|SYSTEM|::|TEST-FORM| |COMMON-LISP|::|&OPTIONAL|
    (|SYSTEM|::|PLACE-LIST| |COMMON-LISP|::|NIL|)
    (|SYSTEM|::|DATUM| |COMMON-LISP|::|NIL|) |COMMON-LISP|::|&REST|
    |SYSTEM|::|ARGS| |COMMON-LISP|::|&ENVIRONMENT| |SYSTEM|::|ENV|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|ASSERT-FAILED|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|PLACE-LIST| |SYSTEM|::|PLACE-NUMVALUES-LIST|
    |SYSTEM|::|PLACES-SETTER| |SYSTEM|::|ERROR-STRING| |COMMON-LISP|::|&REST|
    |SYSTEM|::|CONDITION-DATUM+ARGS|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|SIMPLE-ASSERT-FAILED|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|ERROR-STRING| |COMMON-LISP|::|&REST|
    |SYSTEM|::|CONDITION-DATUM+ARGS|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|CORRECTABLE-ERROR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|OPTIONS| |COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|CHECK-VALUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|PLACE| |COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|RETRY-FUNCTION-CALL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|CONDITION| |COMMON-LISP|::|FUNCTION|
    |SYSTEM|::|ARGUMENTS|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|EVAL-LOADED-FORM|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|OBJ| |SYSTEM|::|FILE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|ETYPECASE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|ETYPECASE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|ETYPECASE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|KEYFORM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|KEYCLAUSELIST| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|ETYPECASE|
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|ASSOC| |COMMON-LISP|::|T| |SYSTEM|::|KEYCLAUSELIST|)
        `(|COMMON-LISP|::|TYPECASE| ,|SYSTEM|::|KEYFORM|
          ,@|SYSTEM|::|KEYCLAUSELIST|)
        (|SYSTEM|::|SIMPLY-ERROR| '|COMMON-LISP|::|TYPECASE|
         |SYSTEM|::|KEYFORM| |SYSTEM|::|KEYCLAUSELIST|
         (|SYSTEM|::|TYPECASE-ERRORSTRING| |SYSTEM|::|KEYFORM|
          |SYSTEM|::|KEYCLAUSELIST|)
         (|SYSTEM|::|TYPECASE-EXPECTED-TYPE| |SYSTEM|::|KEYCLAUSELIST|))))))))
  '(|SYSTEM|::|KEYFORM| |COMMON-LISP|::|&REST| |SYSTEM|::|KEYCLAUSELIST|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|CTYPECASE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|CTYPECASE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|CTYPECASE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|ENV|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|KEYPLACE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|KEYCLAUSELIST| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|CTYPECASE|
       (|COMMON-LISP|::|IF|
        (|COMMON-LISP|::|ASSOC| |COMMON-LISP|::|T| |SYSTEM|::|KEYCLAUSELIST|)
        `(|COMMON-LISP|::|TYPECASE| ,|SYSTEM|::|KEYPLACE|
          ,@|SYSTEM|::|KEYCLAUSELIST|)
        (|SYSTEM|::|RETRY-LOOP| '|COMMON-LISP|::|TYPECASE| |SYSTEM|::|KEYPLACE|
         |SYSTEM|::|KEYCLAUSELIST|
         (|SYSTEM|::|TYPECASE-ERRORSTRING| |SYSTEM|::|KEYPLACE|
          |SYSTEM|::|KEYCLAUSELIST|)
         (|SYSTEM|::|TYPECASE-EXPECTED-TYPE| |SYSTEM|::|KEYCLAUSELIST|)
         |SYSTEM|::|ENV|)))))))
  '(|SYSTEM|::|KEYPLACE| |COMMON-LISP|::|&REST| |SYSTEM|::|KEYCLAUSELIST|
    |COMMON-LISP|::|&ENVIRONMENT| |SYSTEM|::|ENV|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|ECASE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|ECASE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|ECASE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|KEYFORM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|KEYCLAUSELIST| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|ECASE|
       (|SYSTEM|::|SIMPLY-ERROR| '|COMMON-LISP|::|CASE| |SYSTEM|::|KEYFORM|
        |SYSTEM|::|KEYCLAUSELIST|
        (|SYSTEM|::|CASE-ERRORSTRING| |SYSTEM|::|KEYFORM|
         |SYSTEM|::|KEYCLAUSELIST|)
        (|SYSTEM|::|CASE-EXPECTED-TYPE| |SYSTEM|::|KEYCLAUSELIST|)))))))
  '(|SYSTEM|::|KEYFORM| |COMMON-LISP|::|&REST| |SYSTEM|::|KEYCLAUSELIST|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|CCASE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|CCASE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|CCASE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|ENV|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|KEYFORM|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|KEYCLAUSELIST| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|CCASE|
       (|SYSTEM|::|RETRY-LOOP| '|COMMON-LISP|::|CASE| |SYSTEM|::|KEYFORM|
        |SYSTEM|::|KEYCLAUSELIST|
        (|SYSTEM|::|CASE-ERRORSTRING| |SYSTEM|::|KEYFORM|
         |SYSTEM|::|KEYCLAUSELIST|)
        (|SYSTEM|::|CASE-EXPECTED-TYPE| |SYSTEM|::|KEYCLAUSELIST|)
        |SYSTEM|::|ENV|))))))
  '(|SYSTEM|::|KEYFORM| |COMMON-LISP|::|&REST| |SYSTEM|::|KEYCLAUSELIST|
    |COMMON-LISP|::|&ENVIRONMENT| |SYSTEM|::|ENV|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|ETYPECASE-FAILED|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|VALUE| |SYSTEM|::|ERRORSTRING| |SYSTEM|::|EXPECTED-TYPE|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|CTYPECASE-FAILED|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|PLACE| |SYSTEM|::|PLACE-OLDVALUE| |SYSTEM|::|PLACE-SETTER|
    |SYSTEM|::|PLACE-NUMVALUES| |SYSTEM|::|ERRORSTRING|
    |SYSTEM|::|EXPECTED-TYPE|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP|::|*DEBUGGER-HOOK*|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|BREAK|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL| (|SYSTEM|::|FORMAT-STRING| "Break")
    |COMMON-LISP|::|&REST| |SYSTEM|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|CERROR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|CONTINUE-FORMAT-STRING| |SYSTEM|::|ERROR-FORMAT-STRING|
    |COMMON-LISP|::|&REST| |SYSTEM|::|ARGS|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CUSTOM|::|*BREAK-ON-WARNINGS*|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|WARN-OF-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|TYPE| |SYSTEM|::|FORMAT-STRING| |COMMON-LISP|::|&REST|
    |SYSTEM|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|WARN|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|FORMAT-STRING| |COMMON-LISP|::|&REST| |SYSTEM|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|VALID-LOGICAL-PATHNAME-STRING-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|STRING|)))
(|SYSTEM|::|C-DEFUN|
 '|SYSTEM|::|FIND-NONINTERACTIVELY-INVOKABLE-CONTINUE-RESTART|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|MUFFLE-CERROR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXT|::|MUFFLE-CERRORS|)
(|SYSTEM|::|%PUTD| '|EXT|::|MUFFLE-CERRORS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXT|::|MUFFLE-CERRORS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "(MUFFLE-CERRORS {form}*) executes the forms, but when a continuable\n
error occurs, the CONTINUE restart is silently invoked."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|<MACRO-FORM>|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|BODY| (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |EXT|::|MUFFLE-CERRORS|
       `(|COMMON-LISP|::|HANDLER-BIND|
         ((|COMMON-LISP|::|ERROR| #'|SYSTEM|::|MUFFLE-CERROR|))
         ,@|SYSTEM|::|BODY|))))))
  '(|COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|APPEASE-CERROR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXT|::|APPEASE-CERRORS|)
(|SYSTEM|::|%PUTD| '|EXT|::|APPEASE-CERRORS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXT|::|APPEASE-CERRORS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "(APPEASE-CERRORS {form}*) executes the forms, but turns continuable errors\n
into warnings. A continuable error is signalled again as a warning, then\n
its CONTINUE restart is invoked."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|<MACRO-FORM>|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|BODY| (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |EXT|::|APPEASE-CERRORS|
       `(|COMMON-LISP|::|HANDLER-BIND|
         ((|COMMON-LISP|::|ERROR| #'|SYSTEM|::|APPEASE-CERROR|))
         ,@|SYSTEM|::|BODY|))))))
  '(|COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CUSTOM|::|*REPORT-ERROR-PRINT-BACKTRACE*|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|REPORT-ERROR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|EXITUNCONDITIONALLY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|EXITONERROR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXT|::|EXIT-ON-ERROR|)
(|SYSTEM|::|%PUTD| '|EXT|::|EXIT-ON-ERROR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXT|::|EXIT-ON-ERROR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "(EXIT-ON-ERROR {form}*) executes the forms, but exits Lisp if a\n
non-continuable error or a Ctrl-C interrupt occurs."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|<MACRO-FORM>|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|BODY| (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |EXT|::|EXIT-ON-ERROR|
       `(|COMMON-LISP|::|HANDLER-BIND|
         ((|SYSTEM|::|INTERRUPT-CONDITION| #'|SYSTEM|::|EXITUNCONDITIONALLY|)
          (|COMMON-LISP|::|SERIOUS-CONDITION| #'|SYSTEM|::|EXITONERROR|))
         ,@|SYSTEM|::|BODY|))))))
  '(|COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|ABORTONERROR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|CONDITION|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXT|::|ABORT-ON-ERROR|)
(|SYSTEM|::|%PUTD| '|EXT|::|ABORT-ON-ERROR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXT|::|ABORT-ON-ERROR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "(ABORT-ON-ERROR {form}*) executes the forms and aborts all errors."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|<MACRO-FORM>|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|BODY| (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |EXT|::|ABORT-ON-ERROR|
       `(|COMMON-LISP|::|HANDLER-BIND|
         ((|COMMON-LISP|::|SERIOUS-CONDITION| #'|SYSTEM|::|ABORTONERROR|))
         ,@|SYSTEM|::|BODY|))))))
  '(|COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|GLOBAL-HANDLER|
 '#(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|EXT|::|SET-GLOBAL-HANDLER|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|CONDITION-NAME| |SYSTEM|::|HANDLER|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXT|::|WITHOUT-GLOBAL-HANDLERS|)
(|SYSTEM|::|%PUTD| '|EXT|::|WITHOUT-GLOBAL-HANDLERS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXT|::|WITHOUT-GLOBAL-HANDLERS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Remove all global handlers, execute BODY, restore the handlers."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|<MACRO-FORM>|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|BODY| (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |EXT|::|WITHOUT-GLOBAL-HANDLERS|
       (|COMMON-LISP|::|LET|
        ((|SYSTEM|::|HANDLERS| (|COMMON-LISP|::|GENSYM| "HANDLERS-")))
        `(|COMMON-LISP|::|LET|
          ((,|SYSTEM|::|HANDLERS|
            (|EXT|::|SET-GLOBAL-HANDLER| |COMMON-LISP|::|NIL|
             |COMMON-LISP|::|NIL|)))
          (|COMMON-LISP|::|UNWIND-PROTECT|
           (|COMMON-LISP|::|PROGN| ,@|SYSTEM|::|BODY|)
           (|EXT|::|SET-GLOBAL-HANDLER| ,|SYSTEM|::|HANDLERS|
            |COMMON-LISP|::|NIL|)))))))))
  '(|COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
