#0Y_ #0Y |CHARSET|::|UTF-8|
(|SYSTEM|::|%IN-PACKAGE| "EXPORTING" :|NICKNAMES| '|COMMON-LISP|::|NIL| :|USE|
 '|COMMON-LISP|::|NIL| :|CASE-SENSITIVE| |COMMON-LISP|::|NIL| :|CASE-INVERTED|
 |COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|SHADOW|
 '("DEFCONSTANT" "DEFPARAMETER" "DEFVAR" "DEFINE-SYMBOL-MACRO" "DEFUN"
   "DEFGENERIC" "DEFMETHOD" "DEFINE-COMPILER-MACRO" "DEFSETF"
   "DEFINE-SETF-EXPANDER" "DEFMACRO" "DEFINE-MODIFY-MACRO" "DEFTYPE"
   "DEFSTRUCT" "DEFCLASS" "DEFINE-CONDITION" "DEFINE-METHOD-COMBINATION")
 "EXPORTING")
(|COMMON-LISP|::|USE-PACKAGE| '("COMMON-LISP") "EXPORTING")
(|SYSTEM|::|INTERN-EXPORT|
 '("DEFCONSTANT" "DEFPARAMETER" "DEFVAR" "DEFINE-SYMBOL-MACRO" "DEFUN"
   "DEFGENERIC" "DEFMETHOD" "DEFINE-COMPILER-MACRO" "DEFSETF"
   "DEFINE-SETF-EXPANDER" "DEFMACRO" "DEFINE-MODIFY-MACRO" "DEFTYPE"
   "DEFSTRUCT" "DEFCLASS" "DEFINE-CONDITION" "DEFINE-METHOD-COMBINATION")
 "EXPORTING" |COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|SETF|
 (|SYSTEM|::|PACKAGE-DOCUMENTATION|
  (|COMMON-LISP|::|FIND-PACKAGE| "EXPORTING"))
 "Replacements for the standard macros with the versions that export their definienda.")
(|COMMON-LISP|::|FIND-PACKAGE| "EXPORTING")
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "EXPORTING"))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXPORTING|::|DEFCONSTANT|)
(|SYSTEM|::|%PUTD| '|EXPORTING|::|DEFCONSTANT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXPORTING|::|DEFCONSTANT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.
       4.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|EXPORTING|::|WHOLE| |SYSTEM|::|<MACRO-FORM>|)
       (|EXPORTING|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|EXPORTING|::|INITIAL-VALUE| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLOS|::|DOCUMENTATION| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|DECLARE|
       (|COMMON-LISP|::|IGNORE| |EXPORTING|::|INITIAL-VALUE|
        |CLOS|::|DOCUMENTATION|))
      (|COMMON-LISP|::|BLOCK| |EXPORTING|::|DEFCONSTANT|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|EXPORT|
          ',(|COMMON-LISP|::|OR| |EXPORTING|::|NAME| '(|COMMON-LISP|::|NIL|)))
         (|COMMON-LISP|::|DEFCONSTANT| ,|EXPORTING|::|NAME|
          ,@(|COMMON-LISP|::|CDDR| |EXPORTING|::|WHOLE|))))))))
  '(|COMMON-LISP|::|&WHOLE| |EXPORTING|::|WHOLE| |EXPORTING|::|NAME|
    |EXPORTING|::|INITIAL-VALUE| |COMMON-LISP|::|&OPTIONAL|
    |CLOS|::|DOCUMENTATION|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXPORTING|::|DEFPARAMETER|)
(|SYSTEM|::|%PUTD| '|EXPORTING|::|DEFPARAMETER|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXPORTING|::|DEFPARAMETER|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.
       4.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|EXPORTING|::|WHOLE| |SYSTEM|::|<MACRO-FORM>|)
       (|EXPORTING|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|EXPORTING|::|INITIAL-VALUE| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLOS|::|DOCUMENTATION| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|DECLARE|
       (|COMMON-LISP|::|IGNORE| |EXPORTING|::|INITIAL-VALUE|
        |CLOS|::|DOCUMENTATION|))
      (|COMMON-LISP|::|BLOCK| |EXPORTING|::|DEFPARAMETER|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|EXPORT|
          ',(|COMMON-LISP|::|OR| |EXPORTING|::|NAME| '(|COMMON-LISP|::|NIL|)))
         (|COMMON-LISP|::|DEFPARAMETER| ,|EXPORTING|::|NAME|
          ,@(|COMMON-LISP|::|CDDR| |EXPORTING|::|WHOLE|))))))))
  '(|COMMON-LISP|::|&WHOLE| |EXPORTING|::|WHOLE| |EXPORTING|::|NAME|
    |EXPORTING|::|INITIAL-VALUE| |COMMON-LISP|::|&OPTIONAL|
    |CLOS|::|DOCUMENTATION|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXPORTING|::|DEFVAR|)
(|SYSTEM|::|%PUTD| '|EXPORTING|::|DEFVAR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXPORTING|::|DEFVAR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.
       4.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|EXPORTING|::|WHOLE| |SYSTEM|::|<MACRO-FORM>|)
       (|EXPORTING|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|EXPORTING|::|INITIAL-VALUE| (|COMMON-LISP|::|CADDR| . #1#))
       (|CLOS|::|DOCUMENTATION| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|DECLARE|
       (|COMMON-LISP|::|IGNORE| |EXPORTING|::|INITIAL-VALUE|
        |CLOS|::|DOCUMENTATION|))
      (|COMMON-LISP|::|BLOCK| |EXPORTING|::|DEFVAR|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|EXPORT|
          ',(|COMMON-LISP|::|OR| |EXPORTING|::|NAME| '(|COMMON-LISP|::|NIL|)))
         (|COMMON-LISP|::|DEFVAR| ,|EXPORTING|::|NAME|
          ,@(|COMMON-LISP|::|CDDR| |EXPORTING|::|WHOLE|))))))))
  '(|COMMON-LISP|::|&WHOLE| |EXPORTING|::|WHOLE| |EXPORTING|::|NAME|
    |COMMON-LISP|::|&OPTIONAL| |EXPORTING|::|INITIAL-VALUE|
    |CLOS|::|DOCUMENTATION|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXPORTING|::|DEFINE-SYMBOL-MACRO|)
(|SYSTEM|::|%PUTD| '|EXPORTING|::|DEFINE-SYMBOL-MACRO|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXPORTING|::|DEFINE-SYMBOL-MACRO|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.
       3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|COMMON-LISP|::|SYMBOL|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|EXPORTING|::|EXPANSION| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |EXPORTING|::|DEFINE-SYMBOL-MACRO|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|EXPORT|
          ',(|COMMON-LISP|::|OR| |COMMON-LISP|::|SYMBOL|
             '(|COMMON-LISP|::|NIL|)))
         (|COMMON-LISP|::|DEFINE-SYMBOL-MACRO| ,|COMMON-LISP|::|SYMBOL|
          ,|EXPORTING|::|EXPANSION|)))))))
  '(|COMMON-LISP|::|SYMBOL| |EXPORTING|::|EXPANSION|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXPORTING|::|DEFUN|)
(|SYSTEM|::|%PUTD| '|EXPORTING|::|DEFUN|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXPORTING|::|DEFUN|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|EXPORTING|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|EXPORTING|::|LAMBDA-LIST| (|COMMON-LISP|::|CADDR| . #1#))
       (|EXPORTING|::|BODY| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |EXPORTING|::|DEFUN|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|EXPORT|
          ',(|COMMON-LISP|::|OR|
             (|SYSTEM|::|FUNCTION-BLOCK-NAME| |EXPORTING|::|NAME|)
             '(|COMMON-LISP|::|NIL|)))
         (|COMMON-LISP|::|DEFUN| ,|EXPORTING|::|NAME|
          ,|EXPORTING|::|LAMBDA-LIST| ,@|EXPORTING|::|BODY|)))))))
  '(|EXPORTING|::|NAME| |EXPORTING|::|LAMBDA-LIST| |COMMON-LISP|::|&BODY|
    |EXPORTING|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXPORTING|::|DEFGENERIC|)
(|SYSTEM|::|%PUTD| '|EXPORTING|::|DEFGENERIC|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXPORTING|::|DEFGENERIC|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|EXPORTING|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|EXPORTING|::|LAMBDA-LIST| (|COMMON-LISP|::|CADDR| . #1#))
       (|EXPORTING|::|OPTIONS| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |EXPORTING|::|DEFGENERIC|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|EXPORT|
          ',(|COMMON-LISP|::|OR|
             (|SYSTEM|::|FUNCTION-BLOCK-NAME| |EXPORTING|::|NAME|)
             '(|COMMON-LISP|::|NIL|)))
         (|CLOS|::|DEFGENERIC| ,|EXPORTING|::|NAME| ,|EXPORTING|::|LAMBDA-LIST|
          ,@|EXPORTING|::|OPTIONS|)))))))
  '(|EXPORTING|::|NAME| |EXPORTING|::|LAMBDA-LIST| |COMMON-LISP|::|&REST|
    |EXPORTING|::|OPTIONS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXPORTING|::|DEFMETHOD|)
(|SYSTEM|::|%PUTD| '|EXPORTING|::|DEFMETHOD|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXPORTING|::|DEFMETHOD|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|EXPORTING|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|EXPORTING|::|DEFINITION| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |EXPORTING|::|DEFMETHOD|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|EXPORT|
          ',(|COMMON-LISP|::|OR|
             (|SYSTEM|::|FUNCTION-BLOCK-NAME| |EXPORTING|::|NAME|)
             '(|COMMON-LISP|::|NIL|)))
         (|CLOS|::|DEFMETHOD| ,|EXPORTING|::|NAME|
          ,@|EXPORTING|::|DEFINITION|)))))))
  '(|EXPORTING|::|NAME| |COMMON-LISP|::|&REST| |EXPORTING|::|DEFINITION|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXPORTING|::|DEFINE-COMPILER-MACRO|)
(|SYSTEM|::|%PUTD| '|EXPORTING|::|DEFINE-COMPILER-MACRO|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXPORTING|::|DEFINE-COMPILER-MACRO|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|EXPORTING|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|EXPORTING|::|LAMBDA-LIST| (|COMMON-LISP|::|CADDR| . #1#))
       (|EXPORTING|::|BODY| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |EXPORTING|::|DEFINE-COMPILER-MACRO|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|EXPORT|
          ',(|COMMON-LISP|::|OR|
             (|SYSTEM|::|FUNCTION-BLOCK-NAME| |EXPORTING|::|NAME|)
             '(|COMMON-LISP|::|NIL|)))
         (|COMMON-LISP|::|DEFINE-COMPILER-MACRO| ,|EXPORTING|::|NAME|
          ,|EXPORTING|::|LAMBDA-LIST| ,@|EXPORTING|::|BODY|)))))))
  '(|EXPORTING|::|NAME| |EXPORTING|::|LAMBDA-LIST| |COMMON-LISP|::|&BODY|
    |EXPORTING|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXPORTING|::|DEFSETF|)
(|SYSTEM|::|%PUTD| '|EXPORTING|::|DEFSETF|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXPORTING|::|DEFSETF|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|EXPORTING|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|EXPORTING|::|DEFINITION| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |EXPORTING|::|DEFSETF|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|EXPORT|
          ',(|COMMON-LISP|::|OR| |EXPORTING|::|NAME| '(|COMMON-LISP|::|NIL|)))
         (|COMMON-LISP|::|DEFSETF| ,|EXPORTING|::|NAME|
          ,@|EXPORTING|::|DEFINITION|)))))))
  '(|EXPORTING|::|NAME| |COMMON-LISP|::|&REST| |EXPORTING|::|DEFINITION|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXPORTING|::|DEFINE-SETF-EXPANDER|)
(|SYSTEM|::|%PUTD| '|EXPORTING|::|DEFINE-SETF-EXPANDER|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXPORTING|::|DEFINE-SETF-EXPANDER|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|EXPORTING|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|EXPORTING|::|LAMBDA-LIST| (|COMMON-LISP|::|CADDR| . #1#))
       (|EXPORTING|::|BODY| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |EXPORTING|::|DEFINE-SETF-EXPANDER|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|EXPORT|
          ',(|COMMON-LISP|::|OR| |EXPORTING|::|NAME| '(|COMMON-LISP|::|NIL|)))
         (|COMMON-LISP|::|DEFINE-SETF-EXPANDER| ,|EXPORTING|::|NAME|
          ,|EXPORTING|::|LAMBDA-LIST| ,@|EXPORTING|::|BODY|)))))))
  '(|EXPORTING|::|NAME| |EXPORTING|::|LAMBDA-LIST| |COMMON-LISP|::|&BODY|
    |EXPORTING|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXPORTING|::|DEFMACRO|)
(|SYSTEM|::|%PUTD| '|EXPORTING|::|DEFMACRO|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXPORTING|::|DEFMACRO|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|EXPORTING|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|EXPORTING|::|LAMBDA-LIST| (|COMMON-LISP|::|CADDR| . #1#))
       (|EXPORTING|::|BODY| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |EXPORTING|::|DEFMACRO|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|EXPORT|
          ',(|COMMON-LISP|::|OR| |EXPORTING|::|NAME| '(|COMMON-LISP|::|NIL|)))
         (|COMMON-LISP|::|DEFMACRO| ,|EXPORTING|::|NAME|
          ,|EXPORTING|::|LAMBDA-LIST| ,@|EXPORTING|::|BODY|)))))))
  '(|EXPORTING|::|NAME| |EXPORTING|::|LAMBDA-LIST| |COMMON-LISP|::|&BODY|
    |EXPORTING|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXPORTING|::|DEFINE-MODIFY-MACRO|)
(|SYSTEM|::|%PUTD| '|EXPORTING|::|DEFINE-MODIFY-MACRO|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXPORTING|::|DEFINE-MODIFY-MACRO|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4.
       5.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|EXPORTING|::|WHOLE| |SYSTEM|::|<MACRO-FORM>|)
       (|EXPORTING|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|EXPORTING|::|LAMBDA-LIST| (|COMMON-LISP|::|CADDR| . #1#))
       #'(|COMMON-LISP|::|CADDDR| . #1#)
       (|CLOS|::|DOCUMENTATION| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|DECLARE|
       (|COMMON-LISP|::|IGNORE| |EXPORTING|::|LAMBDA-LIST|
        |COMMON-LISP|::|FUNCTION| |CLOS|::|DOCUMENTATION|))
      (|COMMON-LISP|::|BLOCK| |EXPORTING|::|DEFINE-MODIFY-MACRO|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|EXPORT|
          ',(|COMMON-LISP|::|OR| |EXPORTING|::|NAME| '(|COMMON-LISP|::|NIL|)))
         (|COMMON-LISP|::|DEFINE-MODIFY-MACRO| ,|EXPORTING|::|NAME|
          ,@(|COMMON-LISP|::|CDDR| |EXPORTING|::|WHOLE|))))))))
  '(|COMMON-LISP|::|&WHOLE| |EXPORTING|::|WHOLE| |EXPORTING|::|NAME|
    |EXPORTING|::|LAMBDA-LIST| |COMMON-LISP|::|FUNCTION|
    |COMMON-LISP|::|&OPTIONAL| |CLOS|::|DOCUMENTATION|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXPORTING|::|DEFTYPE|)
(|SYSTEM|::|%PUTD| '|EXPORTING|::|DEFTYPE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXPORTING|::|DEFTYPE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|EXPORTING|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|EXPORTING|::|LAMBDA-LIST| (|COMMON-LISP|::|CADDR| . #1#))
       (|EXPORTING|::|BODY| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |EXPORTING|::|DEFTYPE|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|EXPORT|
          ',(|COMMON-LISP|::|OR| |EXPORTING|::|NAME| '(|COMMON-LISP|::|NIL|)))
         (|COMMON-LISP|::|DEFTYPE| ,|EXPORTING|::|NAME|
          ,|EXPORTING|::|LAMBDA-LIST| ,@|EXPORTING|::|BODY|)))))))
  '(|EXPORTING|::|NAME| |EXPORTING|::|LAMBDA-LIST| |COMMON-LISP|::|&BODY|
    |EXPORTING|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|EXPORTING|::|SLOT-DEFINITION-ACCESSOR-SYMBOLS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|EXPORTING|::|SLOT|)))
(|SYSTEM|::|C-DEFUN| '|EXPORTING|::|ALL-ACCESSOR-SYMBOLS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|EXPORTING|::|DIRECT-SLOT-LIST|)))
(|SYSTEM|::|C-DEFUN| '|EXPORTING|::|CLASS-ACCESSOR-SYMBOLS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CLOS|::|CLASS|)))
(|SYSTEM|::|C-DEFUN| '|EXPORTING|::|EXPORT-STRUCTURE-ACCESSORIES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|EXPORTING|::|NAME|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXPORTING|::|DEFSTRUCT|)
(|SYSTEM|::|%PUTD| '|EXPORTING|::|DEFSTRUCT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXPORTING|::|DEFSTRUCT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|EXPORTING|::|NAME+OPTIONS|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|EXPORTING|::|SLOTS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |EXPORTING|::|DEFSTRUCT|
       `(|COMMON-LISP|::|LET|
         ((|EXPORTING|::|NAME|
           (|COMMON-LISP|::|DEFSTRUCT| ,|EXPORTING|::|NAME+OPTIONS|
            ,@|EXPORTING|::|SLOTS|)))
         (|EXPORTING|::|EXPORT-STRUCTURE-ACCESSORIES| |EXPORTING|::|NAME|)
         |EXPORTING|::|NAME|))))))
  '(|EXPORTING|::|NAME+OPTIONS| |COMMON-LISP|::|&REST| |EXPORTING|::|SLOTS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXPORTING|::|DEFCLASS|)
(|SYSTEM|::|%PUTD| '|EXPORTING|::|DEFCLASS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXPORTING|::|DEFCLASS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|EXPORTING|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|EXPORTING|::|SUPERCLASSES| (|COMMON-LISP|::|CADDR| . #1#))
       (|EXPORTING|::|SLOT-SPECS| (|COMMON-LISP|::|CADDDR| . #1#))
       (|EXPORTING|::|OPTIONS| (|COMMON-LISP|::|CDDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |EXPORTING|::|DEFCLASS|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|EXPORT|
          ',(|COMMON-LISP|::|OR| |EXPORTING|::|NAME| '(|COMMON-LISP|::|NIL|)))
         (|COMMON-LISP|::|LET|
          ((|EXPORTING|::|C|
            (|CLOS|::|DEFCLASS| ,|EXPORTING|::|NAME|
             ,|EXPORTING|::|SUPERCLASSES| ,|EXPORTING|::|SLOT-SPECS|
             ,@|EXPORTING|::|OPTIONS|)))
          (|COMMON-LISP|::|EXPORT|
           (|EXPORTING|::|CLASS-ACCESSOR-SYMBOLS| |EXPORTING|::|C|))
          |EXPORTING|::|C|)))))))
  '(|EXPORTING|::|NAME| |EXPORTING|::|SUPERCLASSES| |EXPORTING|::|SLOT-SPECS|
    |COMMON-LISP|::|&REST| |EXPORTING|::|OPTIONS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXPORTING|::|DEFINE-CONDITION|)
(|SYSTEM|::|%PUTD| '|EXPORTING|::|DEFINE-CONDITION|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXPORTING|::|DEFINE-CONDITION|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|EXPORTING|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|EXPORTING|::|PARENT-TYPES| (|COMMON-LISP|::|CADDR| . #1#))
       (|EXPORTING|::|SLOT-SPECS| (|COMMON-LISP|::|CADDDR| . #1#))
       (|EXPORTING|::|OPTIONS| (|COMMON-LISP|::|CDDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |EXPORTING|::|DEFINE-CONDITION|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|EXPORT|
          ',(|COMMON-LISP|::|OR| |EXPORTING|::|NAME| '(|COMMON-LISP|::|NIL|)))
         (|COMMON-LISP|::|LET|
          ((|EXPORTING|::|C|
            (|COMMON-LISP|::|DEFINE-CONDITION| ,|EXPORTING|::|NAME|
             ,|EXPORTING|::|PARENT-TYPES| ,|EXPORTING|::|SLOT-SPECS|
             ,@|EXPORTING|::|OPTIONS|)))
          (|COMMON-LISP|::|EXPORT|
           (|EXPORTING|::|CLASS-ACCESSOR-SYMBOLS|
            (|CLOS|::|FIND-CLASS| |EXPORTING|::|C|)))
          |EXPORTING|::|C|)))))))
  '(|EXPORTING|::|NAME| |EXPORTING|::|PARENT-TYPES| |EXPORTING|::|SLOT-SPECS|
    |COMMON-LISP|::|&REST| |EXPORTING|::|OPTIONS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXPORTING|::|DEFINE-METHOD-COMBINATION|)
(|SYSTEM|::|%PUTD| '|EXPORTING|::|DEFINE-METHOD-COMBINATION|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXPORTING|::|DEFINE-METHOD-COMBINATION|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|EXPORTING|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|EXPORTING|::|DEFINITION| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |EXPORTING|::|DEFINE-METHOD-COMBINATION|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|EXPORT|
          ',(|COMMON-LISP|::|OR| |EXPORTING|::|NAME| '(|COMMON-LISP|::|NIL|)))
         (|CLOS|::|DEFINE-METHOD-COMBINATION| ,|EXPORTING|::|NAME|
          ,@|EXPORTING|::|DEFINITION|)))))))
  '(|EXPORTING|::|NAME| |COMMON-LISP|::|&REST| |EXPORTING|::|DEFINITION|)))
