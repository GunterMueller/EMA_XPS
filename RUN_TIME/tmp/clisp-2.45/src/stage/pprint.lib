#0Y_ #0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "LISP"))
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "EXT"))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXT|::|WITH-GENSYMS|)
(|SYSTEM|::|%PUTD| '|EXT|::|WITH-GENSYMS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXT|::|WITH-GENSYMS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Bind symbols in NAMES to gensyms.  TITLE is a string - `gensym' prefix.\n
Inspired by Paul Graham, <On Lisp>, p. 145."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G2787| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G2788|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| #1# 1.))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|EXT|::|WITH-GENSYMS| #1#
          '#4=(|EXT|::|TITLE| |COMMON-LISP|::|&REST| |EXT|::|NAMES|))
         #1#))
       (|EXT|::|TITLE| (|COMMON-LISP|::|CAR| #3#))
       (|EXT|::|NAMES| (|COMMON-LISP|::|CDR| #3#))
       (|EXT|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |EXT|::|WITH-GENSYMS|
       `(|COMMON-LISP|::|LET|
         (,@(|COMMON-LISP|::|MAPCAR|
             (|COMMON-LISP|::|LAMBDA| (|EXT|::|SY|)
              `(,|EXT|::|SY|
                (|COMMON-LISP|::|GENSYM|
                 ,(|COMMON-LISP|::|CONCATENATE| '|COMMON-LISP|::|STRING|
                   |EXT|::|TITLE| (|COMMON-LISP|::|SYMBOL-NAME| |EXT|::|SY|)
                   "-"))))
             |EXT|::|NAMES|))
         ,@|EXT|::|BODY|))))))
  '(#4# |COMMON-LISP|::|&BODY| |EXT|::|BODY|)))
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "SYS"))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|MAKE-PPRINT-DISPATCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|PPRINT-DISPATCH-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|OBJ|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP|::|*PRINT-PPRINT-DISPATCH*|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|DEFAULT-PRINT-DISPATCH-FUNCTION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|STREAM| |SYSTEM|::|OBJECT|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|PPRINT-DISPATCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|OBJECT| |COMMON-LISP|::|&OPTIONAL|
    (|SYSTEM|::|TABLE| |COMMON-LISP|::|*PRINT-PPRINT-DISPATCH*|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|COPY-PPRINT-DISPATCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL|
    (|SYSTEM|::|TABLE| |COMMON-LISP|::|NIL| |SYSTEM|::|TABLE-P|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|SET-PPRINT-DISPATCH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|TYPE-SPECIFIER| |COMMON-LISP|::|FUNCTION|
    |COMMON-LISP|::|&OPTIONAL| (|SYSTEM|::|PRIORITY| 0.)
    (|SYSTEM|::|TABLE| |COMMON-LISP|::|*PRINT-PPRINT-DISPATCH*|))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|PPRINT-LOGICAL-BLOCK|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|PPRINT-LOGICAL-BLOCK|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|PPRINT-LOGICAL-BLOCK|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G2901| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G2902|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| #1# 2.))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|COMMON-LISP|::|PPRINT-LOGICAL-BLOCK| #1#
          '#4=(|SYSTEM|::|STREAM-SYMBOL| |SYSTEM|::|OBJECT|
               |COMMON-LISP|::|&KEY| |SYSTEM|::|PREFIX|
               |SYSTEM|::|PER-LINE-PREFIX| |SYSTEM|::|SUFFIX|))
         #1#))
       (|SYSTEM|::|STREAM-SYMBOL| (|COMMON-LISP|::|CAR| #3#))
       (|SYSTEM|::|OBJECT| (|COMMON-LISP|::|CADR| . #5=(#3#)))
       (#6=#:|G2903| (|COMMON-LISP|::|CDDR| . #5#))
       (|SYSTEM|::|PREFIX|
        (|COMMON-LISP|::|GETF| #6# ':|PREFIX| . #7=(|COMMON-LISP|::|NIL|)))
       (|SYSTEM|::|PER-LINE-PREFIX|
        (|COMMON-LISP|::|GETF| #6# ':|PER-LINE-PREFIX| . #7#))
       (|SYSTEM|::|SUFFIX| (|COMMON-LISP|::|GETF| #6# ':|SUFFIX| . #7#))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|SYSTEM|::|KEYWORD-TEST| #6# '(:|SUFFIX| :|PER-LINE-PREFIX| :|PREFIX|))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|PPRINT-LOGICAL-BLOCK|
       (|COMMON-LISP|::|LET|
        ((|SYSTEM|::|OUT|
          (|COMMON-LISP|::|CASE| |SYSTEM|::|STREAM-SYMBOL|
           ((|COMMON-LISP|::|T|) '|COMMON-LISP|::|*TERMINAL-IO*|)
           ((|COMMON-LISP|::|NIL|) '|COMMON-LISP|::|*STANDARD-OUTPUT*|)
           (|COMMON-LISP|::|OTHERWISE| |SYSTEM|::|STREAM-SYMBOL|)))
         (|SYSTEM|::|IDX| (|COMMON-LISP|::|GENSYM| "PPLB-IDX-"))
         (|SYSTEM|::|PRE| (|COMMON-LISP|::|GENSYM| "PPLB-PREF-"))
         (|SYSTEM|::|SUF| (|COMMON-LISP|::|GENSYM| "PPLB-SUFF-")))
        `(|COMMON-LISP|::|LET|
          ((,|SYSTEM|::|PRE| ,|SYSTEM|::|PREFIX|)
           (,|SYSTEM|::|SUF| ,|SYSTEM|::|SUFFIX|)
           (|SYSTEM|::|*PRIN-LINE-PREFIX*| ,|SYSTEM|::|PER-LINE-PREFIX|)
           (|SYSTEM|::|*PRIN-MISERP*|
            (|COMMON-LISP|::|AND| |COMMON-LISP|::|*PRINT-MISER-WIDTH*|
             (|COMMON-LISP|::|>| (|SYSTEM|::|LINE-POSITION| ,|SYSTEM|::|OUT|)
              (|COMMON-LISP|::|-|
               (|COMMON-LISP|::|OR| |COMMON-LISP|::|*PRINT-RIGHT-MARGIN*|
                |SYSTEM|::|*PRIN-LINELENGTH*|)
               |COMMON-LISP|::|*PRINT-MISER-WIDTH*|))))
           (|SYSTEM|::|*PRIN-INDENTATION*|
            (|COMMON-LISP|::|IF|
             (|COMMON-LISP|::|BOUNDP| '|SYSTEM|::|*PRIN-INDENTATION*|)
             (|COMMON-LISP|::|+| |SYSTEM|::|*PRIN-INDENTATION*|
              |CUSTOM|::|*PRINT-INDENT-LISTS*|)
             0.)))
          (|COMMON-LISP|::|WHEN|
           (|COMMON-LISP|::|AND| ,|SYSTEM|::|PRE|
            |SYSTEM|::|*PRIN-LINE-PREFIX*|)
           (|SYSTEM|::|PPRINT-LOGICAL-BLOCK-BOTH-ERROR| ,|SYSTEM|::|PRE|))
          (|COMMON-LISP|::|WHEN|
           (|COMMON-LISP|::|AND| ,|SYSTEM|::|PRE|
            (|COMMON-LISP|::|NOT| (|COMMON-LISP|::|STRINGP| ,|SYSTEM|::|PRE|)))
           (|SYSTEM|::|PPRINT-LOGICAL-BLOCK-PREFIX-NOT-STRING-ERROR|
            ,|SYSTEM|::|PRE|))
          (|COMMON-LISP|::|WHEN|
           (|COMMON-LISP|::|AND| ,|SYSTEM|::|SUF|
            (|COMMON-LISP|::|NOT| (|COMMON-LISP|::|STRINGP| ,|SYSTEM|::|SUF|)))
           (|SYSTEM|::|PPRINT-LOGICAL-BLOCK-SUFFIX-NOT-STRING-ERROR|
            ,|SYSTEM|::|SUF|))
          (|COMMON-LISP|::|WHEN|
           (|COMMON-LISP|::|AND| |SYSTEM|::|*PRIN-LINE-PREFIX*|
            (|COMMON-LISP|::|NOT|
             (|COMMON-LISP|::|STRINGP| |SYSTEM|::|*PRIN-LINE-PREFIX*|)))
           (|SYSTEM|::|PPRINT-LOGICAL-BLOCK-PREFIX-NOT-STRING-ERROR|
            |SYSTEM|::|*PRIN-LINE-PREFIX*|))
          (|SYSTEM|::|%PPRINT-LOGICAL-BLOCK|
           (|COMMON-LISP|::|LAMBDA| (,|SYSTEM|::|OUT| |SYSTEM|::|OBJ|)
            (|COMMON-LISP|::|DECLARE|
             (|COMMON-LISP|::|IGNORABLE| |SYSTEM|::|OBJ|))
            (|COMMON-LISP|::|LET|
             ((,|SYSTEM|::|IDX| 0.)
              (|SYSTEM|::|*PRIN-LEVEL*|
               (|COMMON-LISP|::|1+| |SYSTEM|::|*PRIN-LEVEL*|)))
             (|COMMON-LISP|::|MACROLET|
              ((|COMMON-LISP|::|PPRINT-POP| |COMMON-LISP|::|NIL|
                '(|COMMON-LISP|::|COND|
                  ((|COMMON-LISP|::|AND| |COMMON-LISP|::|*PRINT-LENGTH*|
                    (|COMMON-LISP|::|>=| ,|SYSTEM|::|IDX|
                     |COMMON-LISP|::|*PRINT-LENGTH*|))
                   (|COMMON-LISP|::|WRITE-STRING| "..." ,|SYSTEM|::|OUT|)
                   (|COMMON-LISP|::|GO| |SYSTEM|::|PPRINT-LOGICAL-BLOCK-END|))
                  ((|COMMON-LISP|::|AND|
                    (|COMMON-LISP|::|/=| 0. ,|SYSTEM|::|IDX|)
                    (|SYSTEM|::|%CIRCLEP| |SYSTEM|::|OBJ| ,|SYSTEM|::|OUT|))
                   (|COMMON-LISP|::|GO| |SYSTEM|::|PPRINT-LOGICAL-BLOCK-END|))
                  ((|COMMON-LISP|::|LISTP| |SYSTEM|::|OBJ|)
                   (|COMMON-LISP|::|INCF| ,|SYSTEM|::|IDX|)
                   (|COMMON-LISP|::|POP| |SYSTEM|::|OBJ|))
                  (|COMMON-LISP|::|T|
                   (|COMMON-LISP|::|WRITE-STRING| ". " ,|SYSTEM|::|OUT|)
                   (|COMMON-LISP|::|WRITE| |SYSTEM|::|OBJ| :|STREAM|
                    ,|SYSTEM|::|OUT|)
                   (|COMMON-LISP|::|GO|
                    |SYSTEM|::|PPRINT-LOGICAL-BLOCK-END|))))
               (|COMMON-LISP|::|PPRINT-EXIT-IF-LIST-EXHAUSTED|
                |COMMON-LISP|::|NIL|
                '(|COMMON-LISP|::|UNLESS| |SYSTEM|::|OBJ|
                  (|COMMON-LISP|::|GO| |SYSTEM|::|PPRINT-LOGICAL-BLOCK-END|))))
              (|COMMON-LISP|::|WHEN| ,|SYSTEM|::|PRE|
               (|COMMON-LISP|::|WRITE-STRING| ,|SYSTEM|::|PRE|
                ,|SYSTEM|::|OUT|)
               (|COMMON-LISP|::|PPRINT-INDENT| :|CURRENT| 0. ,|SYSTEM|::|OUT|))
              (|COMMON-LISP|::|TAGBODY| ,@|SYSTEM|::|BODY|
               |SYSTEM|::|PPRINT-LOGICAL-BLOCK-END|
               (|COMMON-LISP|::|WHEN| ,|SYSTEM|::|SUF|
                (|COMMON-LISP|::|PPRINT-NEWLINE| :|FILL| ,|SYSTEM|::|OUT|)
                (|COMMON-LISP|::|WRITE-STRING| ,|SYSTEM|::|SUF|
                 ,|SYSTEM|::|OUT|))))))
           ,|SYSTEM|::|OBJECT| ,|SYSTEM|::|OUT|))))))))
  '(#4# |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|PPRINT-LOGICAL-BLOCK-BOTH-ERROR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|PREFIX|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|PPRINT-LOGICAL-BLOCK-PREFIX-NOT-STRING-ERROR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|PREFIX|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|PPRINT-LOGICAL-BLOCK-SUFFIX-NOT-STRING-ERROR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|SUFFIX|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|PPRINT-TAB|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|KIND| |SYSTEM|::|COLNUM| |SYSTEM|::|COLINC|
    |COMMON-LISP|::|&OPTIONAL| |COMMON-LISP|::|STREAM|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|PPRINT-FILL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|OUT| |COMMON-LISP|::|LIST| |COMMON-LISP|::|&OPTIONAL|
    (|SYSTEM|::|COLON-P| |COMMON-LISP|::|T|) |SYSTEM|::|AT-SIGN-P|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|PPRINT-LINEAR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|OUT| |COMMON-LISP|::|LIST| |COMMON-LISP|::|&OPTIONAL|
    (|SYSTEM|::|COLON-P| |COMMON-LISP|::|T|) |SYSTEM|::|AT-SIGN-P|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|PPRINT-TABULAR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|OUT| |COMMON-LISP|::|LIST| |COMMON-LISP|::|&OPTIONAL|
    (|SYSTEM|::|COLON-P| |COMMON-LISP|::|T|) |SYSTEM|::|AT-SIGN-P|
    (|SYSTEM|::|TABSIZE| |COMMON-LISP|::|NIL|))))
