#0Y_ #0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "COMMON-LISP"))
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "EXT"))
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "SYSTEM"))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |CUSTOM|::|*TRACE-INDENT*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |EXT|::|*TRACE-FUNCTION*| |EXT|::|*TRACE-ARGS*|
   |EXT|::|*TRACE-FORM*| |EXT|::|*TRACE-VALUES*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |SYSTEM|::|*TRACED-FUNCTIONS*|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |SYSTEM|::|*TRACE-LEVEL*|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|%LOCAL-GET|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|SPEC|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|%LOCAL-SET|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|NEW-DEF| |SYSTEM|::|SPEC|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXT|::|LOCAL|)
(|SYSTEM|::|%PUTD| '|EXT|::|LOCAL|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXT|::|LOCAL|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Return the closure defined locally with LABELS or FLET.\n
SPEC is a list of (CLOSURE SUB-CLOSURE SUB-SUB-CLOSURE ...)\n
CLOSURE must be compiled."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|<MACRO-FORM>|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|SPEC| (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |EXT|::|LOCAL|
       (|SYSTEM|::|%LOCAL-GET| |SYSTEM|::|SPEC|))))))
  '(|COMMON-LISP|::|&REST| |SYSTEM|::|SPEC|)))
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|COMMON-LISP|::|REMPROP| '|EXT|::|LOCAL| '|SYSTEM|::|DEFSTRUCT-WRITER|)
 (|COMMON-LISP|::|DEFUN| #1=#:|SETF-LOCAL|
  (|SYSTEM|::|%LAMBDA-LIST| |SYSTEM|::|ENV|)
  (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|ENV|))
  (|COMMON-LISP|::|IF|
   (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|%LAMBDA-LIST|))
   (|SYSTEM|::|ERROR-OF-TYPE| '|COMMON-LISP|::|PROGRAM-ERROR|
    (|SYSTEM|::|TEXT|
     "The SETF expander for ~S may not be called with ~S arguments.")
    '|EXT|::|LOCAL|
    (|COMMON-LISP|::|1-| (|COMMON-LISP|::|LENGTH| |SYSTEM|::|%LAMBDA-LIST|)))
   (|COMMON-LISP|::|LET*|
    ((|SYSTEM|::|SPEC| (|COMMON-LISP|::|CDR| |SYSTEM|::|%LAMBDA-LIST|)))
    (|COMMON-LISP|::|BLOCK| |EXT|::|LOCAL|
     (|COMMON-LISP|::|LET|
      ((|SYSTEM|::|STORE| (|COMMON-LISP|::|GENSYM| "LOCAL-")))
      (|COMMON-LISP|::|VALUES| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
       `(,|SYSTEM|::|STORE|)
       `(|SYSTEM|::|%LOCAL-SET| ,|SYSTEM|::|STORE| ',|SYSTEM|::|SPEC|)
       `(|SYSTEM|::|%LOCAL-GET| ,|SYSTEM|::|SPEC|)))))))
 (|SYSTEM|::|CHECK-REDEFINITION| '|EXT|::|LOCAL|
  '|COMMON-LISP|::|DEFINE-SETF-EXPANDER|
  (|COMMON-LISP|::|AND|
   (|COMMON-LISP|::|GET| '|EXT|::|LOCAL| '|SYSTEM|::|SETF-EXPANDER|)
   (|SYSTEM|::|TEXT| "SETF expander")))
 (|SYSTEM|::|%PUT| '|EXT|::|LOCAL| '|SYSTEM|::|SETF-EXPANDER|
  (|COMMON-LISP|::|CONS| -5. #'#1#))
 (|SYSTEM|::|%SET-DOCUMENTATION| '|EXT|::|LOCAL| '|COMMON-LISP|::|SETF|
  '"Modify the local definition (LABELS or FLET).\n
This will not work with closures that use lexical variables!")
 '|EXT|::|LOCAL|)
(|SYSTEM|::|C-DEFUN| '#:|SETF-LOCAL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|%LAMBDA-LIST| |SYSTEM|::|ENV|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|LOCAL-FUNCTION-NAME-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|OBJ|)))
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|COMMON-LISP|::|LET|
  ((#:|G2901|
    (|COMMON-LISP|::|CONS| '|SYSTEM|::|TRACER|
     (|CLOS|::|CLASS-NAMES|
      (|COMMON-LISP|::|GET| '|COMMON-LISP|::|STRUCTURE-OBJECT|
       '|CLOS|::|CLOSCLASS|)))))
  (|SYSTEM|::|STRUCTURE-UNDEFINE-ACCESSORIES| '|SYSTEM|::|TRACER|)
  (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER| '|SYSTEM|::|DEFSTRUCT-DESCRIPTION|
   (|COMMON-LISP|::|VECTOR| '|COMMON-LISP|::|VECTOR| 15.
    '|SYSTEM|::|MAKE-TRACER|
    (|COMMON-LISP|::|LIST|
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|SYSTEM|::|NAME|
      :|INITARGS| '#1=(:|NAME|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
      ':|INSTANCE| #2='|CLOS|::|INHERITABLE-INITER|
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #3=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4='|CLOS|::|INHERITABLE-DOC| '(|COMMON-LISP|::|NIL|)
      #5='|CLOS|::|LOCATION| '0. #6='|CLOS|::|READONLY| '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|SYSTEM|::|SYMB|
      :|INITARGS| '#7=(:|SYMB|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
      ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #8=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '1. #6# '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
      '|SYSTEM|::|CUR-DEF| :|INITARGS| '#9=(:|CUR-DEF|) :|TYPE|
      '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #10=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '2. #6# '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
      '|SYSTEM|::|LOCAL-P| :|INITARGS| '#11=(:|LOCAL-P|) :|TYPE|
      '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #12=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '3. #6# '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
      '|SYSTEM|::|SUPPRESS-IF| :|INITARGS| '#13=(:|SUPPRESS-IF|) :|TYPE|
      '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #14=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '4. #6# '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
      '|SYSTEM|::|MAX-DEPTH| :|INITARGS| '#15=(:|MAX-DEPTH|) :|TYPE|
      '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #16=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '5. #6# '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
      '|SYSTEM|::|STEP-IF| :|INITARGS| '#17=(:|STEP-IF|) :|TYPE|
      '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #18=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '6. #6# '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|SYSTEM|::|PRE|
      :|INITARGS| '#19=(:|PRE|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
      ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #20=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '7. #6# '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|SYSTEM|::|POST|
      :|INITARGS| '#21=(:|POST|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
      ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #22=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '8. #6# '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
      '|SYSTEM|::|PRE-BREAK-IF| :|INITARGS| '#23=(:|PRE-BREAK-IF|) :|TYPE|
      '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #24=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '9. #6# '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
      '|SYSTEM|::|POST-BREAK-IF| :|INITARGS| '#25=(:|POST-BREAK-IF|) :|TYPE|
      '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #26=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '10. #6# '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
      '|SYSTEM|::|BINDINGS| :|INITARGS| '#27=(:|BINDINGS|) :|TYPE|
      '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #28=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '11. #6# '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
      '|SYSTEM|::|PRE-PRINT| :|INITARGS| '#29=(:|PRE-PRINT|) :|TYPE|
      '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #30=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '12. #6# '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
      '|SYSTEM|::|POST-PRINT| :|INITARGS| '#31=(:|POST-PRINT|) :|TYPE|
      '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #32=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '13. #6# '|COMMON-LISP|::|NIL|)
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
      '|COMMON-LISP|::|PRINT| :|INITARGS| '#33=(:|PRINT|) :|TYPE|
      '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #2#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #34=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
      #4# '(|COMMON-LISP|::|NIL|) #5# '14. #6# '|COMMON-LISP|::|NIL|))
    (|COMMON-LISP|::|LIST|
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|SYSTEM|::|NAME|
      :|INITARGS| '#1# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
      #35='|CLOS|::|INHERITABLE-INITER|
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #3#)
      #36='|CLOS|::|INHERITABLE-DOC| '(|COMMON-LISP|::|NIL|) :|READERS|
      '(|SYSTEM|::|TRACER-NAME|) :|WRITERS|
      '((|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-NAME|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|SYSTEM|::|SYMB|
      :|INITARGS| '#7# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
      #35#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #8#)
      #36# '(|COMMON-LISP|::|NIL|) :|READERS| '(|SYSTEM|::|TRACER-SYMB|)
      :|WRITERS| '((|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-SYMB|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|SYSTEM|::|CUR-DEF|
      :|INITARGS| '#9# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
      #35#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #10#)
      #36# '(|COMMON-LISP|::|NIL|) :|READERS| '(|SYSTEM|::|TRACER-CUR-DEF|)
      :|WRITERS| '((|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-CUR-DEF|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|SYSTEM|::|LOCAL-P|
      :|INITARGS| '#11# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
      #35#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #12#)
      #36# '(|COMMON-LISP|::|NIL|) :|READERS| '(|SYSTEM|::|TRACER-LOCAL-P|)
      :|WRITERS| '((|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-LOCAL-P|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
      '|SYSTEM|::|SUPPRESS-IF| :|INITARGS| '#13# :|TYPE| '|COMMON-LISP|::|T|
      :|ALLOCATION| ':|INSTANCE| #35#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #14#)
      #36# '(|COMMON-LISP|::|NIL|) :|READERS| '(|SYSTEM|::|TRACER-SUPPRESS-IF|)
      :|WRITERS| '((|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-SUPPRESS-IF|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
      '|SYSTEM|::|MAX-DEPTH| :|INITARGS| '#15# :|TYPE| '|COMMON-LISP|::|T|
      :|ALLOCATION| ':|INSTANCE| #35#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #16#)
      #36# '(|COMMON-LISP|::|NIL|) :|READERS| '(|SYSTEM|::|TRACER-MAX-DEPTH|)
      :|WRITERS| '((|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-MAX-DEPTH|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|SYSTEM|::|STEP-IF|
      :|INITARGS| '#17# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
      #35#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #18#)
      #36# '(|COMMON-LISP|::|NIL|) :|READERS| '(|SYSTEM|::|TRACER-STEP-IF|)
      :|WRITERS| '((|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-STEP-IF|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|SYSTEM|::|PRE|
      :|INITARGS| '#19# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
      #35#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #20#)
      #36# '(|COMMON-LISP|::|NIL|) :|READERS| '(|SYSTEM|::|TRACER-PRE|)
      :|WRITERS| '((|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|SYSTEM|::|POST|
      :|INITARGS| '#21# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
      #35#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #22#)
      #36# '(|COMMON-LISP|::|NIL|) :|READERS| '(|SYSTEM|::|TRACER-POST|)
      :|WRITERS| '((|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
      '|SYSTEM|::|PRE-BREAK-IF| :|INITARGS| '#23# :|TYPE| '|COMMON-LISP|::|T|
      :|ALLOCATION| ':|INSTANCE| #35#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #24#)
      #36# '(|COMMON-LISP|::|NIL|) :|READERS|
      '(|SYSTEM|::|TRACER-PRE-BREAK-IF|) :|WRITERS|
      '((|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE-BREAK-IF|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
      '|SYSTEM|::|POST-BREAK-IF| :|INITARGS| '#25# :|TYPE| '|COMMON-LISP|::|T|
      :|ALLOCATION| ':|INSTANCE| #35#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #26#)
      #36# '(|COMMON-LISP|::|NIL|) :|READERS|
      '(|SYSTEM|::|TRACER-POST-BREAK-IF|) :|WRITERS|
      '((|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST-BREAK-IF|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
      '|SYSTEM|::|BINDINGS| :|INITARGS| '#27# :|TYPE| '|COMMON-LISP|::|T|
      :|ALLOCATION| ':|INSTANCE| #35#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #28#)
      #36# '(|COMMON-LISP|::|NIL|) :|READERS| '(|SYSTEM|::|TRACER-BINDINGS|)
      :|WRITERS| '((|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-BINDINGS|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
      '|SYSTEM|::|PRE-PRINT| :|INITARGS| '#29# :|TYPE| '|COMMON-LISP|::|T|
      :|ALLOCATION| ':|INSTANCE| #35#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #30#)
      #36# '(|COMMON-LISP|::|NIL|) :|READERS| '(|SYSTEM|::|TRACER-PRE-PRINT|)
      :|WRITERS| '((|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE-PRINT|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
      '|SYSTEM|::|POST-PRINT| :|INITARGS| '#31# :|TYPE| '|COMMON-LISP|::|T|
      :|ALLOCATION| ':|INSTANCE| #35#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #32#)
      #36# '(|COMMON-LISP|::|NIL|) :|READERS| '(|SYSTEM|::|TRACER-POST-PRINT|)
      :|WRITERS| '((|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST-PRINT|)))
     (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
      |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
      '|COMMON-LISP|::|PRINT| :|INITARGS| '#33# :|TYPE| '|COMMON-LISP|::|T|
      :|ALLOCATION| ':|INSTANCE| #35#
      (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
       #34#)
      #36# '(|COMMON-LISP|::|NIL|) :|READERS| '(|SYSTEM|::|TRACER-PRINT|)
      :|WRITERS| '((|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRINT|))))
    '|COMMON-LISP|::|NIL| '|SYSTEM|::|COPY-TRACER| '|COMMON-LISP|::|NIL|))
  (|CLOS|::|UNDEFINE-STRUCTURE-CLASS| '|SYSTEM|::|TRACER|)
  (|COMMON-LISP|::|DEFUN| |SYSTEM|::|MAKE-TRACER|
   (|COMMON-LISP|::|&KEY| (#37=#:|NAME| |COMMON-LISP|::|NIL|)
    (#38=#:|SYMB| |COMMON-LISP|::|NIL|) (#39=#:|CUR-DEF| |COMMON-LISP|::|NIL|)
    (#40=#:|LOCAL-P| |COMMON-LISP|::|NIL|)
    (#41=#:|SUPPRESS-IF| |COMMON-LISP|::|NIL|)
    (#42=#:|MAX-DEPTH| |COMMON-LISP|::|NIL|)
    (#43=#:|STEP-IF| |COMMON-LISP|::|NIL|) (#44=#:|PRE| |COMMON-LISP|::|NIL|)
    (#45=#:|POST| |COMMON-LISP|::|NIL|)
    (#46=#:|PRE-BREAK-IF| |COMMON-LISP|::|NIL|)
    (#47=#:|POST-BREAK-IF| |COMMON-LISP|::|NIL|)
    (#48=#:|BINDINGS| |COMMON-LISP|::|NIL|)
    (#49=#:|PRE-PRINT| |COMMON-LISP|::|NIL|)
    (#50=#:|POST-PRINT| |COMMON-LISP|::|NIL|)
    (#51=#:|PRINT| |COMMON-LISP|::|NIL|))
   (|COMMON-LISP|::|VECTOR| (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #37#)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #38#)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #39#)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #40#)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #41#)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #42#)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #43#)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #44#)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #45#)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #46#)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #47#)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #48#)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #49#)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #50#)
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #51#))))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|COPY-TRACER| (|COMMON-LISP|::|STRUCTURE|)
  (|SYSTEM|::|%COPY-SIMPLE-VECTOR| |COMMON-LISP|::|STRUCTURE|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-NAME| (|SYSTEM|::|TRACER|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM| '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-NAME|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|TRACER-NAME| #52=(|SYSTEM|::|OBJECT|)
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 0.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-NAME| #53='|SYSTEM|::|DEFSTRUCT-READER|
  '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-SYMB| (|SYSTEM|::|TRACER|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM| '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-SYMB|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|TRACER-SYMB| #52#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 1.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-SYMB| #53# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-CUR-DEF| (|SYSTEM|::|TRACER|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-CUR-DEF|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|TRACER-CUR-DEF| #52#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 2.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-CUR-DEF| #53# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-LOCAL-P| (|SYSTEM|::|TRACER|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-LOCAL-P|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|TRACER-LOCAL-P| #52#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 3.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-LOCAL-P| #53# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-SUPPRESS-IF|
    (|SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-SUPPRESS-IF|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|TRACER-SUPPRESS-IF| #52#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 4.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-SUPPRESS-IF| #53# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-MAX-DEPTH| (|SYSTEM|::|TRACER|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-MAX-DEPTH|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|TRACER-MAX-DEPTH| #52#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 5.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-MAX-DEPTH| #53# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-STEP-IF| (|SYSTEM|::|TRACER|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-STEP-IF|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|TRACER-STEP-IF| #52#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 6.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-STEP-IF| #53# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-PRE| (|SYSTEM|::|TRACER|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM| '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-PRE|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|TRACER-PRE| #52#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 7.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-PRE| #53# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-POST| (|SYSTEM|::|TRACER|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM| '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-POST|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|TRACER-POST| #52#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 8.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-POST| #53# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-PRE-BREAK-IF|
    (|SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-PRE-BREAK-IF|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|TRACER-PRE-BREAK-IF| #52#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 9.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-PRE-BREAK-IF| #53# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-POST-BREAK-IF|
    (|SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-POST-BREAK-IF|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|TRACER-POST-BREAK-IF| #52#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 10.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-POST-BREAK-IF| #53# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-BINDINGS| (|SYSTEM|::|TRACER|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-BINDINGS|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|TRACER-BINDINGS| #52#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 11.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-BINDINGS| #53# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-PRE-PRINT| (|SYSTEM|::|TRACER|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-PRE-PRINT|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|TRACER-PRE-PRINT| #52#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 12.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-PRE-PRINT| #53# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-POST-PRINT|
    (|SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-POST-PRINT|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|TRACER-POST-PRINT| #52#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 13.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-POST-PRINT| #53# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-PRINT| (|SYSTEM|::|TRACER|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-PRINT|))
 (|COMMON-LISP|::|DEFUN| |SYSTEM|::|TRACER-PRINT| #52#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 14.)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-PRINT| #53# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-NAME|)
    (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-NAME|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-NAME|)
  #54=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 0.) .
   #55=(|SYSTEM|::|VALUE|)))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-NAME| #56='|SYSTEM|::|DEFSTRUCT-WRITER|
  '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-SYMB|)
    (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-SYMB|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-SYMB|) #54#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 1.) .
   #55#))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-SYMB| #56# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-CUR-DEF|)
    (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-CUR-DEF|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-CUR-DEF|)
  #54#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 2.) .
   #55#))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-CUR-DEF| #56# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-LOCAL-P|)
    (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-LOCAL-P|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-LOCAL-P|)
  #54#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 3.) .
   #55#))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-LOCAL-P| #56# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-SUPPRESS-IF|)
    (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-SUPPRESS-IF|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-SUPPRESS-IF|)
  #54#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 4.) .
   #55#))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-SUPPRESS-IF| #56# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-MAX-DEPTH|)
    (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-MAX-DEPTH|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-MAX-DEPTH|)
  #54#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 5.) .
   #55#))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-MAX-DEPTH| #56# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-STEP-IF|)
    (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-STEP-IF|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-STEP-IF|)
  #54#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 6.) .
   #55#))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-STEP-IF| #56# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE|)
    (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE|) #54#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 7.) .
   #55#))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-PRE| #56# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST|)
    (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST|) #54#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 8.) .
   #55#))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-POST| #56# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE-BREAK-IF|)
    (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE-BREAK-IF|)))
 (|COMMON-LISP|::|DEFUN|
  (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE-BREAK-IF|) #54#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 9.) .
   #55#))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-PRE-BREAK-IF| #56# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST-BREAK-IF|)
    (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST-BREAK-IF|)))
 (|COMMON-LISP|::|DEFUN|
  (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST-BREAK-IF|) #54#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 10.) .
   #55#))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-POST-BREAK-IF| #56# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-BINDINGS|)
    (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-BINDINGS|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-BINDINGS|)
  #54#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 11.) .
   #55#))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-BINDINGS| #56# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE-PRINT|)
    (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE-PRINT|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE-PRINT|)
  #54#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 12.) .
   #55#))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-PRE-PRINT| #56# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST-PRINT|)
    (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST-PRINT|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST-PRINT|)
  #54#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 13.) .
   #55#))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-POST-PRINT| #56# '|SYSTEM|::|TRACER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRINT|)
    (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRINT|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRINT|) #54#
  (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 14.) .
   #55#))
 (|SYSTEM|::|%PUT| '|SYSTEM|::|TRACER-PRINT| #56# '|SYSTEM|::|TRACER|)
 (|SYSTEM|::|%SET-DOCUMENTATION| '|SYSTEM|::|TRACER| '|COMMON-LISP|::|TYPE|
  |COMMON-LISP|::|NIL|)
 '|SYSTEM|::|TRACER|)
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|MAKE-TRACER|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&KEY| (#:|NAME| |COMMON-LISP|::|NIL|)
    (#:|SYMB| |COMMON-LISP|::|NIL|) (#:|CUR-DEF| |COMMON-LISP|::|NIL|)
    (#:|LOCAL-P| |COMMON-LISP|::|NIL|) (#:|SUPPRESS-IF| |COMMON-LISP|::|NIL|)
    (#:|MAX-DEPTH| |COMMON-LISP|::|NIL|) (#:|STEP-IF| |COMMON-LISP|::|NIL|)
    (#:|PRE| |COMMON-LISP|::|NIL|) (#:|POST| |COMMON-LISP|::|NIL|)
    (#:|PRE-BREAK-IF| |COMMON-LISP|::|NIL|)
    (#:|POST-BREAK-IF| |COMMON-LISP|::|NIL|)
    (#:|BINDINGS| |COMMON-LISP|::|NIL|) (#:|PRE-PRINT| |COMMON-LISP|::|NIL|)
    (#:|POST-PRINT| |COMMON-LISP|::|NIL|) (#:|PRINT| |COMMON-LISP|::|NIL|))))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|COPY-TRACER|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|STRUCTURE|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-NAME| (|SYSTEM|::|TRACER|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-NAME|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACER-NAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|TRACER-NAME|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-NAME|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 0.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-SYMB| (|SYSTEM|::|TRACER|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-SYMB|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACER-SYMB|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|TRACER-SYMB|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-SYMB|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 1.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-CUR-DEF| (|SYSTEM|::|TRACER|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-CUR-DEF|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACER-CUR-DEF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|TRACER-CUR-DEF|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-CUR-DEF|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 2.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-LOCAL-P| (|SYSTEM|::|TRACER|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-LOCAL-P|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACER-LOCAL-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|TRACER-LOCAL-P|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-LOCAL-P|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 3.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-SUPPRESS-IF|
   (|SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-SUPPRESS-IF|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACER-SUPPRESS-IF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|TRACER-SUPPRESS-IF|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-SUPPRESS-IF|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 4.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-MAX-DEPTH| (|SYSTEM|::|TRACER|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-MAX-DEPTH|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACER-MAX-DEPTH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|TRACER-MAX-DEPTH|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-MAX-DEPTH|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 5.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-STEP-IF| (|SYSTEM|::|TRACER|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-STEP-IF|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACER-STEP-IF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|TRACER-STEP-IF|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-STEP-IF|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 6.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-PRE| (|SYSTEM|::|TRACER|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-PRE|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACER-PRE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|TRACER-PRE|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-PRE|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 7.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-POST| (|SYSTEM|::|TRACER|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-POST|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACER-POST|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|TRACER-POST|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-POST|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 8.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-PRE-BREAK-IF|
   (|SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-PRE-BREAK-IF|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACER-PRE-BREAK-IF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|TRACER-PRE-BREAK-IF|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-PRE-BREAK-IF|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 9.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-POST-BREAK-IF|
   (|SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-POST-BREAK-IF|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACER-POST-BREAK-IF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|TRACER-POST-BREAK-IF|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-POST-BREAK-IF|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 10.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-BINDINGS| (|SYSTEM|::|TRACER|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-BINDINGS|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACER-BINDINGS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|TRACER-BINDINGS|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-BINDINGS|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 11.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-PRE-PRINT| (|SYSTEM|::|TRACER|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-PRE-PRINT|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACER-PRE-PRINT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|TRACER-PRE-PRINT|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-PRE-PRINT|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 12.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-POST-PRINT| (|SYSTEM|::|TRACER|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-POST-PRINT|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACER-POST-PRINT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|TRACER-POST-PRINT|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-POST-PRINT|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 13.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |SYSTEM|::|TRACER-PRINT| (|SYSTEM|::|TRACER|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |SYSTEM|::|TRACER-PRINT|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACER-PRINT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |SYSTEM|::|TRACER-PRINT|))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-PRINT|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 14.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-NAME|)
   (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-NAME|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-NAME|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-NAME|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 0.)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-SYMB|)
   (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-SYMB|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-SYMB|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-SYMB|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 1.)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-CUR-DEF|)
   (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-CUR-DEF|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-CUR-DEF|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-CUR-DEF|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 2.)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-LOCAL-P|)
   (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-LOCAL-P|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-LOCAL-P|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-LOCAL-P|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 3.)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-SUPPRESS-IF|)
   (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-SUPPRESS-IF|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-SUPPRESS-IF|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-SUPPRESS-IF|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 4.)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-MAX-DEPTH|)
   (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-MAX-DEPTH|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-MAX-DEPTH|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-MAX-DEPTH|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 5.)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-STEP-IF|)
   (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-STEP-IF|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-STEP-IF|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-STEP-IF|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 6.)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE|)
   (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-PRE|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 7.)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST|)
   (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-POST|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 8.)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE-BREAK-IF|)
   (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE-BREAK-IF|)))
(|SYSTEM|::|C-DEFUN|
 '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE-BREAK-IF|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-PRE-BREAK-IF|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 9.)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST-BREAK-IF|)
   (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST-BREAK-IF|)))
(|SYSTEM|::|C-DEFUN|
 '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST-BREAK-IF|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-POST-BREAK-IF|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 10.)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-BINDINGS|)
   (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-BINDINGS|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-BINDINGS|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-BINDINGS|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 11.)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE-PRINT|)
   (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE-PRINT|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRE-PRINT|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-PRE-PRINT|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 12.)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST-PRINT|)
   (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST-PRINT|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-POST-PRINT|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-POST-PRINT|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 13.)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRINT|)
   (|COMMON-LISP|::|T| |SYSTEM|::|TRACER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRINT|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |SYSTEM|::|TRACER-PRINT|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |SYSTEM|::|TRACER-PRINT|
    (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|SVREF| |SYSTEM|::|OBJECT| 14.)
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACER-SET-FDEF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|TRR| |SYSTEM|::|NEW-FDEF|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|TRACE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|TRACE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|TRACE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Trace function execution.\n
(TRACE) returns the list of all traced functions.\n
(TRACE fun ...) additionally traces the functions fun, ... .\n
Format for fun:\n
 Either a function name\n
 or a list made of a function-cell and a few keyword arguments (pairwise!)\n
  (function-name\n
   [:suppress-if form]   ; no Trace-Output, as long as form is true\n
   [:max-depth form]     ; no trace output, as long as (> *trace-level* form)\n
   [:step-if form]       ; Trace moves into the Stepper, if form is true\n
   [:bindings ((variable form)...)] ; binds variables around the following forms\n
   [:pre form]           ; executes form before function call\n
   [:post form]          ; executes form after  function call\n
   [:pre-break-if form]  ; Trace moves into break-loop before function call,\n
                         ; if form is true\n
   [:post-break-if form] ; Trace moves into break-loop after  function call,\n
                         ; if form is true\n
   [:pre-print form]     ; prints the values of form before function call\n
   [:post-print form]    ; prints the values of form after  function call\n
   [:print form]         ; prints the values of form before\n
                         ; and after the function call\n
  )\n
In all these forms *TRACE-FUNCTION* (the function itself),\n
  *TRACE-ARGS* (the function arguments),\n
  *TRACE-FORM* (the function-/macro-call as form),\n
  and after function call also *TRACE-VALUES* (the list of values\n
  of the function call) can be accessed,\n
  and the function can be left with RETURN with given values.\n
TRACE and UNTRACE are also applicable to functions (SETF symbol) and macros,\n
 however not applicable to locally defined functions and macros."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|<MACRO-FORM>|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|FUNS| (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|TRACE|
       (|COMMON-LISP|::|IF| (|COMMON-LISP|::|NULL| |SYSTEM|::|FUNS|)
        '|SYSTEM|::|*TRACED-FUNCTIONS*|
        `(|COMMON-LISP|::|APPEND|
          ,@(|COMMON-LISP|::|MAPCAR|
             #'(|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|FUN|)
                `(|SYSTEM|::|TRACE1|
                  ,(|COMMON-LISP|::|IF|
                    (|COMMON-LISP|::|OR|
                     (|SYSTEM|::|FUNCTION-NAME-P| |SYSTEM|::|FUN|)
                     (|SYSTEM|::|LOCAL-FUNCTION-NAME-P| |SYSTEM|::|FUN|))
                    `(|SYSTEM|::|MAKE-TRACER| :|NAME| ',|SYSTEM|::|FUN|)
                    `(|COMMON-LISP|::|APPLY| #'|SYSTEM|::|MAKE-TRACER| :|NAME|
                      ',|SYSTEM|::|FUN|))))
             |SYSTEM|::|FUNS|))))))))
  '(|COMMON-LISP|::|&REST| |SYSTEM|::|FUNS|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|CHECK-TRACEABLE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|FUNNAME| |SYSTEM|::|TRR| |SYSTEM|::|CALLER|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACE1|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|TRR|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|GET-TRACED-DEFINITION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|SYMBOL|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACE-STEP-APPLY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|MAKE-APPLY-FORM|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|FUNNAME| |SYSTEM|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACE-OUTPUT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACE-PRE-OUTPUT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACE-POST-OUTPUT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|TRACE-PRINT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|VALS| |COMMON-LISP|::|&OPTIONAL|
    (|SYSTEM|::|NL-FLAG| |COMMON-LISP|::|T|))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|UNTRACE|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|UNTRACE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|UNTRACE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "(UNTRACE) returns the list of traced functions, stops tracing all of them.\n
(UNTRACE symbol ...) removes symbol, ... from the list of traced functions."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|<MACRO-FORM>|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|FUNS| (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|UNTRACE|
       `(|COMMON-LISP|::|MAPCAN| #'|SYSTEM|::|UNTRACE1|
         ,(|COMMON-LISP|::|IF| (|COMMON-LISP|::|NULL| |SYSTEM|::|FUNS|)
           `(|COMMON-LISP|::|COPY-LIST| |SYSTEM|::|*TRACED-FUNCTIONS*|)
           `',|SYSTEM|::|FUNS|)))))))
  '(|COMMON-LISP|::|&REST| |SYSTEM|::|FUNS|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|UNTRACE1|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|FUNNAME|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|UNTRACE2|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|FUNNAME|)))
