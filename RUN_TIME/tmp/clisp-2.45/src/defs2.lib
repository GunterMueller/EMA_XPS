#0Y_ #0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "COMMON-LISP"))
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "SYSTEM"))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|DECLAIM|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|DECLAIM|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|DECLAIM|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|<MACRO-FORM>|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|DECL-SPECS|
        (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|DECLAIM|
       `(|COMMON-LISP|::|PROGN|
         ,@(|COMMON-LISP|::|MAPCAR|
            #'(|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|DECL-SPEC|)
               `(|COMMON-LISP|::|PROCLAIM| ',|SYSTEM|::|DECL-SPEC|))
            |SYSTEM|::|DECL-SPECS|)))))))
  '(|COMMON-LISP|::|&REST| |SYSTEM|::|DECL-SPECS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|DESTRUCTURING-BIND|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|DESTRUCTURING-BIND|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|DESTRUCTURING-BIND|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|WHOLE-FORM| |SYSTEM|::|<MACRO-FORM>|)
       (|SYSTEM|::|LAMBDALIST|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|FORM| (|COMMON-LISP|::|CADDR| . #1#))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|DESTRUCTURING-BIND|
       (|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
        (|SYSTEM|::|BODY-REST| |SYSTEM|::|DECLARATIONS|)
        (|SYSTEM|::|PARSE-BODY| |SYSTEM|::|BODY|)
        (|COMMON-LISP|::|IF| |SYSTEM|::|DECLARATIONS|
         (|COMMON-LISP|::|SETQ| |SYSTEM|::|DECLARATIONS|
          `((|COMMON-LISP|::|DECLARE| ,@|SYSTEM|::|DECLARATIONS|))))
        (|COMMON-LISP|::|LET|
         ((|SYSTEM|::|%WHOLE-FORM| |SYSTEM|::|WHOLE-FORM|)
          (|SYSTEM|::|%PROPER-LIST-P| |COMMON-LISP|::|NIL|)
          (|SYSTEM|::|%ARG-COUNT| 0.) (|SYSTEM|::|%MIN-ARGS| 0.)
          (|SYSTEM|::|%RESTP| |COMMON-LISP|::|NIL|)
          (|SYSTEM|::|%NULL-TESTS| |COMMON-LISP|::|NIL|)
          (|SYSTEM|::|%LET-LIST| |COMMON-LISP|::|NIL|)
          (|SYSTEM|::|%KEYWORD-TESTS| |COMMON-LISP|::|NIL|)
          (|SYSTEM|::|%DEFAULT-FORM| |COMMON-LISP|::|NIL|))
         (|SYSTEM|::|ANALYZE1| |SYSTEM|::|LAMBDALIST|
          '|SYSTEM|::|<DESTRUCTURING-FORM>|
          '|COMMON-LISP|::|DESTRUCTURING-BIND|
          '|SYSTEM|::|<DESTRUCTURING-FORM>|)
         (|COMMON-LISP|::|LET|
          ((|SYSTEM|::|LENGTHTEST|
            (|SYSTEM|::|MAKE-LENGTH-TEST| '|SYSTEM|::|<DESTRUCTURING-FORM>|
             0.))
           (|SYSTEM|::|MAINFORM|
            `(|COMMON-LISP|::|LET*|
              ,(|COMMON-LISP|::|NREVERSE| |SYSTEM|::|%LET-LIST|)
              ,@|SYSTEM|::|DECLARATIONS|
              ,@(|COMMON-LISP|::|NREVERSE| |SYSTEM|::|%NULL-TESTS|)
              ,@(|COMMON-LISP|::|NREVERSE| |SYSTEM|::|%KEYWORD-TESTS|)
              ,@|SYSTEM|::|BODY-REST|)))
          (|COMMON-LISP|::|IF| |SYSTEM|::|LENGTHTEST|
           (|COMMON-LISP|::|SETQ| |SYSTEM|::|MAINFORM|
            `(|COMMON-LISP|::|IF| ,|SYSTEM|::|LENGTHTEST|
              (|SYSTEM|::|DESTRUCTURING-ERROR| |SYSTEM|::|<DESTRUCTURING-FORM>|
               '(,|SYSTEM|::|%MIN-ARGS| .
                 ,(|COMMON-LISP|::|IF| |SYSTEM|::|%RESTP| |COMMON-LISP|::|NIL|
                   |SYSTEM|::|%ARG-COUNT|)))
              ,|SYSTEM|::|MAINFORM|)))
          `(|COMMON-LISP|::|LET|
            ((|SYSTEM|::|<DESTRUCTURING-FORM>| ,|SYSTEM|::|FORM|))
            ,|SYSTEM|::|MAINFORM|)))))))))
  '(|COMMON-LISP|::|&WHOLE| |SYSTEM|::|WHOLE-FORM| |SYSTEM|::|LAMBDALIST|
    |SYSTEM|::|FORM| |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|DESTRUCTURING-ERROR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|DESTRUCTURING-FORM| |SYSTEM|::|MIN.MAX|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|SYSTEM|::|SIMPLE-DESTRUCTURING-BIND|)
(|SYSTEM|::|%PUTD| '|SYSTEM|::|SIMPLE-DESTRUCTURING-BIND|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |SYSTEM|::|SIMPLE-DESTRUCTURING-BIND|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|LAMBDALIST|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|FORM| (|COMMON-LISP|::|CADDR| . #1#))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |SYSTEM|::|SIMPLE-DESTRUCTURING-BIND|
       `(|COMMON-LISP|::|APPLY|
         #'(|COMMON-LISP|::|LAMBDA| ,|SYSTEM|::|LAMBDALIST| ,@|SYSTEM|::|BODY|)
         ,|SYSTEM|::|FORM|))))))
  '(|SYSTEM|::|LAMBDALIST| |SYSTEM|::|FORM| |COMMON-LISP|::|&BODY|
    |SYSTEM|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|COMPLEMENT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|FUN|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|CONSTANTLY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|OBJECT|)))
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|SYSTEM|::|*COMMON-LISP-USER-PACKAGE*|
 '(|COMMON-LISP|::|FIND-PACKAGE| "COMMON-LISP-USER"))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|WITH-STANDARD-IO-SYNTAX|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|WITH-STANDARD-IO-SYNTAX|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|WITH-STANDARD-IO-SYNTAX|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|<MACRO-FORM>|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|BODY| (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|WITH-STANDARD-IO-SYNTAX|
       (|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
        (|SYSTEM|::|BODY-REST| |SYSTEM|::|DECLARATIONS|)
        (|SYSTEM|::|PARSE-BODY| |SYSTEM|::|BODY|)
        `(|COMMON-LISP|::|LET|
          ((|COMMON-LISP|::|*PACKAGE*| |SYSTEM|::|*COMMON-LISP-USER-PACKAGE*|)
           (|COMMON-LISP|::|*PRINT-ARRAY*| |COMMON-LISP|::|T|)
           (|COMMON-LISP|::|*PRINT-BASE*| 10.)
           (|COMMON-LISP|::|*PRINT-CASE*| ':|UPCASE|)
           (|COMMON-LISP|::|*PRINT-CIRCLE*| |COMMON-LISP|::|NIL|)
           (|COMMON-LISP|::|*PRINT-ESCAPE*| |COMMON-LISP|::|T|)
           (|COMMON-LISP|::|*PRINT-GENSYM*| |COMMON-LISP|::|T|)
           (|COMMON-LISP|::|*PRINT-LENGTH*| |COMMON-LISP|::|NIL|)
           (|COMMON-LISP|::|*PRINT-LEVEL*| |COMMON-LISP|::|NIL|)
           (|COMMON-LISP|::|*PRINT-LINES*| |COMMON-LISP|::|NIL|)
           (|COMMON-LISP|::|*PRINT-MISER-WIDTH*| |COMMON-LISP|::|NIL|)
           (|COMMON-LISP|::|*PRINT-PPRINT-DISPATCH*|
            (|COMMON-LISP|::|COPY-PPRINT-DISPATCH| |COMMON-LISP|::|NIL|))
           (|COMMON-LISP|::|*PRINT-PRETTY*| |COMMON-LISP|::|NIL|)
           (|COMMON-LISP|::|*PRINT-RADIX*| |COMMON-LISP|::|NIL|)
           (|COMMON-LISP|::|*PRINT-READABLY*| |COMMON-LISP|::|T|)
           (|COMMON-LISP|::|*PRINT-RIGHT-MARGIN*| |COMMON-LISP|::|NIL|)
           (|CUSTOM|::|*PRINT-CLOSURE*| |COMMON-LISP|::|NIL|)
           (|CUSTOM|::|*PRINT-RPARS*| |COMMON-LISP|::|NIL|)
           (|CUSTOM|::|*PRINT-INDENT-LISTS*| 1.)
           (|SYSTEM|::|*PRIN-STREAM*| |COMMON-LISP|::|NIL|)
           (|SYSTEM|::|*PRIN-LINELENGTH*| 79.)
           (|SYSTEM|::|*PRIN-LINE-PREFIX*| |COMMON-LISP|::|NIL|)
           (|SYSTEM|::|*LOAD-FORMS*| |COMMON-LISP|::|NIL|)
           (|COMMON-LISP|::|*READ-BASE*| 10.)
           (|COMMON-LISP|::|*READ-DEFAULT-FLOAT-FORMAT*|
            '|COMMON-LISP|::|SINGLE-FLOAT|)
           (|COMMON-LISP|::|*READ-EVAL*| |COMMON-LISP|::|T|)
           (|COMMON-LISP|::|*READ-SUPPRESS*| |COMMON-LISP|::|NIL|)
           (|COMMON-LISP|::|*READTABLE*|
            (|COMMON-LISP|::|COPY-READTABLE| |COMMON-LISP|::|NIL|)))
          ,@(|COMMON-LISP|::|IF| |SYSTEM|::|DECLARATIONS|
             `((|COMMON-LISP|::|DECLARE| ,@|SYSTEM|::|DECLARATIONS|)))
          ,@|SYSTEM|::|BODY-REST|)))))))
  '(|COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|WITH-HASH-TABLE-ITERATOR|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|WITH-HASH-TABLE-ITERATOR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|WITH-HASH-TABLE-ITERATOR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G21477| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G21478|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| #1# 2. 2.))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|COMMON-LISP|::|WITH-HASH-TABLE-ITERATOR| #1#
          '#4=(|SYSTEM|::|MACRONAME| |SYSTEM|::|HASHTABLE|))
         #1#))
       (|SYSTEM|::|MACRONAME| (|COMMON-LISP|::|CAR| #3#))
       (|SYSTEM|::|HASHTABLE| (|COMMON-LISP|::|CADR| #3#))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|WITH-HASH-TABLE-ITERATOR|
       (|COMMON-LISP|::|UNLESS|
        (|COMMON-LISP|::|SYMBOLP| |SYSTEM|::|MACRONAME|)
        (|COMMON-LISP|::|ERROR|
         (|SYSTEM|::|TEXT| "~S: macro name should be a symbol, not ~S")
         '|COMMON-LISP|::|WITH-HASH-TABLE-ITERATOR| |SYSTEM|::|MACRONAME|))
       (|COMMON-LISP|::|LET|
        ((|SYSTEM|::|VAR| (|COMMON-LISP|::|GENSYM| "WHTI-")))
        `(|COMMON-LISP|::|LET|
          ((,|SYSTEM|::|VAR|
            (|SYSTEM|::|HASH-TABLE-ITERATOR| ,|SYSTEM|::|HASHTABLE|)))
          (|COMMON-LISP|::|MACROLET|
           ((,|SYSTEM|::|MACRONAME| |COMMON-LISP|::|NIL|
             '(|SYSTEM|::|HASH-TABLE-ITERATE| ,|SYSTEM|::|VAR|)))
           ,@|SYSTEM|::|BODY|))))))))
  '(#4# |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|LAMBDA|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|LAMBDA|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|LAMBDA|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|WHOLE-FORM| |SYSTEM|::|<MACRO-FORM>|)
       (|SYSTEM|::|LAMBDALIST|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|DECLARE|
       (|COMMON-LISP|::|IGNORE| |SYSTEM|::|LAMBDALIST| |SYSTEM|::|BODY|))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|LAMBDA|
       `#',|SYSTEM|::|WHOLE-FORM|)))))
  '(|COMMON-LISP|::|&WHOLE| |SYSTEM|::|WHOLE-FORM| |SYSTEM|::|LAMBDALIST|
    |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|DISPATCH-READER|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|STREAM| |SYSTEM|::|CH|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|STREAM-INPUT-ELEMENT-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|STREAM|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|STREAM-OUTPUT-ELEMENT-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|STREAM|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|%READ-SEQUENCE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|SEQUENCE| |COMMON-LISP|::|STREAM| |COMMON-LISP|::|&REST|
    |COMMON-LISP|::|REST| |COMMON-LISP|::|&KEY| (|SYSTEM|::|START| 0.)
    (|SYSTEM|::|END| |COMMON-LISP|::|NIL|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|READ-SEQUENCE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|SEQUENCE| |COMMON-LISP|::|STREAM| |COMMON-LISP|::|&REST|
    |COMMON-LISP|::|REST| |COMMON-LISP|::|&KEY| (|SYSTEM|::|START| 0.)
    (|SYSTEM|::|END| |COMMON-LISP|::|NIL|))))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|%WRITE-SEQUENCE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|SEQUENCE| |COMMON-LISP|::|STREAM| |COMMON-LISP|::|&REST|
    |COMMON-LISP|::|REST| |COMMON-LISP|::|&KEY| (|SYSTEM|::|START| 0.)
    (|SYSTEM|::|END| |COMMON-LISP|::|NIL|))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|WRITE-SEQUENCE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|SEQUENCE| |COMMON-LISP|::|STREAM| |COMMON-LISP|::|&REST|
    |COMMON-LISP|::|REST| |COMMON-LISP|::|&KEY| (|SYSTEM|::|START| 0.)
    (|SYSTEM|::|END| |COMMON-LISP|::|NIL|))))
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|SYSTEM|::|%PUT| '|EXT|::|DESIGNATOR| '|SYSTEM|::|DEFTYPE-EXPANDER|
  (|COMMON-LISP|::|FUNCTION| #:|DEFTYPE-DESIGNATOR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<DEFTYPE-FORM>|)
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<DEFTYPE-FORM>| 2.
       2.))
     (|SYSTEM|::|TYPE-CALL-ERROR| |SYSTEM|::|<DEFTYPE-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|THING| (|COMMON-LISP|::|CADR| |SYSTEM|::|<DEFTYPE-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |EXT|::|DESIGNATOR|
       (|COMMON-LISP|::|COND|
        ((|COMMON-LISP|::|SYMBOLP| |SYSTEM|::|THING|)
         (|COMMON-LISP|::|CASE| |SYSTEM|::|THING|
          (|COMMON-LISP|::|CHARACTER|
           `(|COMMON-LISP|::|OR| |COMMON-LISP|::|CHARACTER|
             ,@(|COMMON-LISP|::|IF| (|COMMON-LISP|::|NOT| |CUSTOM|::|*ANSI*|)
                `((|COMMON-LISP|::|INTEGER| 0.
                   ,(|COMMON-LISP|::|1-| |COMMON-LISP|::|CHAR-CODE-LIMIT|))))
             (|EXT|::|DESIGNATOR| (|COMMON-LISP|::|STRING| 1.))))
          (|COMMON-LISP|::|BASE-CHAR|
           `(|COMMON-LISP|::|OR| |COMMON-LISP|::|BASE-CHAR|
             ,@(|COMMON-LISP|::|IF| (|COMMON-LISP|::|NOT| |CUSTOM|::|*ANSI*|)
                `((|COMMON-LISP|::|INTEGER| 0.
                   ,(|COMMON-LISP|::|1-| |EXT|::|BASE-CHAR-CODE-LIMIT|))))
             (|EXT|::|DESIGNATOR| (|COMMON-LISP|::|STRING| 1.))))
          (|COMMON-LISP|::|T| |SYSTEM|::|THING|)))
        ((|COMMON-LISP|::|CONSP| |SYSTEM|::|THING|)
         (|COMMON-LISP|::|CASE| (|COMMON-LISP|::|FIRST| |SYSTEM|::|THING|)
          (|COMMON-LISP|::|STRING|
           (|COMMON-LISP|::|LET|
            ((|SYSTEM|::|N| (|COMMON-LISP|::|SECOND| |SYSTEM|::|THING|)))
            (|COMMON-LISP|::|ASSERT|
             (|COMMON-LISP|::|TYPEP| |SYSTEM|::|N|
              '(|COMMON-LISP|::|INTEGER| 0. |COMMON-LISP|::|*|)))
            (|COMMON-LISP|::|LET|
             ((|SYSTEM|::|FUN|
               (|COMMON-LISP|::|INTERN|
                (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
                 "SYMBOL-OF-LENGTH-~D" |SYSTEM|::|N|)
                (|COMMON-LISP|::|FIND-PACKAGE| "SYSTEM"))))
             (|COMMON-LISP|::|UNLESS|
              (|COMMON-LISP|::|FBOUNDP| |SYSTEM|::|FUN|)
              (|COMMON-LISP|::|SETF|
               (|COMMON-LISP|::|SYMBOL-FUNCTION| |SYSTEM|::|FUN|)
               #'(|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|S|)
                  (|COMMON-LISP|::|AND|
                   (|COMMON-LISP|::|SYMBOLP| |SYSTEM|::|S|)
                   (|COMMON-LISP|::|EQL|
                    (|COMMON-LISP|::|LENGTH|
                     (|COMMON-LISP|::|SYMBOL-NAME| |SYSTEM|::|S|))
                    |SYSTEM|::|N|)))))
             `(|COMMON-LISP|::|OR|
               ,@(|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQL| |SYSTEM|::|N| 1.)
                  '(|COMMON-LISP|::|CHARACTER|) '|COMMON-LISP|::|NIL|)
               (|COMMON-LISP|::|STRING| ,|SYSTEM|::|N|)
               (|COMMON-LISP|::|AND| |COMMON-LISP|::|SYMBOL|
                (|COMMON-LISP|::|SATISFIES| ,|SYSTEM|::|FUN|))))))
          (|COMMON-LISP|::|T| |SYSTEM|::|THING|)))
        (|COMMON-LISP|::|T|
         (|SYSTEM|::|TYPESPEC-ERROR| '|EXT|::|DESIGNATOR|
          |SYSTEM|::|THING|)))))))))
 (|SYSTEM|::|%SET-DOCUMENTATION| '|EXT|::|DESIGNATOR| '|COMMON-LISP|::|TYPE|
  '|COMMON-LISP|::|NIL|)
 '|EXT|::|DESIGNATOR|)
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|RECOGNIZABLE-SEQUENCE-TYPE-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|TYPESPEC|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXT|::|DEFINE-HASH-TABLE-TEST|)
(|SYSTEM|::|%PUTD| '|EXT|::|DEFINE-HASH-TABLE-TEST|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXT|::|DEFINE-HASH-TABLE-TEST|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4.
       4.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|TEST| (|COMMON-LISP|::|CADDR| . #1#))
       (|SYSTEM|::|HASH| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |EXT|::|DEFINE-HASH-TABLE-TEST|
       (|COMMON-LISP|::|SETQ| |SYSTEM|::|NAME|
        (|SYSTEM|::|CHECK-SYMBOL| |SYSTEM|::|NAME|
         '|EXT|::|DEFINE-HASH-TABLE-TEST|))
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|SETF|
          (|COMMON-LISP|::|GET| ',|SYSTEM|::|NAME|
           '|COMMON-LISP|::|HASH-TABLE-TEST|)
          (|COMMON-LISP|::|CONS| #',|SYSTEM|::|TEST| #',|SYSTEM|::|HASH|))
         ',|SYSTEM|::|NAME|))))))
  '(|SYSTEM|::|NAME| |SYSTEM|::|TEST| |SYSTEM|::|HASH|)))
(|SYSTEM|::|C-DEFUN| '|EXT|::|DEFAULT-DIRECTORY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|COMMON-LISP|::|REMPROP| '|EXT|::|DEFAULT-DIRECTORY|
  '|SYSTEM|::|DEFSTRUCT-WRITER|)
 (|SYSTEM|::|CHECK-REDEFINITION| '|EXT|::|DEFAULT-DIRECTORY|
  '|COMMON-LISP|::|DEFSETF|
  (|COMMON-LISP|::|AND|
   (|COMMON-LISP|::|GET| '|EXT|::|DEFAULT-DIRECTORY|
    '|SYSTEM|::|SETF-EXPANDER|)
   (|SYSTEM|::|TEXT| "SETF expander")))
 (|SYSTEM|::|%PUT| '|EXT|::|DEFAULT-DIRECTORY| '|SYSTEM|::|SETF-EXPANDER|
  (|COMMON-LISP|::|LIST*| -1. 1.
   (|COMMON-LISP|::|FUNCTION| |SYSTEM|::|SETF-DEFAULT-DIRECTORY|
    (|COMMON-LISP|::|LAMBDA| (#1=#:|IG21765| |SYSTEM|::|VALUE|)
     (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| #1#))
     (|COMMON-LISP|::|BLOCK| |EXT|::|DEFAULT-DIRECTORY|
      `(|COMMON-LISP|::|PROGN| (|EXT|::|CD| ,|SYSTEM|::|VALUE|)
        ,|SYSTEM|::|VALUE|))))))
 (|SYSTEM|::|%SET-DOCUMENTATION| '|EXT|::|DEFAULT-DIRECTORY|
  '|COMMON-LISP|::|SETF| |COMMON-LISP|::|NIL|)
 '|EXT|::|DEFAULT-DIRECTORY|)
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|DATE-FORMAT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|DATE-STRING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|EXT|::|DIR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL| (|SYSTEM|::|PATHNAMES| '("*/" "*")))))
