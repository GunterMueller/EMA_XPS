#0Y_ #0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "EXT"))
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "SYSTEM"))
(|SYSTEM|::|C-DEFUN| '|EXT|::|EXPAND-FORM|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|FORM| |COMMON-LISP|::|&AUX| |SYSTEM|::|*FENV*|
    |SYSTEM|::|*VENV*|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|COPY-SYMBOL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|SYMBOL| |COMMON-LISP|::|&OPTIONAL| |SYSTEM|::|FLAG|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|GENTEMP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&OPTIONAL| (|SYSTEM|::|PREFIX| "T")
    (|COMMON-LISP|::|PACKAGE| |COMMON-LISP|::|*PACKAGE*|))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|DO-SYMBOLS|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|DO-SYMBOLS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|DO-SYMBOLS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G21421| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G21422|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| #1# 1. 3.))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|COMMON-LISP|::|DO-SYMBOLS| #1#
          '#4=(|SYSTEM|::|VAR| |COMMON-LISP|::|&OPTIONAL|
               (|SYSTEM|::|PACKAGEFORM| #5='|COMMON-LISP|::|*PACKAGE*|)
               (|SYSTEM|::|RESULTFORM| |COMMON-LISP|::|NIL|)))
         #1#))
       (|SYSTEM|::|VAR| (|COMMON-LISP|::|CAR| #3#))
       (|SYSTEM|::|PACKAGEFORM|
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|CDR| . #6=(#3#))
         (|COMMON-LISP|::|CADR| . #6#) #5#))
       (|SYSTEM|::|RESULTFORM|
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|CDDR| . #6#)
         (|COMMON-LISP|::|CADDR| . #6#) |COMMON-LISP|::|NIL|))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|DO-SYMBOLS|
       (|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
        (|SYSTEM|::|BODY-REST| |SYSTEM|::|DECLARATIONS|)
        (|SYSTEM|::|PARSE-BODY| |SYSTEM|::|BODY|)
        (|COMMON-LISP|::|LET|
         ((|SYSTEM|::|PACKVAR| (|COMMON-LISP|::|GENSYM| "PACKAGE-")))
         `(|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|NIL|
           (|COMMON-LISP|::|LET|
            ((,|SYSTEM|::|PACKVAR| ,|SYSTEM|::|PACKAGEFORM|))
            (|COMMON-LISP|::|LET| ((,|SYSTEM|::|VAR| |COMMON-LISP|::|NIL|))
             (|COMMON-LISP|::|DECLARE|
              (|COMMON-LISP|::|IGNORABLE| ,|SYSTEM|::|VAR|)
              ,@|SYSTEM|::|DECLARATIONS|)
             (|SYSTEM|::|MAP-SYMBOLS|
              #'(|COMMON-LISP|::|LAMBDA| (,|SYSTEM|::|VAR|)
                 ,@(|COMMON-LISP|::|IF| |SYSTEM|::|DECLARATIONS|
                    `((|COMMON-LISP|::|DECLARE| ,@|SYSTEM|::|DECLARATIONS|))
                    '|COMMON-LISP|::|NIL|)
                 (|COMMON-LISP|::|TAGBODY| ,@|SYSTEM|::|BODY-REST|))
              ,|SYSTEM|::|PACKVAR|)
             ,|SYSTEM|::|RESULTFORM|))))))))))
  '(#4# |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|DO-EXTERNAL-SYMBOLS|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|DO-EXTERNAL-SYMBOLS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|DO-EXTERNAL-SYMBOLS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G21445| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G21446|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| #1# 1. 3.))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|COMMON-LISP|::|DO-EXTERNAL-SYMBOLS| #1#
          '#4=(|SYSTEM|::|VAR| |COMMON-LISP|::|&OPTIONAL|
               (|SYSTEM|::|PACKAGEFORM| #5='|COMMON-LISP|::|*PACKAGE*|)
               (|SYSTEM|::|RESULTFORM| |COMMON-LISP|::|NIL|)))
         #1#))
       (|SYSTEM|::|VAR| (|COMMON-LISP|::|CAR| #3#))
       (|SYSTEM|::|PACKAGEFORM|
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|CDR| . #6=(#3#))
         (|COMMON-LISP|::|CADR| . #6#) #5#))
       (|SYSTEM|::|RESULTFORM|
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|CDDR| . #6#)
         (|COMMON-LISP|::|CADDR| . #6#) |COMMON-LISP|::|NIL|))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|DO-EXTERNAL-SYMBOLS|
       (|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
        (|SYSTEM|::|BODY-REST| |SYSTEM|::|DECLARATIONS|)
        (|SYSTEM|::|PARSE-BODY| |SYSTEM|::|BODY|)
        (|COMMON-LISP|::|LET|
         ((|SYSTEM|::|PACKVAR| (|COMMON-LISP|::|GENSYM| "PACKAGE-")))
         `(|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|NIL|
           (|COMMON-LISP|::|LET|
            ((,|SYSTEM|::|PACKVAR| ,|SYSTEM|::|PACKAGEFORM|))
            (|COMMON-LISP|::|LET| ((,|SYSTEM|::|VAR| |COMMON-LISP|::|NIL|))
             (|COMMON-LISP|::|DECLARE|
              (|COMMON-LISP|::|IGNORABLE| ,|SYSTEM|::|VAR|)
              ,@|SYSTEM|::|DECLARATIONS|)
             (|SYSTEM|::|MAP-EXTERNAL-SYMBOLS|
              #'(|COMMON-LISP|::|LAMBDA| (,|SYSTEM|::|VAR|)
                 ,@(|COMMON-LISP|::|IF| |SYSTEM|::|DECLARATIONS|
                    `((|COMMON-LISP|::|DECLARE| ,@|SYSTEM|::|DECLARATIONS|))
                    '|COMMON-LISP|::|NIL|)
                 (|COMMON-LISP|::|TAGBODY| ,@|SYSTEM|::|BODY-REST|))
              ,|SYSTEM|::|PACKVAR|)
             ,|SYSTEM|::|RESULTFORM|))))))))))
  '(#4# |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|DO-ALL-SYMBOLS|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|DO-ALL-SYMBOLS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|DO-ALL-SYMBOLS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G21469| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G21470|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| #1# 1. 2.))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|COMMON-LISP|::|DO-ALL-SYMBOLS| #1#
          '#4=(|SYSTEM|::|VAR| |COMMON-LISP|::|&OPTIONAL|
               (|SYSTEM|::|RESULTFORM| |COMMON-LISP|::|NIL|)))
         #1#))
       (|SYSTEM|::|VAR| (|COMMON-LISP|::|CAR| #3#))
       (|SYSTEM|::|RESULTFORM|
        (|COMMON-LISP|::|IF| (|COMMON-LISP|::|CDR| . #5=(#3#))
         (|COMMON-LISP|::|CADR| . #5#) |COMMON-LISP|::|NIL|))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|DO-ALL-SYMBOLS|
       (|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
        (|SYSTEM|::|BODY-REST| |SYSTEM|::|DECLARATIONS|)
        (|SYSTEM|::|PARSE-BODY| |SYSTEM|::|BODY|)
        `(|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|NIL|
          (|COMMON-LISP|::|LET| ((,|SYSTEM|::|VAR| |COMMON-LISP|::|NIL|))
           (|COMMON-LISP|::|DECLARE|
            (|COMMON-LISP|::|IGNORABLE| ,|SYSTEM|::|VAR|)
            ,@|SYSTEM|::|DECLARATIONS|)
           (|SYSTEM|::|MAP-ALL-SYMBOLS|
            #'(|COMMON-LISP|::|LAMBDA| (,|SYSTEM|::|VAR|)
               ,@(|COMMON-LISP|::|IF| |SYSTEM|::|DECLARATIONS|
                  `((|COMMON-LISP|::|DECLARE| ,@|SYSTEM|::|DECLARATIONS|))
                  '|COMMON-LISP|::|NIL|)
               (|COMMON-LISP|::|TAGBODY| ,@|SYSTEM|::|BODY-REST|)))
           ,|SYSTEM|::|RESULTFORM|))))))))
  '(#4# |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|COMMON-LISP|::|WITH-PACKAGE-ITERATOR|)
(|SYSTEM|::|%PUTD| '|COMMON-LISP|::|WITH-PACKAGE-ITERATOR|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |COMMON-LISP|::|WITH-PACKAGE-ITERATOR|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|WHOLE-FORM| |SYSTEM|::|<MACRO-FORM>|)
       (#1=#:|G21490| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G21491|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| #1# 2.))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|COMMON-LISP|::|WITH-PACKAGE-ITERATOR| #1#
          '#4=(|SYSTEM|::|NAME| |SYSTEM|::|PACK-LIST| |COMMON-LISP|::|&REST|
               |SYSTEM|::|TYPES|))
         #1#))
       (|SYSTEM|::|NAME| (|COMMON-LISP|::|CAR| #3#))
       (|SYSTEM|::|PACK-LIST| (|COMMON-LISP|::|CADR| . #5=(#3#)))
       (|SYSTEM|::|TYPES| (|COMMON-LISP|::|CDDR| . #5#))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|WITH-PACKAGE-ITERATOR|
       (|COMMON-LISP|::|UNLESS| |SYSTEM|::|TYPES|
        (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
         |SYSTEM|::|WHOLE-FORM| :|DETAIL| |SYSTEM|::|TYPES|
         (|SYSTEM|::|TEXT| "missing symbol types (~S/~S/~S) in ~S")
         ':|INTERNAL| ':|EXTERNAL| ':|INHERITED|
         '|COMMON-LISP|::|WITH-PACKAGE-ITERATOR|))
       (|COMMON-LISP|::|DOLIST| (|SYSTEM|::|SYMBOLTYPE| |SYSTEM|::|TYPES|)
        (|COMMON-LISP|::|CASE| |SYSTEM|::|SYMBOLTYPE|
         ((:|INTERNAL| :|EXTERNAL| :|INHERITED|))
         (|COMMON-LISP|::|T|
          (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
           |SYSTEM|::|WHOLE-FORM| :|DETAIL| |SYSTEM|::|SYMBOLTYPE|
           (|SYSTEM|::|TEXT|
            "~S: flag must be one of the symbols ~S, ~S, ~S, not ~S")
           '|COMMON-LISP|::|WITH-PACKAGE-ITERATOR| ':|INTERNAL| ':|EXTERNAL|
           ':|INHERITED| |SYSTEM|::|SYMBOLTYPE|))))
       (|COMMON-LISP|::|LET|
        ((|SYSTEM|::|ITERFUN| (|COMMON-LISP|::|GENSYM| "WPI-")))
        `(|COMMON-LISP|::|LET|
          ((,|SYSTEM|::|ITERFUN|
            (|SYSTEM|::|PACKAGE-ITERATOR-FUNCTION| ,|SYSTEM|::|PACK-LIST|
             ',(|COMMON-LISP|::|REMOVE-DUPLICATES| |SYSTEM|::|TYPES|))))
          (|COMMON-LISP|::|MACROLET|
           ((,|SYSTEM|::|NAME| |COMMON-LISP|::|NIL|
             '(|COMMON-LISP|::|FUNCALL| ,|SYSTEM|::|ITERFUN|)))
           ,@|SYSTEM|::|BODY|))))))))
  '(|COMMON-LISP|::|&WHOLE| |SYSTEM|::|WHOLE-FORM| #4# |COMMON-LISP|::|&BODY|
    |SYSTEM|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|PACKAGE-ITERATOR-FUNCTION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|PACK-LIST| |SYSTEM|::|SYMBOL-TYPES|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CUSTOM|::|*SYSTEM-PACKAGE-LIST*|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|SYSTEM|::|WITH-NO-PACKAGE-LOCK-INTERNAL|)
(|SYSTEM|::|%PUTD| '|SYSTEM|::|WITH-NO-PACKAGE-LOCK-INTERNAL|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |SYSTEM|::|WITH-NO-PACKAGE-LOCK-INTERNAL|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|PACKAGES|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |SYSTEM|::|WITH-NO-PACKAGE-LOCK-INTERNAL|
       (|COMMON-LISP|::|LET|
        ((|SYSTEM|::|LOCKED-PACKAGES| (|COMMON-LISP|::|GENSYM| "WOPL-")))
        `(|COMMON-LISP|::|LET|
          ((,|SYSTEM|::|LOCKED-PACKAGES|
            (|COMMON-LISP|::|REMOVE-IF-NOT| #'|EXT|::|PACKAGE-LOCK|
             ,|SYSTEM|::|PACKAGES|)))
          (|COMMON-LISP|::|UNWIND-PROTECT|
           (|COMMON-LISP|::|PROGN|
            (|COMMON-LISP|::|SETF|
             (|EXT|::|PACKAGE-LOCK| ,|SYSTEM|::|LOCKED-PACKAGES|)
             |COMMON-LISP|::|NIL|)
            ,@|SYSTEM|::|BODY|)
           (|COMMON-LISP|::|SETF|
            (|EXT|::|PACKAGE-LOCK| ,|SYSTEM|::|LOCKED-PACKAGES|)
            |COMMON-LISP|::|T|)))))))))
  '(|SYSTEM|::|PACKAGES| |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXT|::|WITHOUT-PACKAGE-LOCK|)
(|SYSTEM|::|%PUTD| '|EXT|::|WITHOUT-PACKAGE-LOCK|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXT|::|WITHOUT-PACKAGE-LOCK|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|PACKAGES|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |EXT|::|WITHOUT-PACKAGE-LOCK|
       `(|SYSTEM|::|WITH-NO-PACKAGE-LOCK-INTERNAL|
         ,(|COMMON-LISP|::|IF| |SYSTEM|::|PACKAGES| `',|SYSTEM|::|PACKAGES|
           '|CUSTOM|::|*SYSTEM-PACKAGE-LIST*|)
         ,@|SYSTEM|::|BODY|))))))
  '(|SYSTEM|::|PACKAGES| |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|SPECIAL| |COMMON-LISP|::|*MODULES*|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|MODULE-NAME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|PROVIDE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|NAME|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|REQUIRE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|MODULE-NAME| |COMMON-LISP|::|&OPTIONAL|
    (|COMMON-LISP|::|PATHNAME| |COMMON-LISP|::|NIL| |SYSTEM|::|P-GIVEN|))))
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP|::|BOOLE-CLR| '0.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP|::|BOOLE-SET| '15.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP|::|BOOLE-1| '10.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP|::|BOOLE-2| '12.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP|::|BOOLE-C1| '5.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP|::|BOOLE-C2| '3.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP|::|BOOLE-AND| '8.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP|::|BOOLE-IOR| '14.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP|::|BOOLE-XOR| '6.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP|::|BOOLE-EQV| '9.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP|::|BOOLE-NAND| '7.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP|::|BOOLE-NOR| '1.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP|::|BOOLE-ANDC1| '4.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP|::|BOOLE-ANDC2| '2.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP|::|BOOLE-ORC1| '13.)
(|SYSTEM|::|C-PROCLAIM-CONSTANT| '|COMMON-LISP|::|BOOLE-ORC2| '11.)
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|MAKE-BYTE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&KEY| |SYSTEM|::|SIZE| |COMMON-LISP|::|POSITION|)))
(|SYSTEM|::|C-PROCLAIM-CONSTANT|
 '|COMMON-LISP|::|LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT|
 '|COMMON-LISP|::|LEAST-POSITIVE-SHORT-FLOAT|)
(|SYSTEM|::|C-PROCLAIM-CONSTANT|
 '|COMMON-LISP|::|LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT|
 '|COMMON-LISP|::|LEAST-NEGATIVE-SHORT-FLOAT|)
(|SYSTEM|::|C-PROCLAIM-CONSTANT|
 '|COMMON-LISP|::|LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT|
 '|COMMON-LISP|::|LEAST-POSITIVE-SINGLE-FLOAT|)
(|SYSTEM|::|C-PROCLAIM-CONSTANT|
 '|COMMON-LISP|::|LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT|
 '|COMMON-LISP|::|LEAST-NEGATIVE-SINGLE-FLOAT|)
(|SYSTEM|::|C-PROCLAIM-CONSTANT|
 '|COMMON-LISP|::|LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT|
 '|COMMON-LISP|::|LEAST-POSITIVE-DOUBLE-FLOAT|)
(|SYSTEM|::|C-PROCLAIM-CONSTANT|
 '|COMMON-LISP|::|LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT|
 '|COMMON-LISP|::|LEAST-NEGATIVE-DOUBLE-FLOAT|)
(|SYSTEM|::|C-PROCLAIM|
 '(|EXT|::|CONSTANT-NOTINLINE|
   |COMMON-LISP|::|LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT|
   |COMMON-LISP|::|LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT|
   |COMMON-LISP|::|LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT|
   |COMMON-LISP|::|LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT|
   |COMMON-LISP|::|LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT|
   |COMMON-LISP|::|LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT|))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXT|::|DOSEQ|)
(|SYSTEM|::|%PUTD| '|EXT|::|DOSEQ|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXT|::|DOSEQ|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G21796| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G21797|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| #1# 2. 3.))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|EXT|::|DOSEQ| #1#
          '#4=(|SYSTEM|::|VAR| |SYSTEM|::|SEQFORM| |COMMON-LISP|::|&OPTIONAL|
               |SYSTEM|::|RESULTFORM|))
         #1#))
       (|SYSTEM|::|VAR| (|COMMON-LISP|::|CAR| #3#))
       (|SYSTEM|::|SEQFORM| (|COMMON-LISP|::|CADR| . #5=(#3#)))
       (|SYSTEM|::|RESULTFORM| (|COMMON-LISP|::|CADDR| . #5#))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |EXT|::|DOSEQ|
       (|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
        (|SYSTEM|::|BODY-REST| |SYSTEM|::|DECLARATIONS|)
        (|SYSTEM|::|PARSE-BODY| |SYSTEM|::|BODY|)
        (|COMMON-LISP|::|LET|
         ((|SYSTEM|::|SEQVAR| (|COMMON-LISP|::|GENSYM| "SEQ-")))
         `(|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|NIL|
           (|COMMON-LISP|::|LET| ((,|SYSTEM|::|SEQVAR| ,|SYSTEM|::|SEQFORM|))
            (|COMMON-LISP|::|LET| ((,|SYSTEM|::|VAR| |COMMON-LISP|::|NIL|))
             (|COMMON-LISP|::|DECLARE|
              (|COMMON-LISP|::|IGNORABLE| ,|SYSTEM|::|VAR|)
              ,@|SYSTEM|::|DECLARATIONS|)
             (|COMMON-LISP|::|MAP| |COMMON-LISP|::|NIL|
              #'(|COMMON-LISP|::|LAMBDA| (,|SYSTEM|::|VAR|)
                 ,@(|COMMON-LISP|::|IF| |SYSTEM|::|DECLARATIONS|
                    `((|COMMON-LISP|::|DECLARE| ,@|SYSTEM|::|DECLARATIONS|))
                    '|COMMON-LISP|::|NIL|)
                 (|COMMON-LISP|::|TAGBODY| ,@|SYSTEM|::|BODY-REST|))
              ,|SYSTEM|::|SEQVAR|)
             ,|SYSTEM|::|RESULTFORM|))))))))))
  '(#4# |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|LIST-TO-HT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|L0| |COMMON-LISP|::|LIST| |COMMON-LISP|::|&KEY| |SYSTEM|::|TEST|
    |SYSTEM|::|TEST-NOT| |SYSTEM|::|KEY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|UNION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|LIST1| |SYSTEM|::|LIST2| |COMMON-LISP|::|&REST|
    |COMMON-LISP|::|REST| |COMMON-LISP|::|&KEY| |SYSTEM|::|TEST|
    |SYSTEM|::|TEST-NOT| |SYSTEM|::|KEY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|NUNION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|LIST1| |SYSTEM|::|LIST2| |COMMON-LISP|::|&REST|
    |COMMON-LISP|::|REST| |COMMON-LISP|::|&KEY| |SYSTEM|::|TEST|
    |SYSTEM|::|TEST-NOT| |SYSTEM|::|KEY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|INTERSECTION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|LIST1| |SYSTEM|::|LIST2| |COMMON-LISP|::|&REST|
    |COMMON-LISP|::|REST| |COMMON-LISP|::|&KEY| |SYSTEM|::|TEST|
    |SYSTEM|::|TEST-NOT| |SYSTEM|::|KEY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|NINTERSECTION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|LIST1| |SYSTEM|::|LIST2| |COMMON-LISP|::|&REST|
    |COMMON-LISP|::|REST| |COMMON-LISP|::|&KEY| |SYSTEM|::|TEST|
    |SYSTEM|::|TEST-NOT| |SYSTEM|::|KEY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|SET-DIFFERENCE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|LIST1| |SYSTEM|::|LIST2| |COMMON-LISP|::|&REST|
    |COMMON-LISP|::|REST| |COMMON-LISP|::|&KEY| |SYSTEM|::|TEST|
    |SYSTEM|::|TEST-NOT| |SYSTEM|::|KEY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|NSET-DIFFERENCE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|LIST1| |SYSTEM|::|LIST2| |COMMON-LISP|::|&REST|
    |COMMON-LISP|::|REST| |COMMON-LISP|::|&KEY| |SYSTEM|::|TEST|
    |SYSTEM|::|TEST-NOT| |SYSTEM|::|KEY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|SET-EXCLUSIVE-OR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|LIST1| |SYSTEM|::|LIST2| |COMMON-LISP|::|&REST|
    |COMMON-LISP|::|REST| |COMMON-LISP|::|&KEY| |SYSTEM|::|TEST|
    |SYSTEM|::|TEST-NOT| |SYSTEM|::|KEY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|NSET-EXCLUSIVE-OR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|LIST1| |SYSTEM|::|LIST2| |COMMON-LISP|::|&REST|
    |COMMON-LISP|::|REST| |COMMON-LISP|::|&KEY| |SYSTEM|::|TEST|
    |SYSTEM|::|TEST-NOT| |SYSTEM|::|KEY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|SUBSETP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|LIST1| |SYSTEM|::|LIST2| |COMMON-LISP|::|&REST|
    |COMMON-LISP|::|REST| |COMMON-LISP|::|&KEY| |SYSTEM|::|TEST|
    |SYSTEM|::|TEST-NOT| |SYSTEM|::|KEY|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|SUBST-IF-THEN|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|NEWFUN| |SYSTEM|::|TESTFUN| |SYSTEM|::|TREE|
    |COMMON-LISP|::|&KEY| (|SYSTEM|::|KEY| #'|COMMON-LISP|::|IDENTITY|))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXT|::|DOHASH|)
(|SYSTEM|::|%PUTD| '|EXT|::|DOHASH|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXT|::|DOHASH|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G22181| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G22182|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| #1# 3. 4.))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|EXT|::|DOHASH| #1#
          '#4=(|SYSTEM|::|KEYVAR| |SYSTEM|::|VALUEVAR| |SYSTEM|::|HTFORM|
               |COMMON-LISP|::|&OPTIONAL| |SYSTEM|::|RESULTFORM|))
         #1#))
       (|SYSTEM|::|KEYVAR| (|COMMON-LISP|::|CAR| #3#))
       (|SYSTEM|::|VALUEVAR| (|COMMON-LISP|::|CADR| . #5=(#3#)))
       (|SYSTEM|::|HTFORM| (|COMMON-LISP|::|CADDR| . #5#))
       (|SYSTEM|::|RESULTFORM| (|COMMON-LISP|::|CADDDR| . #5#))
       (|SYSTEM|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |EXT|::|DOHASH|
       (|COMMON-LISP|::|MULTIPLE-VALUE-BIND|
        (|SYSTEM|::|BODY-REST| |SYSTEM|::|DECLARATIONS|)
        (|SYSTEM|::|PARSE-BODY| |SYSTEM|::|BODY|)
        (|COMMON-LISP|::|LET|
         ((|SYSTEM|::|HTVAR| (|COMMON-LISP|::|GENSYM| "HASH-TABLE-")))
         `(|COMMON-LISP|::|BLOCK| |COMMON-LISP|::|NIL|
           (|COMMON-LISP|::|LET| ((,|SYSTEM|::|HTVAR| ,|SYSTEM|::|HTFORM|))
            (|COMMON-LISP|::|LET|
             ((,|SYSTEM|::|KEYVAR| |COMMON-LISP|::|NIL|)
              (,|SYSTEM|::|VALUEVAR| |COMMON-LISP|::|NIL|))
             (|COMMON-LISP|::|DECLARE|
              (|COMMON-LISP|::|IGNORABLE| ,|SYSTEM|::|KEYVAR|
               ,|SYSTEM|::|VALUEVAR|)
              ,@|SYSTEM|::|DECLARATIONS|)
             (|COMMON-LISP|::|MAPHASH|
              #'(|COMMON-LISP|::|LAMBDA|
                 (,|SYSTEM|::|KEYVAR| ,|SYSTEM|::|VALUEVAR|)
                 ,@(|COMMON-LISP|::|IF| |SYSTEM|::|DECLARATIONS|
                    `((|COMMON-LISP|::|DECLARE| ,@|SYSTEM|::|DECLARATIONS|))
                    '|COMMON-LISP|::|NIL|)
                 (|COMMON-LISP|::|TAGBODY| ,@|SYSTEM|::|BODY-REST|))
              ,|SYSTEM|::|HTVAR|)
             ,|SYSTEM|::|RESULTFORM|))))))))))
  '(#4# |COMMON-LISP|::|&BODY| |SYSTEM|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|STRING-TRIM|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|CHARACTER-BAG| |COMMON-LISP|::|STRING|)))
(|SYSTEM|::|C-DEFUN| '|CS-COMMON-LISP|::|string-trim|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|CHARACTER-BAG| |COMMON-LISP|::|STRING|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|STRING-LEFT-TRIM|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|CHARACTER-BAG| |COMMON-LISP|::|STRING|)))
(|SYSTEM|::|C-DEFUN| '|CS-COMMON-LISP|::|string-left-trim|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|CHARACTER-BAG| |COMMON-LISP|::|STRING|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|STRING-RIGHT-TRIM|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|CHARACTER-BAG| |COMMON-LISP|::|STRING|)))
(|SYSTEM|::|C-DEFUN| '|CS-COMMON-LISP|::|string-right-trim|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|CHARACTER-BAG| |COMMON-LISP|::|STRING|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL|
   |CUSTOM|::|*LOAD-LOGICAL-PATHNAME-TRANSLATIONS-DATABASE*|))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|LOGICAL-PATHNAME-TRANSLATIONS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|HOST|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|SET-LOGICAL-PATHNAME-TRANSLATIONS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|HOST| |SYSTEM|::|TRANSLATIONS|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|LOAD-LPT-MANY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|FILE| |SYSTEM|::|HOST| |COMMON-LISP|::|&AUX|
    (|SYSTEM|::|*LOAD-LEVEL*|
     (|COMMON-LISP|::|1+| |SYSTEM|::|*LOAD-LEVEL*|)))))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|LOAD-LPT-ONE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|FILE| |SYSTEM|::|HOST| |COMMON-LISP|::|&AUX|
    (|SYSTEM|::|*LOAD-LEVEL*|
     (|COMMON-LISP|::|1+| |SYSTEM|::|*LOAD-LEVEL*|)))))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|LOAD-LOGICAL-PATHNAME-TRANSLATIONS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|HOST|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|%TIME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|NEW-REAL1| |SYSTEM|::|NEW-REAL2| |SYSTEM|::|NEW-RUN1|
    |SYSTEM|::|NEW-RUN2| |SYSTEM|::|NEW-GC1| |SYSTEM|::|NEW-GC2|
    |SYSTEM|::|NEW-SPACE1| |SYSTEM|::|NEW-SPACE2| |SYSTEM|::|NEW-GCCOUNT|
    |SYSTEM|::|OLD-REAL1| |SYSTEM|::|OLD-REAL2| |SYSTEM|::|OLD-RUN1|
    |SYSTEM|::|OLD-RUN2| |SYSTEM|::|OLD-GC1| |SYSTEM|::|OLD-GC2|
    |SYSTEM|::|OLD-SPACE1| |SYSTEM|::|OLD-SPACE2| |SYSTEM|::|OLD-GCCOUNT|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|SLEEP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|TIME|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|UTAG|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|JAHR|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|JAHR&TAG|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|UTTAG|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|ENCODE-UNIVERSAL-TIME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|SEKUNDE| |SYSTEM|::|MINUTE| |SYSTEM|::|STUNDE| |SYSTEM|::|TAG|
    |SYSTEM|::|MONAT| |SYSTEM|::|JAHR| |COMMON-LISP|::|&OPTIONAL|
    (|SYSTEM|::|ZEITZONE| |COMMON-LISP|::|NIL|) |COMMON-LISP|::|&AUX|
    |SYSTEM|::|MONAT3| |SYSTEM|::|JAHR3| |SYSTEM|::|JAHRTAG| |SYSTEM|::|UTTAG|
    |SYSTEM|::|UT|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|DECODE-UNIVERSAL-TIME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|UT| |COMMON-LISP|::|&OPTIONAL|
    (|SYSTEM|::|TIME-ZONE| |COMMON-LISP|::|NIL|) |COMMON-LISP|::|&AUX|
    |SYSTEM|::|SOMMERZEIT| |SYSTEM|::|ZEITZONE|)))
(|SYSTEM|::|C-DEFUN| '|COMMON-LISP|::|GET-DECODED-TIME|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|CONCAT-PNAMES|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|SYSTEM|::|OBJ1| |SYSTEM|::|OBJ2|)))
(|SYSTEM|::|C-DEFUN| '|SYSTEM|::|WRITE-TO-SHORT-STRING|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|SYSTEM|::|OBJECT| |COMMON-LISP|::|MAX|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|EXT|::|MEMOIZED|)
(|SYSTEM|::|%PUTD| '|EXT|::|MEMOIZED|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |EXT|::|MEMOIZED|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "(MEMOIZED form) memoizes the result of FORM from its first evaluation."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.
       2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|SYSTEM|::|FORM| (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |EXT|::|MEMOIZED|
       `(|COMMON-LISP|::|LET|
         ((|SYSTEM|::|MEMORY|
           (|COMMON-LISP|::|IF|
            (|COMMON-LISP|::|EVAL-WHEN| (|COMMON-LISP|::|EVAL|)
             |COMMON-LISP|::|T|)
            ',(|COMMON-LISP|::|CONS| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|)
            ,(|COMMON-LISP|::|LIST| '|COMMON-LISP|::|LOAD-TIME-VALUE|
              '(|COMMON-LISP|::|CONS| |COMMON-LISP|::|NIL|
                |COMMON-LISP|::|NIL|)))))
         (|COMMON-LISP|::|UNLESS| (|COMMON-LISP|::|CAR| |SYSTEM|::|MEMORY|)
          (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|CDR| |SYSTEM|::|MEMORY|)
           ,|SYSTEM|::|FORM|)
          (|COMMON-LISP|::|SETF| (|COMMON-LISP|::|CAR| |SYSTEM|::|MEMORY|)
           |COMMON-LISP|::|T|))
         (|COMMON-LISP|::|CDR| |SYSTEM|::|MEMORY|)))))))
  '(|SYSTEM|::|FORM|)))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CUSTOM|::|*ERROR-HANDLER*|))
